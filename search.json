[{"path":"https://emf-creaf.github.io/medfate/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"An ongoing project","title":"An ongoing project","text":"R package medfate associated R packages viewed ongoing research project development forest ecosystem modelling tools. medfate R package result collaborative work modellers experts different disciplines. Since successful modelling projects involve long-term investments participation multiple teams, open expanding set people contributing project. Normally, contributors start participating model users, may soon ideas improve model encounter issues solved.","code":""},{"path":"https://emf-creaf.github.io/medfate/CONTRIBUTING.html","id":"contributing-to-medfate","dir":"","previous_headings":"","what":"Contributing to medfate","title":"An ongoing project","text":"Contributions development medfate can done different aspects: Model design formulation: expertise includes processes modelled package feel expertise helpful improve package, welcome contact us! familiarized Git, GitHub R package development, can fork package, make changes pull request (see ). Otherwise, forms collaboration can established. contributions welcome, want multiple, diverging, versions simulation models. Hence, want centralize review modifications, former package functionality lost. Model parameterization: Finding suitable parameter values trait-based models hard, requires gathering data multiple databases. Efforts find species parameter values required medfate can made available others including new species parameter tables, SpParamsMED. currently developing companion package called traits4models helpful define populate new species parameter tables. Model evaluation: Simulation models tested extensively, lot done respect case medfate. Hence, appreciate help area, example pointing interesting validation data sets. lead new package vignettes showing performance model different situations.","code":""},{"path":"https://emf-creaf.github.io/medfate/CONTRIBUTING.html","id":"reporting-bugs-and-suggesting-enchancements","dir":"","previous_headings":"","what":"Reporting bugs and suggesting enchancements","title":"An ongoing project","text":"want report bug suggest enhancement, ’s good idea file issue medfate repository GitHub. ’ve found bug, please file issue illustrates bug minimal reprex.","code":""},{"path":"https://emf-creaf.github.io/medfate/CONTRIBUTING.html","id":"code-contributions","dir":"","previous_headings":"Reporting bugs and suggesting enchancements","what":"Code contributions","title":"An ongoing project","text":"making contributions package R C++ code, make sure someone medfate team agrees change suggest needed. Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"emf-creaf/medfate\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://emf-creaf.github.io/medfate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://emf-creaf.github.io/medfate/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://emf-creaf.github.io/medfate/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://emf-creaf.github.io/medfate/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://emf-creaf.github.io/medfate/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://emf-creaf.github.io/medfate/articles/evaluation/StandLevelEvaluation.html","id":"introduction","dir":"Articles > Evaluation","previous_headings":"","what":"Introduction","title":"Model evaluation in experimental plots","text":"document presents medfate (ver. 4.8.0) model evaluation results stand-level, using data set 20 experimental forest plots. main source observed data SAPFLUXNET database (Poyatos et al. 2021) FLUXNET 2015 dataset (Pastorello et al. 2020).","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/evaluation/StandLevelEvaluation.html","id":"list-of-sites","dir":"Articles > Evaluation","previous_headings":"Introduction","what":"List of sites","title":"Model evaluation in experimental plots","text":"table lists experimental forest plots used report data sources available.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/evaluation/StandLevelEvaluation.html","id":"parametrization-and-simulations","dir":"Articles > Evaluation","previous_headings":"Introduction","what":"Parametrization and simulations","title":"Model evaluation in experimental plots","text":"Forest water balance simulations (.e. function spwb()) conducted using three transpiration modes (.e. Granier, Sperry Sureau). set control parameters modified defaults simulations following: Soil characteristics tuned modulate total available water fit observed saturation residual moisture values, calibration exercises conducted. available, however, local leaf area sapwood area ratios used. Thus, evaluation exercise meant less representative simulations default species-level trait data.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/evaluation/StandLevelEvaluation.html","id":"evaluation-variables","dir":"Articles > Evaluation","previous_headings":"Introduction","what":"Evaluation variables","title":"Model evaluation in experimental plots","text":"table lists set predicted variables evaluated data sources used:","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/evaluation/StandLevelEvaluation.html","id":"structure-of-site-reports","dir":"Articles > Evaluation","previous_headings":"Introduction","what":"Structure of site reports","title":"Model evaluation in experimental plots","text":"following contains many sections forest stands included evaluation. following sub-sections reported stand: General information: General information site, topography, soil climate, well data sources used. Model inputs: Description model inputs (vegetation, soil, custom species parameters parameterization remarks). Climate: Graphical description climate inputs predicted soil/canopy temperatures (Sperry). Evaluation results: Evaluation results presented variables available measurements.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"introduction","dir":"Articles > Intro","previous_headings":"","what":"Introduction","title":"Package overview","text":"able anticipate impact global change forest ecosystems one major environmental challenges contemporary societies. However, uncertainties forests function practical constraints integrate available information prevent development robust reliable predictive models. Despite amount knowledge accumulated functioning dynamics Mediterranean forests, scientists make coordinate efforts address challenge integrating different global change drivers modelling framework useful research applications. R package medfate designed study characteristics simulate functioning structural dynamics forest ecosystems. Climatic conditions main environmental drivers, particular focus drought fire impacts Mediterranean conditions. Representation vegetation accounts structural compositional variation spatially-explicit (.e. trees shrubs explicit coordinates within forest stands). representation chosen package functions can easily applied forest plot data national forest inventories. Since package intends facilitate predictions forest functioning also forest structural compositional dynamics, taxonomic identity plants stored, parameter values need provided taxonomic entity (package used functional groups). Currently, distributed R package include vignette, package website includes articles covering model simulation examples, sensitivity analysis, parameter specification, model evaluation applications. addition, complete documentation design formulation simulation models can found medfate reference book.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"dynamic-simulation-functions","dir":"Articles > Intro","previous_headings":"","what":"Dynamic simulation functions","title":"Package overview","text":"Three main kinds simulations can done medfate, model building previous ones.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"waterenergy-balance","dir":"Articles > Intro","previous_headings":"Dynamic simulation functions","what":"Water/energy balance","title":"Package overview","text":"Eco-hydrological processes fundamental simulation models included medfate package. particular, package allows simulation water balance soils plants within forest stands. Processes affecting soil water content include rainfall, canopy interception, infiltration runoff, percolation deep drainage, soil evaporation plant transpiration. medfate, soil water balance forest primarily used predict drought stress living plants . Soil/plant water balance can studied given forest stand using function spwb(). Function spwb() can run using different level complexity. basic approach focuses soil water balance strongly simplifies processes underlying plant transpiration. contrast, advanced approach computationally demanding provides explicit simulation processes regulating stomatal behaviour water transport plant, also requires explicit energy balance. Examples simulation spwb() two approaches provided articles Basic water balance Advanced water energy balance, respectively.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"carbon-balance-growth-and-mortality","dir":"Articles > Intro","previous_headings":"Dynamic simulation functions","what":"Carbon balance, growth and mortality","title":"Package overview","text":"Changes leaf area plant growth key evaluate influence climatic conditions forest structure function. Processes affecting changes leaf area plant size involved water, energy carbon balances, well directly affecting meristematic activity (e.g. phenology sink limitations). Carbon balance arises interplay carbon assimilation via photosynthesis respiration costs required maintenance existing cells formation new tissue. Water carbon balances coupled regulation gas exchange done leaf stomata. Plant growth affected availability carbon (source limitation), also temperature water status (sink limitation). addition, water carbon status cohort plants can increase likelihood mortality, resulting decrease number individuals cohort. Package medfate allows simulating daily water/carbon balances, growth mortality set cohorts (competing light water) single forest stand using function growth(), adds carbon balance, growth mortality processes simulated function spwb(). , function growth() can run using two levels complexity match two transpiration modes function spwb(). example simulation growth() provided article Forest growth.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"forest-dynamics","dir":"Articles > Intro","previous_headings":"Dynamic simulation functions","what":"Forest dynamics","title":"Package overview","text":"Changes forest structure composition result interplay demographic processes (growth, mortality recruitment) may include disturbances forest management. package includes function fordyn(), allows simulating processes yearly time steps given forest stand. Function fordyn() builds previous two simulation functions incorporates recruitment forest management set simulated processes. example simulation fordyn() provided article Forest dynamics.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"plots-summaries-and-post-processing","dir":"Articles > Intro","previous_headings":"","what":"Plots, summaries and post-processing","title":"Package overview","text":"Simulation models produce multiple outputs important learn visualize extract information analysis. simulation function returns output object whose S3 class name simulation function (e.g. spwb() returns object class spwb). Implementations summary() plot() available simulation output objects, facilitates displaying summarizing information. generic function shinyplot() (well implementation different output objects) allows interactive exploration simulation results. Model outputs can extracted simple data.frame objects function extract(). Additional package function meant used simulation results produce time series additional (derived) properties: droughtStress() : Plant/stand drought stress indices waterUseEfficiency() : Water use efficiency metrics resistances() : Hydraulic resistances water transport fireHazard() : Potential fire behaviour (see )","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"fuel-properties-and-fire-hazard","dir":"Articles > Intro","previous_headings":"","what":"Fuel properties and fire hazard","title":"Package overview","text":"Vegetation functioning dynamics strong, complex, effects fire hazard. one hand, growth death organs individuals changes amount standing live dead fuels, well downed dead fuels. , day--day changes soil plant water content changes physical properties fuel, notably fuel moisture content. Package medfate provides functions estimate fuel properties potential fire behaviour forest inventory plots. Specifically, function fuel_stratification() estimates division live fuels stand understory canopy strata; fuel_FCCS() calculates fuel characteristics forest object following adaptation protocols described Fuel Characteristics Classification System (Prichard et al. 2013). FCCS, fuelbed divided six strata, including canopy, shrub, herbaceous vegetation, dead woody materials, leaf litter ground fuels. except ground fuels considered . intensity burning depends several factors, including topography, wind conditions, fuel structure moisture content, determined antecedent current meteorological conditions. modification Rothermel’s (1972) model used function fire_FCCS() calculate intensity surface fire reaction rate fire spread surface fires assuming steady-state fire. quantities dependent fuel characteristics, windspeed direction, topographic slope aspect.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"internal-package-functions","dir":"Articles > Intro","previous_headings":"","what":"Internal package functions","title":"Package overview","text":"Package medfate contains many functions visible reference lists. Since v.4.3.2 multiple functions labelled internal, meaning accessible documented, visible reference list, sheer number functions overwhelm users.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"plant-species-and-stand-attributes","dir":"Articles > Intro","previous_headings":"Internal package functions","what":"Plant, species and stand attributes","title":"Package overview","text":"package includes number functions examine properties plants conforming forest object, summary functions stand level vertical profiles several physical properties: plant_*: Cohort-level information (species name, id, leaf area index, height…). species_*: Species-level attributes (e.g. basal area, leaf area index). stand_*: Stand-level attributes (e.g. basal area). vprofile_*: Vertical profiles (light, wind, fuel density, leaf area density).","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"sub-model-functions","dir":"Articles > Intro","previous_headings":"Internal package functions","what":"Sub-model functions","title":"Package overview","text":"Many functions included medfate internally called simulation functions. made available user facilitate deeper understanding different sub-models creative use package, users can ignore . Sub-model functions grouped subject, included name function. different sub-model functions (subject): biophysics_*: Physical biophysical utility functions. carbon_*: Carbon balance. fire_*: Fire severity. fuel_*: Fuel properties. hydraulics_*: Plant hydraulics. hydrology_*: Canopy soil hydrology (rainfall interception, soil evaporation, soil infiltration). light_*: Radiation extinction absorption. moisture_*: Live tissue moisture. pheno_*: Leaf phenology. photo_*: Leaf photosynthesis. root_*: Root distribution conductance calculations. soil_*: Soil hydraulics thermodynamics. transp_*: Stomatal regulation resulting transpiration/photosynthesis. wind_*: Canopy turbulence.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PackageOverview.html","id":"companion-packages","dir":"Articles > Intro","previous_headings":"","what":"Companion packages","title":"Package overview","text":"development medfate functions originally placed moved specialized packages evolve together medfate: Package meteoland allows generating daily weather input simulation models medfate. Package medfateland extends medfate allowing simulations performed spatially explicit context. Package traits4models provides functions help creating species parameter inputs medfate medfateland simulation functions. set R packages developed maintained Ecosystem Modelling Facility CREAF (Spain).","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PreparingInputs.html","id":"about-this-article","dir":"Articles > Intro","previous_headings":"","what":"About this article","title":"Preparing model inputs","text":"companion article Understanding model inputs explained vegetation, soil weather structures needed run simulation models included medfate. Preparing inputs simulations medfate straightforward, requires obtaining reshaping data vegetation, soil weather. Therefore, article illustrates common issues arise process preparing inputs, user aware processing /data. begin loading packages medfate meteoland:","code":"library(medfate) #> Package 'medfate' [ver. 4.8.0] library(meteoland) #> Package 'meteoland' [ver. 2.2.2]"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PreparingInputs.html","id":"buildingmanipulating-forest-objects","dir":"Articles > Intro","previous_headings":"","what":"Building/manipulating forest objects","title":"Preparing model inputs","text":"section show build manipulate objects class forest, use package medfate, starting table containing forest inventory data.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PreparingInputs.html","id":"poblet-tree-data-set","dir":"Articles > Intro","previous_headings":"Building/manipulating forest objects","what":"Poblet tree data set","title":"Preparing model inputs","text":"Package medfate includes small dataset tree data, corresponding dense holm oak forest Poblet (Catalonia, Spain). result abandonment previous coppicing exploitation, high density stems per individual. begin loading tree data Poblet: inspect content, example using: data frame includes tree data corresponding three forest inventories: POBL_CTL corresponds oak forest treatment done (control), whereas POBL_THI_BEF POBL_THI_AFT two forest inventories conducted forest plot, thinning intervention reduce number stems.","code":"data(\"poblet_trees\") summary(poblet_trees) #>   Plot.Code            Indv.Ref       Species           Diameter.cm    #>  Length:717         Min.   :  1.0   Length:717         Min.   : 7.50   #>  Class :character   1st Qu.: 45.0   Class :character   1st Qu.: 9.10   #>  Mode  :character   Median : 97.0   Mode  :character   Median :11.10   #>                     Mean   :103.4                      Mean   :11.62   #>                     3rd Qu.:156.0                      3rd Qu.:13.40   #>                     Max.   :261.0                      Max.   :26.00 table(poblet_trees$Plot.Code) #>  #>     POBL_CTL POBL_THI_AFT POBL_THI_BEF  #>          267          189          261"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PreparingInputs.html","id":"mapping-trees-from-the-control-forest","dir":"Articles > Intro","previous_headings":"Building/manipulating forest objects","what":"Mapping trees from the control forest","title":"Preparing model inputs","text":"initialize empty forest object using function emptyforest() package medfate: Now fill data element treeData forest object. , need define mapping column names poblet_trees variables treeData. mapping can defined using named string vector, .e. vector element names variable names treeData vector elements strings variable names poblet_trees: can now replace empty treeData pobl_ctl using functions subset() forest_mapTreeTable(): can inspect result using: data missing, worry now. One way evaluate tree data correctly specified display summary forest object using summary function defined medfate object class: values stand density stand basal area low dense forest, indicates something needs corrected. point, important remember forest objects need density trees specified stems per hectare. conducted tree data mapping without indicating area sampled plot. told forest stand sampling done using circular plot whose radius 15 m. can calculate sampled area using: use information map tree data , specify parameter plot_size_x: run summary: results much higher basal area density, expected dense oak forest resulting abandoned old coppice. Another issue see percentage PAR SWR reaches ground, missing values. indicates medfate calculate light extinction profile, case tree heights missing. Thus, somehow estimate tree heights, example using allometric relationship: trees 5 10 m height. tree heights defined, can include mapping: rerun tree data mapping: Now summary control forest stand looks like: fraction PAR/SWR reaching ground low, expected dense forest.","code":"pobl_ctl <- emptyforest() pobl_ctl #> $treeData #> [1] Species DBH     Height  N       Z50     Z95     #> <0 rows> (or 0-length row.names) #>  #> $shrubData #> [1] Species Height  Cover   Z50     Z95     #> <0 rows> (or 0-length row.names) #>  #> $herbCover #> [1] NA #>  #> $herbHeight #> [1] NA #>  #> $seedBank #> [1] Species Percent #> <0 rows> (or 0-length row.names) #>  #> attr(,\"class\") #> [1] \"forest\" \"list\" mapping <- c(\"Species.name\" = \"Species\", \"DBH\" = \"Diameter.cm\") pobl_ctl$treeData <- forest_mapTreeTable(subset(poblet_trees, Plot.Code==\"POBL_CTL\"),                                           mapping_x = mapping, SpParams = SpParamsMED) summary(pobl_ctl$treeData) #>    Species                N      Height             DBH          Z50          #>  Length:267         Min.   :1   Mode:logical   Min.   : 7.50   Mode:logical   #>  Class :character   1st Qu.:1   NA's:267       1st Qu.: 9.00   NA's:267       #>  Mode  :character   Median :1                  Median :10.70                  #>                     Mean   :1                  Mean   :11.53                  #>                     3rd Qu.:1                  3rd Qu.:13.30                  #>                     Max.   :1                  Max.   :26.00                  #>    Z95          #>  Mode:logical   #>  NA's:267       #>                 #>                 #>                 #> summary(pobl_ctl, SpParamsMED) #> Tree BA (m2/ha): 3.0179815  adult trees: 3.0179815  saplings: 0  #> Density (ind/ha) adult trees: 267  saplings: 0  shrubs (estimated): 0  #> Cover (%) adult trees: 42.1205627  saplings: 0  shrubs: 0  herbs: 0  #> LAI (m2/m2) total: 0.544959  adult trees: 0.544959  saplings: 0  shrubs: 0  herbs: 0  #> Fuel loading (kg/m2) total: 0.1421746  adult trees: 0.1421746  saplings: 0  shrubs: 0  herbs: 0  #> PAR ground (%): NA  SWR ground (%): NA sampled_area <- pi*15^2 pobl_ctl$treeData <- forest_mapTreeTable(subset(poblet_trees, Plot.Code==\"POBL_CTL\"),                                          mapping_x = mapping, SpParams = SpParamsMED,                                           plot_size_x = sampled_area) summary(pobl_ctl, SpParamsMED) #> Tree BA (m2/ha): 42.6957047  adult trees: 42.6957047  saplings: 0  #> Density (ind/ha) adult trees: 3777.277316  saplings: 0  shrubs (estimated): 0  #> Cover (%) adult trees: 100  saplings: 0  shrubs: 0  herbs: 0  #> LAI (m2/m2) total: 5.6770407  adult trees: 5.6770407  saplings: 0  shrubs: 0  herbs: 0  #> Fuel loading (kg/m2) total: 1.493419  adult trees: 1.493419  saplings: 0  shrubs: 0  herbs: 0  #> PAR ground (%): NA  SWR ground (%): NA poblet_trees$Height.cm <- 100 * 1.806*poblet_trees$Diameter.cm^0.518 summary(poblet_trees$Height.cm) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   512.9   566.9   628.3   638.0   692.7   976.5 mapping = c(\"Species.name\" = \"Species\", \"DBH\" = \"Diameter.cm\", \"Height\" = \"Height.cm\") pobl_ctl$treeData <- forest_mapTreeTable(subset(poblet_trees, Plot.Code==\"POBL_CTL\"),                                          mapping_x = mapping, SpParams = SpParamsMED,                                           plot_size_x = sampled_area) summary(pobl_ctl, SpParamsMED) #> Tree BA (m2/ha): 42.6957047  adult trees: 42.6957047  saplings: 0  #> Density (ind/ha) adult trees: 3777.277316  saplings: 0  shrubs (estimated): 0  #> Cover (%) adult trees: 100  saplings: 0  shrubs: 0  herbs: 0  #> LAI (m2/m2) total: 5.6770407  adult trees: 5.6770407  saplings: 0  shrubs: 0  herbs: 0  #> Fuel loading (kg/m2) total: 1.493419  adult trees: 1.493419  saplings: 0  shrubs: 0  herbs: 0  #> PAR ground (%): NA  SWR ground (%): NA"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PreparingInputs.html","id":"mapping-trees-from-the-managed-forest","dir":"Articles > Intro","previous_headings":"Building/manipulating forest objects","what":"Mapping trees from the managed forest","title":"Preparing model inputs","text":"can repeat mapping managed forest plot, two codes corresponding thinning intervention. Let us first address pre-thinning state: warning raised species names parsed. case, reason name used downy oak (Quercus humilis) synonym needs replaced accepted name (Quercus pubescens), can : Now repeat mapping: Like control plot, statistics indicate dense oak forest. can repeat operations forest plot thinning intervention: Note decrease tree density basal area, increase light reaching ground, despite estimated leaf area index still high.","code":"pobl_thi_bef  <- emptyforest() pobl_thi_bef$treeData <- forest_mapTreeTable(subset(poblet_trees, Plot.Code==\"POBL_THI_BEF\"),                                              mapping_x = mapping, SpParams = SpParamsMED,                                               plot_size_x = sampled_area) #> Warning in forest_mapTreeTable(subset(poblet_trees, Plot.Code == #> \"POBL_THI_BEF\"), : Taxon names that were not matched: Quercus humilis. poblet_trees$Species[poblet_trees$Species==\"Quercus humilis\"] <- \"Quercus pubescens\" pobl_thi_bef$treeData <- forest_mapTreeTable(subset(poblet_trees, Plot.Code==\"POBL_THI_BEF\"),                                              mapping_x = mapping, SpParams = SpParamsMED,                                               plot_size_x = sampled_area)  summary(pobl_thi_bef, SpParamsMED) #> Tree BA (m2/ha): 40.9224267  adult trees: 40.9224267  saplings: 0  #> Density (ind/ha) adult trees: 3692.3946797  saplings: 0  shrubs (estimated): 0  #> Cover (%) adult trees: 100  saplings: 0  shrubs: 0  herbs: 0  #> LAI (m2/m2) total: 5.5833511  adult trees: 5.5833511  saplings: 0  shrubs: 0  herbs: 0  #> Fuel loading (kg/m2) total: 1.4629714  adult trees: 1.4629714  saplings: 0  shrubs: 0  herbs: 0  #> PAR ground (%): NA  SWR ground (%): NA pobl_thi_aft = emptyforest() pobl_thi_aft$treeData <- forest_mapTreeTable(subset(poblet_trees, Plot.Code==\"POBL_THI_AFT\"),                                              mapping_x = mapping, SpParams = SpParamsMED,                                               plot_size_x = sampled_area) summary(pobl_thi_aft, SpParamsMED) #> Tree BA (m2/ha): 31.6162035  adult trees: 31.6162035  saplings: 0  #> Density (ind/ha) adult trees: 2673.8030439  saplings: 0  shrubs (estimated): 0  #> Cover (%) adult trees: 100  saplings: 0  shrubs: 0  herbs: 0  #> LAI (m2/m2) total: 4.5328748  adult trees: 4.5328748  saplings: 0  shrubs: 0  herbs: 0  #> Fuel loading (kg/m2) total: 1.1915321  adult trees: 1.1915321  saplings: 0  shrubs: 0  herbs: 0  #> PAR ground (%): NA  SWR ground (%): NA"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PreparingInputs.html","id":"reducing-the-number-of-woody-cohorts","dir":"Articles > Intro","previous_headings":"Building/manipulating forest objects","what":"Reducing the number of woody cohorts","title":"Preparing model inputs","text":"far considered tree record correspond woody cohort. can check number tree cohorts forest structure using: large amount cohorts can slow done simulations considerably. Hence, advisable lump coarser woody cohorts. One way via function forest_mergeTrees() package medfate: default, function pool tree cohorts species diameter class (defined every 5 cm). can check new number tree cohorts using : can check whether stand properties altered using summary() function: Function forest_mergeTrees() preserve stand density basal area stand description merging cohorts. properties like leaf area index may slightly modified. general, advisable reduce number woody cohorts running simulation models medfate.","code":"nrow(pobl_ctl$treeData) #> [1] 267 nrow(pobl_thi_bef$treeData) #> [1] 261 nrow(pobl_thi_aft$treeData) #> [1] 189 pobl_ctl <- forest_mergeTrees(pobl_ctl) pobl_thi_bef <- forest_mergeTrees(pobl_thi_bef) pobl_thi_aft <- forest_mergeTrees(pobl_thi_aft) nrow(pobl_ctl$treeData) #> [1] 9 nrow(pobl_thi_bef$treeData) #> [1] 11 nrow(pobl_thi_aft$treeData) #> [1] 8 summary(pobl_thi_aft, SpParamsMED) #> Tree BA (m2/ha): 31.6162035  adult trees: 31.6162035  saplings: 0  #> Density (ind/ha) adult trees: 2673.8030439  saplings: 0  shrubs (estimated): 0  #> Cover (%) adult trees: 100  saplings: 0  shrubs: 0  herbs: 0  #> LAI (m2/m2) total: 4.0969956  adult trees: 4.0969956  saplings: 0  shrubs: 0  herbs: 0  #> Fuel loading (kg/m2) total: 1.0724731  adult trees: 1.0724731  saplings: 0  shrubs: 0  herbs: 0  #> PAR ground (%): NA  SWR ground (%): NA"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PreparingInputs.html","id":"retrieving-soilgrids-data","dir":"Articles > Intro","previous_headings":"","what":"Retrieving SoilGrids data","title":"Preparing model inputs","text":"soil properties vary strongly fine spatial scales, ideally soil physical attributes measured samples taken forest stand simulated. users lacking data, soil properties modelled larger scales available via SoilGrids.org. Retrieval soil properties SoilGrids can done using function add_soilgrids() package medfateland. Assuming know plot coordinates, first create object sf (see package sf): function obtain, location, data frame soil properties: data frame physical description soil. Initialization additional parameters state variables done using function soil(): can inspect soil definition using: important remember SoilGrids may underestimate amount rocks soil. soil samples (used generate global database) normally contain large stones blocks. Hence, realistic simulations reduce soil water holding capacity increasing column rfc. example, assume third layer contains 80% rocks: rebuild soil object inspect properties see effect soil water holding capacity soil extractable water:","code":"sf_pt <- sf::st_sfc(sf::st_point(c(1.0219, 41.3443)), crs = 4326) pobl_soil_props #>   widths     clay     sand       om       bd  rfc #> 1    300 26.43333 31.06667 4.133333 1.166667 18.0 #> 2    700 30.40000 29.75000 0.900000 1.440000 19.2 #> 3   1000 31.60000 29.60000 0.610000 1.500000 20.9 pobl_soil <- soil(pobl_soil_props) print(pobl_soil) #>   widths     sand     clay      usda       om nitrogen       bd  rfc     macro #> 1    300 31.06667 26.43333      Loam 4.133333       NA 1.166667 18.0 0.2163613 #> 2    700 29.75000 30.40000 Clay loam 0.900000       NA 1.440000 19.2 0.0864700 #> 3   1000 29.60000 31.60000 Clay loam 0.610000       NA 1.500000 20.9 0.0582520 #>        Ksat VG_alpha     VG_n VG_theta_res VG_theta_sat W Temp #> 1 22640.566 91.26253 1.358526        0.041    0.5167602 1   NA #> 2  3628.900 93.20462 1.311739        0.041    0.4402203 1   NA #> 3  2584.303 89.51572 1.298990        0.041    0.4234211 1   NA pobl_soil_props$rfc[3] <- 80 pobl_soil <- soil(pobl_soil_props) print(pobl_soil) #>   widths     sand     clay      usda       om nitrogen       bd  rfc     macro #> 1    300 31.06667 26.43333      Loam 4.133333       NA 1.166667 18.0 0.2163613 #> 2    700 29.75000 30.40000 Clay loam 0.900000       NA 1.440000 19.2 0.0864700 #> 3   1000 29.60000 31.60000 Clay loam 0.610000       NA 1.500000 80.0 0.0582520 #>        Ksat VG_alpha     VG_n VG_theta_res VG_theta_sat W Temp #> 1 22640.566 91.26253 1.358526        0.041    0.5167602 1   NA #> 2  3628.900 93.20462 1.311739        0.041    0.4402203 1   NA #> 3  2584.303 89.51572 1.298990        0.041    0.4234211 1   NA"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/PreparingInputs.html","id":"interpolating-weather","dir":"Articles > Intro","previous_headings":"","what":"Interpolating weather","title":"Preparing model inputs","text":"soil information often scarce uncertain, obtaining daily weather data suitable simulations straightforward either. illustrate one way obtaining data using package meteoland. begin adding topographic variables sf object: difficult part using package meteoland assemble reference weather data surface weather stations socalled interpolator object (class stars). Please see meteoland package documentation learn create interpolator objects. assume object already available, using example object provided meteoland package. interpolator, obtaining interpolated weather set target points rather straightforward using function interpolate_data() meteoland: output function interpolate_data() object class sf: can access weather data frame subsetting appropriate element interpolated_data:","code":"pobl_spt <- sf::st_sf(sf_pt) |>             dplyr::mutate(elevation = 850,                           slope = 15.1,                            aspect = 15)  pobl_spt #> Simple feature collection with 1 feature and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 1.0219 ymin: 41.3443 xmax: 1.0219 ymax: 41.3443 #> Geodetic CRS:  WGS 84 #>                    sf_pt elevation slope aspect #> 1 POINT (1.0219 41.3443)       850  15.1     15 data(\"meteoland_interpolator_example\") meteo <- interpolate_data(pobl_spt, meteoland_interpolator_example) #> ℹ Starting interpolation... #> ℹ Temperature interpolation is needed also... #> • Interpolating temperature... #> ℹ Precipitation interpolation is needed also... #> • Interpolating precipitation... #> ℹ Relative humidity interpolation is needed also... #> • Interpolating relative humidity... #> ℹ Radiation calculation is needed also... #> • Calculating radiation... #> ℹ Wind interpolation is needed also... #> • Interpolating wind... #> • Calculating PET... #> ✔ Interpolation done... meteo #> Simple feature collection with 1 feature and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 1.0219 ymin: 41.3443 xmax: 1.0219 ymax: 41.3443 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 5 #>              sf_pt elevation slope aspect interpolated_data  #>        <POINT [°]>     <dbl> <dbl>  <dbl> <list>             #> 1 (1.0219 41.3443)       850  15.1     15 <tibble [30 × 13]> pobl_weather <- meteo$interpolated_data[[1]] head(pobl_weather) #> # A tibble: 6 × 13 #>   dates                 DOY MeanTemperature MinTemperature MaxTemperature #>   <dttm>              <dbl>           <dbl>          <dbl>          <dbl> #> 1 2022-04-01 00:00:00    91            3.37         -2.21            6.99 #> 2 2022-04-02 00:00:00    92            3.60         -4.01            8.54 #> 3 2022-04-03 00:00:00    93            2.33         -7.67            8.83 #> 4 2022-04-04 00:00:00    94            4.16         -4.46            9.76 #> 5 2022-04-05 00:00:00    95            5.86         -5.21           13.1  #> 6 2022-04-06 00:00:00    96            9.16          0.472          14.8  #> # ℹ 8 more variables: Precipitation <dbl>, MeanRelativeHumidity <dbl>, #> #   MinRelativeHumidity <dbl>, MaxRelativeHumidity <dbl>, Radiation <dbl>, #> #   WindSpeed <dbl>, WindDirection <dbl>, PET <dbl>"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"about-this-article","dir":"Articles > Intro","previous_headings":"","what":"About this article","title":"Understanding model inputs","text":"process-based model forest functioning dynamics needs information climate, vegetation soils forest stand simulated. Moreover, since medfate allows simulating cohorts belonging different species, species-specific parameters also needed. Finally, simulation control parameters may need changed, depending goals simulation. article explains data structures required input run simulations using package user can understand . companion article Preparing model inputs provides practical example illustrate create model inputs common problems encountered.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"species-parameter-tables","dir":"Articles > Intro","previous_headings":"","what":"Species parameter tables","title":"Understanding model inputs","text":"Simulation models medfate require data frame species (taxon) parameter values. package includes default data sets readily used. values parameter table obtained global trait data bases, bibliographic searches, fit empirical data expert-based guesses: large number parameters (columns) can found species parameter tables. parameters needed models. can find parameter definitions table SpParamsDefinition, reproduce : order understand role parameters model, read details model design formulation included medfatebook. Details regarding species parameter tables build can found traits4models.","code":"data(\"SpParamsMED\") # For the Spanish forest inventory (including taxon groups)"},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"forest-objects","dir":"Articles > Intro","previous_headings":"Vegetation","what":"Forest objects","title":"Understanding model inputs","text":"Models included medfate primarily designed ran forest inventory plots. kind data, vegetation sampled area often described several records woody plants (trees shrubs) along size species identity. Forest plots medfate assumed data structure follows closely Spanish national forest inventory, simple enough forest sampling schemes can mapped onto . forest plot represented object class forest, list contains several elements. Among , important items two data frames, treeData (trees) shrubData (shrubs): Trees expected primarily described terms species, diameter (DBH; cm) height (cm), whereas shrubs described terms species, percent cover (%) mean height (cm). Root distribution specified growth forms, terms depths (mm) corresponding 50% 95% cumulative fine root distribution. Functions provided package map variables user data frames tables treeData shrubData. Information herb layer may either absent included aggregated way (.e. without distinguishing cohorts). former example illustrates standard structure forest object, users may use alternative description, based leaf area index crown ratio woody cohorts herb layer: alternative forest form suitable water balance simulations, allow simulating forest dynamics.","code":"data(exampleforest) exampleforest ## $treeData ##            Species   N   DBH Height Z50  Z95 ## 1 Pinus halepensis 168 37.55    800 100  600 ## 2     Quercus ilex 384 14.60    660 300 1000 ##  ## $shrubData ##             Species Cover Height Z50  Z95 ## 1 Quercus coccifera  3.75     80 200 1000 ##  ## $herbCover ## [1] 10 ##  ## $herbHeight ## [1] 20 ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\" data(exampleforest2) exampleforest2 ## $treeData ##            Species  N DBH Height Z50  Z95 LAI CrownRatio ## 1 Pinus halepensis NA  NA    800 100  600 0.8       0.66 ## 2     Quercus ilex NA  NA    660 300 1000 0.5       0.60 ##  ## $shrubData ##             Species Cover Height Z50  Z95  LAI CrownRatio ## 1 Quercus coccifera    NA     80 200 1000 0.03        0.8 ##  ## $herbCover ## [1] NA ##  ## $herbHeight ## [1] 20 ##  ## $herbLAI ## [1] 0.25 ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"single-cohort-forests","dir":"Articles > Intro","previous_headings":"Vegetation","what":"Single-cohort forests","title":"Understanding model inputs","text":"Although medfate designed perform simulations multi-cohort forests, can also handle simulations vegetation described using single cohort. Functions tree2forest() shrub2forest() allow defining single-cohort forests attributes. example holm oak (Quercus ilex) forest 4-m height leaf area index 2m2⋅m−22\\, m^2\\cdot m^{-2} can defined using: function return forest object attributes empty: Since density diameter provided, simulations case restricted water balance. Moreover, note defining single-cohort forests possible interactions functionally distinct plants neglected.","code":"oak_forest <-tree2forest(\"Quercus ilex\", Height= 400, LAI = 2) oak_forest ## $treeData ##        Species DBH Height  N Z50 Z95 LAI ## 1 Quercus ilex  NA    400 NA  NA  NA   2 ##  ## $shrubData ## [1] Species Height  Cover   Z50     Z95     ## <0 rows> (or 0-length row.names) ##  ## $herbCover ## [1] NA ##  ## $herbHeight ## [1] NA ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"aboveground-and-belowground-data","dir":"Articles > Intro","previous_headings":"Vegetation","what":"Aboveground and belowground data","title":"Understanding model inputs","text":"can use functions inspect -ground -ground information represented medfate. example, can use function forest2aboveground() object exampleforest show medfate completes -ground information: Note call forest2aboveground() included species parameter table, species-specific allometric coefficients needed calculate leaf area tree size shrub percent cover height. Moreover, note plant cohorts given unique codes tell us whether correspond trees (‘T’) shrubs (‘S’). Columns N, DBH Cover describe forest structure required simulating growth, soil water balance, requires columns SP, H (cm), CR (.e. crown ratio), LAI_live, LAI_expanded LAI_dead. Therefore, one use alternative forest description starting point, .e.: course, resulting data frame missing values, whereas values directly copied forest. Aboveground leaf area distribution (without distinguishing among cohorts) can examined calling function vprofile_leafAreaDensity():","code":"above <- forest2aboveground(exampleforest, SpParamsMED) above ##         SP        N   DBH Cover   H        CR   LAI_live LAI_expanded LAI_dead ## T1_148 148 168.0000 37.55    NA 800 0.6605196 0.84874773   0.84874773        0 ## T2_168 168 384.0000 14.60    NA 660 0.6055642 0.70557382   0.70557382        0 ## S1_165 165 749.4923    NA  3.75  80 0.8032817 0.03062604   0.03062604        0 ##        LAI_nocomp ObsID ## T1_148 1.29720268  <NA> ## T2_168 1.01943205  <NA> ## S1_165 0.04412896  <NA> above2 <- forest2aboveground(exampleforest2, SpParamsMED) above2 ##         SP  N DBH Cover   H   CR LAI_live LAI_expanded LAI_dead LAI_nocomp ## T1_148 148 NA  NA    NA 800 0.66     0.80         0.80        0       0.80 ## T2_168 168 NA  NA    NA 660 0.60     0.50         0.50        0       0.50 ## S1_165 165 NA  NA    NA  80 0.80     0.03         0.03        0       0.03 ##        ObsID ## T1_148  <NA> ## T2_168  <NA> ## S1_165  <NA> vprofile_leafAreaDensity(exampleforest, SpParamsMED, byCohorts = F) vprofile_leafAreaDensity(exampleforest, SpParamsMED, byCohorts = T)"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"belowground-data","dir":"Articles > Intro","previous_headings":"Vegetation","what":"Belowground data","title":"Understanding model inputs","text":"Regarding belowground information, need vectors depths corresponding 50% 95% fine roots, simply concatenate forest data: parameters specify continuous distribution fine roots. Users can visually inspect distribution fine roots forest objects calling function vprofile_rootDistribution():","code":"Z50 <- c(exampleforest$treeData$Z50, exampleforest$shrubData$Z50) Z95 <- c(exampleforest$treeData$Z95, exampleforest$shrubData$Z95) vprofile_rootDistribution(exampleforest, SpParamsMED)"},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"soil-physical-description","dir":"Articles > Intro","previous_headings":"Soils","what":"Soil physical description","title":"Understanding model inputs","text":"Simulation models medfate require information physical attributes soil, namely soil depth, texture, bulk density rock fragment content. Soil physical attributes can initialized default values, given number layers, using function defaultSoilParams(): widths soil layer widths mm; clay sand percentage clay sand, percent dry weight, om stands organic matter, bd bulk density (g⋅cm−3g \\cdot cm^{-3}) rfc percentage rock fragments. soil properties vary strongly fine spatial scales, ideally soil physical attributes measured samples taken forest stand simulated. users lacking data, soil properties available via SoilGrids.org.","code":"spar <- defaultSoilParams(4) print(spar) ##   widths clay sand om nitrogen  bd rfc ## 1    300   25   25 NA       NA 1.5  25 ## 2    700   25   25 NA       NA 1.5  45 ## 3   1000   25   25 NA       NA 1.5  75 ## 4   2000   25   25 NA       NA 1.5  95"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"initialized-soil-object","dir":"Articles > Intro","previous_headings":"Soils","what":"Initialized soil object","title":"Understanding model inputs","text":"Simulations need additional soil parameters state variables. soil input simulations object class soil (also data frame) created using function name: addition physical soil description, object contains soil parameters state variables needed soil water balance simulations: example, macro specifies macroporosity layer. meaning elements soil object can found help page function soil(). time, one can show characteristics status soil object using summary function: Importantly, soil object used store degree moisture soil layer. particular, element W contains state variable represents moisture content - proportion moisture relative field capacity - normally initialized 1 layer: Advanced soil plant energy water balance modelling requires considering temperature soil. Hence, Temp contains temperature (degrees) soil layers: Soil layer temperatures initialized missing values, first time step set atmospheric temperature. simple water balance modeling can run using either Saxton’s Van Genuchten’s equations water retention curves, Van Genuchten’s model forced advanced modelling. Users can skip call function soil() creating input objects simulations (see ).","code":"examplesoil <- soil(spar) class(examplesoil) ## [1] \"soil\"       \"data.frame\" examplesoil ##   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha ## 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 ## 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 ## 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 ## 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 ##       VG_n VG_theta_res VG_theta_sat W Temp ## 1 1.303861        0.041     0.423715 1   NA ## 2 1.303861        0.041     0.423715 1   NA ## 3 1.303861        0.041     0.423715 1   NA ## 4 1.303861        0.041     0.423715 1   NA summary(examplesoil, model = \"SX\") ## Soil depth (mm): 4000  ##  ## Layer  1  [ 0  to  300 mm ]  ##     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] ##     Rock fragment content (%): 25 Macroporosity (%): 5  ##     Theta WP (%): 14 Theta FC (%): 30 Theta SAT (%): 49 Theta current (%) 30  ##     Vol. WP (mm): 32 Vol. FC (mm): 68 Vol. SAT (mm): 111 Vol. current (mm): 68  ##     Temperature (Celsius): NA  ##  ## Layer  2  [ 300  to  1000 mm ]  ##     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] ##     Rock fragment content (%): 45 Macroporosity (%): 5  ##     Theta WP (%): 14 Theta FC (%): 30 Theta SAT (%): 49 Theta current (%) 30  ##     Vol. WP (mm): 55 Vol. FC (mm): 117 Vol. SAT (mm): 190 Vol. current (mm): 117  ##     Temperature (Celsius): NA  ##  ## Layer  3  [ 1000  to  2000 mm ]  ##     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] ##     Rock fragment content (%): 75 Macroporosity (%): 5  ##     Theta WP (%): 14 Theta FC (%): 30 Theta SAT (%): 49 Theta current (%) 30  ##     Vol. WP (mm): 36 Vol. FC (mm): 76 Vol. SAT (mm): 123 Vol. current (mm): 76  ##     Temperature (Celsius): NA  ##  ## Layer  4  [ 2000  to  4000 mm ]  ##     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] ##     Rock fragment content (%): 95 Macroporosity (%): 5  ##     Theta WP (%): 14 Theta FC (%): 30 Theta SAT (%): 49 Theta current (%) 30  ##     Vol. WP (mm): 14 Vol. FC (mm): 30 Vol. SAT (mm): 49 Vol. current (mm): 30  ##     Temperature (Celsius): NA  ##  ## Total soil saturated capacity (mm): 473  ## Total soil water holding capacity (mm): 291  ## Total soil extractable water (mm): 183  ## Total soil current Volume (mm): 291  ## Saturated water depth (mm): NA examplesoil$W ## [1] 1 1 1 1 examplesoil$Temp ## [1] NA NA NA NA"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"water-retention-curves","dir":"Articles > Intro","previous_headings":"Soils","what":"Water retention curves","title":"Understanding model inputs","text":"modelled moisture content soil depends water retention curve used represent relationship soil volumetric water content (θ\\theta; %) soil water potential (Ψ\\Psi; MPa). default Saxton (model = \"SX\") equations used model water retention curve, user may choose follow Van Genuchten - Mualem equations, give slightly different values texture: Saxton equations use texture organic matter inputs, Van Genuchten-Mualem equations need parameters, estimated using pedotransfer functions names start VG_ (two alternative options provided function soil estimate Van Genuchten parameters). following code calls function soil_retentionCurvePlot() illustrate difference two water retention models soil:  Low-level functions, soil_psi2thetaSX() soil_psi2thetaVG() (counterparts soil_theta2psiSX() soil_theta2psiVG()), can used calculate volumetric soil moisture water potential (viceversa) using two models. simulating soil water balance, user can choose among two models (see control parameters ).","code":"summary(examplesoil, model=\"VG\") ## Soil depth (mm): 4000  ##  ## Layer  1  [ 0  to  300 mm ]  ##     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] ##     Rock fragment content (%): 25 Macroporosity (%): 5  ##     Theta WP (%): 13 Theta FC (%): 30 Theta SAT (%): 42 Theta current (%) 30  ##     Vol. WP (mm): 29 Vol. FC (mm): 68 Vol. SAT (mm): 95 Vol. current (mm): 68  ##     Temperature (Celsius): NA  ##  ## Layer  2  [ 300  to  1000 mm ]  ##     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] ##     Rock fragment content (%): 45 Macroporosity (%): 5  ##     Theta WP (%): 13 Theta FC (%): 30 Theta SAT (%): 42 Theta current (%) 30  ##     Vol. WP (mm): 49 Vol. FC (mm): 117 Vol. SAT (mm): 163 Vol. current (mm): 117  ##     Temperature (Celsius): NA  ##  ## Layer  3  [ 1000  to  2000 mm ]  ##     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] ##     Rock fragment content (%): 75 Macroporosity (%): 5  ##     Theta WP (%): 13 Theta FC (%): 30 Theta SAT (%): 42 Theta current (%) 30  ##     Vol. WP (mm): 32 Vol. FC (mm): 76 Vol. SAT (mm): 106 Vol. current (mm): 76  ##     Temperature (Celsius): NA  ##  ## Layer  4  [ 2000  to  4000 mm ]  ##     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] ##     Rock fragment content (%): 95 Macroporosity (%): 5  ##     Theta WP (%): 13 Theta FC (%): 30 Theta SAT (%): 42 Theta current (%) 30  ##     Vol. WP (mm): 13 Vol. FC (mm): 30 Vol. SAT (mm): 42 Vol. current (mm): 30  ##     Temperature (Celsius): NA  ##  ## Total soil saturated capacity (mm): 407  ## Total soil water holding capacity (mm): 291  ## Total soil extractable water (mm): 194  ## Total soil current Volume (mm): 291  ## Saturated water depth (mm): NA soil_retentionCurvePlot(examplesoil, model=\"both\")"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"meteorological-forcing","dir":"Articles > Intro","previous_headings":"","what":"Meteorological forcing","title":"Understanding model inputs","text":"simulations package require daily weather inputs. minimum weather variables required minimum/maximum temperature, minimum/maximum relative humidity, precipitation radiation. variables like wind speed recommended required. show example meteorological forcing data. Simulation models medfate designed work along data generated package meteoland. user strongly recommended resort package obtain suitable weather input medfate simulations.","code":"data(examplemeteo) head(examplemeteo) ##        dates MinTemperature MaxTemperature Precipitation MinRelativeHumidity ## 1 2001-01-01     -0.5934215       6.287950      4.869109            65.15411 ## 2 2001-01-02     -2.3662458       4.569737      2.498292            57.43761 ## 3 2001-01-03     -3.8541036       2.661951      0.000000            58.77432 ## 4 2001-01-04     -1.8744860       3.097705      5.796973            66.84256 ## 5 2001-01-05      0.3288287       7.551532      1.884401            62.97656 ## 6 2001-01-06      0.5461322       7.186784     13.359801            74.25754 ##   MaxRelativeHumidity Radiation WindSpeed ## 1           100.00000  12.89251  2.000000 ## 2            94.71780  13.03079  7.662544 ## 3            94.66823  16.90722  2.000000 ## 4            95.80950  11.07275  2.000000 ## 5           100.00000  13.45205  7.581347 ## 6           100.00000  12.84841  6.570501"},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"simulation-control","dir":"Articles > Intro","previous_headings":"","what":"Simulation control","title":"Understanding model inputs","text":"Apart data inputs, behaviour simulation models can controlled using set global parameters. default parameterization obtained using function defaultControl(): Control parameters normally left default value effect simulations fully understood.","code":"control <- defaultControl() names(control) ##   [1] \"fillMissingRootParams\"            \"fillMissingSpParams\"              ##   [3] \"fillMissingWithGenusParams\"       \"verbose\"                          ##   [5] \"subdailyResults\"                  \"standResults\"                     ##   [7] \"soilResults\"                      \"snowResults\"                      ##   [9] \"plantResults\"                     \"plantWaterBalanceResults\"         ##  [11] \"labileCarbonBalanceResults\"       \"plantStructureResults\"            ##  [13] \"growthMortalityResults\"           \"leafResults\"                      ##  [15] \"temperatureResults\"               \"fireHazardResults\"                ##  [17] \"fireHazardStandardWind\"           \"fireHazardStandardDFMC\"           ##  [19] \"transpirationMode\"                \"soilFunctions\"                    ##  [21] \"VG_PTF\"                           \"ndailysteps\"                      ##  [23] \"max_nsubsteps_soil\"               \"defaultWindSpeed\"                 ##  [25] \"defaultCO2\"                       \"defaultRainfallIntensityPerMonth\" ##  [27] \"leafPhenology\"                    \"bareSoilEvaporation\"              ##  [29] \"unlimitedSoilWater\"               \"interceptionMode\"                 ##  [31] \"infiltrationMode\"                 \"infiltrationCorrection\"           ##  [33] \"soilDomains\"                      \"rhizosphereOverlap\"               ##  [35] \"unfoldingDD\"                      \"verticalLayerSize\"                ##  [37] \"windMeasurementHeight\"            \"segmentedXylemVulnerability\"      ##  [39] \"stemCavitationRecovery\"           \"leafCavitationRecovery\"           ##  [41] \"lfmcComponent\"                    \"hydraulicRedistributionFraction\"  ##  [43] \"nsubsteps_canopy\"                 \"taper\"                            ##  [45] \"multiLayerBalance\"                \"sapFluidityVariation\"             ##  [47] \"TPhase_gmin\"                      \"Q10_1_gmin\"                       ##  [49] \"Q10_2_gmin\"                       \"rootRadialConductance\"            ##  [51] \"averageFracRhizosphereResistance\" \"thermalCapacityLAI\"               ##  [53] \"boundaryLayerSize\"                \"cavitationRecoveryMaximumRate\"    ##  [55] \"sunlitShade\"                      \"numericParams\"                    ##  [57] \"leafCavitationEffects\"            \"stemCavitationEffects\"            ##  [59] \"stomatalSubmodel\"                 \"plantCapacitance\"                 ##  [61] \"cavitationFlux\"                   \"soilDisconnection\"                ##  [63] \"leafCuticularTranspiration\"       \"stemCuticularTranspiration\"       ##  [65] \"C_SApoInit\"                       \"C_LApoInit\"                       ##  [67] \"k_SSym\"                           \"fractionLeafSymplasm\"             ##  [69] \"gs_NightFrac\"                     \"JarvisPAR\"                        ##  [71] \"fTRBToLeaf\"                       \"subdailyCarbonBalance\"            ##  [73] \"allowDessication\"                 \"allowStarvation\"                  ##  [75] \"sinkLimitation\"                   \"shrubDynamics\"                    ##  [77] \"herbDynamics\"                     \"allocationStrategy\"               ##  [79] \"phloemConductanceFactor\"          \"nonSugarConcentration\"            ##  [81] \"equilibriumOsmoticConcentration\"  \"minimumRelativeStarchForGrowth\"   ##  [83] \"constructionCosts\"                \"senescenceRates\"                  ##  [85] \"maximumRelativeGrowthRates\"       \"mortalityMode\"                    ##  [87] \"mortalityBaselineRate\"            \"mortalityRelativeSugarThreshold\"  ##  [89] \"mortalityRWCThreshold\"            \"recrTreeDBH\"                      ##  [91] \"recrTreeDensity\"                  \"ingrowthTreeDBH\"                  ##  [93] \"ingrowthTreeDensity\"              \"allowSeedBankDynamics\"            ##  [95] \"allowRecruitment\"                 \"allowResprouting\"                 ##  [97] \"recruitmentMode\"                  \"removeEmptyCohorts\"               ##  [99] \"minimumTreeCohortDensity\"         \"minimumShrubCohortCover\"          ## [101] \"dynamicallyMergeCohorts\"          \"keepCohortsWithObsID\"             ## [103] \"seedRain\"                         \"seedProductionTreeHeight\"         ## [105] \"seedProductionShrubHeight\"        \"probRecr\"                         ## [107] \"minTempRecr\"                      \"minMoistureRecr\"                  ## [109] \"minFPARRecr\"                      \"recrTreeHeight\"                   ## [111] \"recrShrubCover\"                   \"recrShrubHeight\"                  ## [113] \"recrTreeZ50\"                      \"recrShrubZ50\"                     ## [115] \"recrTreeZ95\"                      \"recrShrubZ95\""},{"path":"https://emf-creaf.github.io/medfate/articles/intro/UnderstandingInputs.html","id":"input-objects-for-simulation-functions","dir":"Articles > Intro","previous_headings":"","what":"Input objects for simulation functions","title":"Understanding model inputs","text":"Simulation functions spwb() growth() (similar functions) require first combining forest, soil, species-parameter simulation control inputs single input object (class spwbInput growthInput) used input corresponding simulation function along weather data. combination vegetation, soil control inputs done via functions spwbInput() growthInput(). requires one additional line code, additional step handy cohort-level parameters state variables initialized can modified user (automated calibration algorithm) calling actual simulation functions. input objects functions spwb() growth() presented detail articles Basic water balance Forest growth, respectively. Function fordyn() different two simulation functions, sense user enters forest, soil, species-parameter simulation control inputs directly simulation function (fact, fordyn() internally calls growthInput() initialize input object function growth()).","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/ComputingTime.html","id":"about-this-vignette","dir":"Articles > Modelanalysis","previous_headings":"","what":"About this vignette","title":"Computing time estimates","text":"aim vignette provide users rough estimation computing times simulation models included package medfate. results presented obtained using 1 year simulation example data sets laptop (16 GiB memory 11th Gen Inter Core I5 processor @ 2.40 GHz x 8) Ubuntu Linux OS.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/ComputingTime.html","id":"table-of-computational-times","dir":"Articles > Modelanalysis","previous_headings":"","what":"Table of computational times","title":"Computing time estimates","text":"Computational times estimated using system.time(), seconds shown package version.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"about-this-vignette","dir":"Articles > Modelanalysis","previous_headings":"","what":"About this vignette","title":"Sensitivity analysis and calibration","text":"present document shows conduct sensitivity analyses calibration exercises simulation models included package medfate. document written assuming user familiarized basic water balance model (.e. function spwb). aim exercises presented : determine spwb() model parameters influential determining stand transpiration plant drought stress. determine model parameters influential determine model fit soil water content dynamics. reduce uncertainty parameters determining fine root distribution, given observed data set soil water content dynamics. example data set use data sets provided illustrate simulation functions medfate. begin loading package example forest data: also load species parameter table example weather dataset:","code":"library(medfate) ## Package 'medfate' [ver. 4.8.0] data(exampleforest) exampleforest ## $treeData ##            Species   N   DBH Height Z50  Z95 ## 1 Pinus halepensis 168 37.55    800 100  600 ## 2     Quercus ilex 384 14.60    660 300 1000 ##  ## $shrubData ##             Species Cover Height Z50  Z95 ## 1 Quercus coccifera  3.75     80 200 1000 ##  ## $herbCover ## [1] 10 ##  ## $herbHeight ## [1] 20 ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\" data(SpParamsMED) data(examplemeteo)"},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"preparing-model-inputs","dir":"Articles > Modelanalysis","previous_headings":"","what":"Preparing model inputs","title":"Sensitivity analysis and calibration","text":"focus three species/cohorts example data set: data set consists forest two tree species (Pinus halepensis/T1_148 Quercus ilex/T2_168) one shrub species (Quercus coccifera/S1_165 Kermes oak). first define soil four layers (default values texture, bulk density rock content) species input parameters simulation function spwb(): Although necessary, make initial call model (spwb()) default parameter settings: Function spwb() implicitly called multiple times sensitivity analyses calibration analyses illustrate .","code":"PH_coh = paste0(\"T1_\", SpParamsMED$SpIndex[SpParamsMED$Name==\"Pinus halepensis\"]) QI_coh = paste0(\"T2_\", SpParamsMED$SpIndex[SpParamsMED$Name==\"Quercus ilex\"]) QC_coh = paste0(\"S1_\", SpParamsMED$SpIndex[SpParamsMED$Name==\"Quercus coccifera\"]) examplesoil <- defaultSoilParams(4) x1 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control = defaultControl()) S1<-spwb(x1, examplemeteo, latitude = 41.82592, elevation = 100) ## Package 'meteoland' [ver. 2.2.2] ## Initial plant water content (mm): 4.73001 ## Initial soil water content (mm): 290.875 ## Initial snowpack content (mm): 0 ## Performing daily simulations ##  ##  [Year 2001]:............ ##  ## Final plant water content (mm): 4.7285 ## Final soil water content (mm): 274.723 ## Final snowpack content (mm): 0 ## Change in plant water content (mm): -0.00151775 ## Plant water balance result (mm): -0.00151775 ## Change in soil water content (mm): -16.1521 ## Soil water balance result (mm): -16.1521 ## Change in snowpack water content (mm): 0 ## Snowpack water balance result (mm): -7.10543e-15 ## Water balance components: ##   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 ##   Interception (mm) 92 Net rainfall (mm) 370 ##   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 ##   Soil evaporation (mm) 26  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 249 ##   Plant extraction from soil (mm) 249  Plant water balance (mm) -0 Hydraulic redistribution (mm) 5 ##   Runoff (mm) 21 Deep drainage (mm) 128"},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"introduction-and-input-factors","dir":"Articles > Modelanalysis","previous_headings":"Sensitivity analysis","what":"Introduction and input factors","title":"Sensitivity analysis and calibration","text":"Model sensitivity analyses used investigate variation output numerical model can attributed variations input factors. Input factors elements can changed model execution may affect output. can model parameters, initial values state variables, boundary conditions input forcing data (Pianosi et al. 2016). According Saltelli et al. (2016), three main purposes sensitivity analyses: Ranking aims generating ranking input factors according relative contribution output variability. Screening aims identifying input factors, , negligible influence output variability. Mapping aims determining region input variability space produces significant output values. mostly interested ranking parameters according different objectives. take input factors three plant traits (leaf area index, fine root distribution water potential corresponding reduction plant conductance) three plant cohorts (species), two soil factors (rock fragment content soil layer 1 2). total, eleven model parameters studied. following shows initial values plant trait parameters: following code define vector parameter names (using naming rules function modifyInputParams()) well input variability space, defined minimum maximum parameter values:","code":"x1$above$LAI_live ## [1] 0.84874773 0.70557382 0.03062604 x1$below$Z50 ## [1] 100 300 200 x1$paramsTransp$Psi_Extract ## [1] -0.9218219 -1.9726871 -2.1210726 x1$soil$rfc[1:2] ## [1] 25 45 #Parameter names of interest parNames = c(paste0(PH_coh,\"/LAI_live\"), paste0(QI_coh,\"/LAI_live\"), paste0(QC_coh,\"/LAI_live\"),              paste0(PH_coh,\"/Z50\"), paste0(QI_coh,\"/Z50\"), paste0(QC_coh,\"/Z50\"),              paste0(PH_coh,\"/Psi_Extract\"), paste0(QI_coh,\"/Psi_Extract\"), paste0(QC_coh,\"/Psi_Extract\"),              \"rfc@1\", \"rfc@2\") parNames ##  [1] \"T1_148/LAI_live\"    \"T2_168/LAI_live\"    \"S1_165/LAI_live\"    ##  [4] \"T1_148/Z50\"         \"T2_168/Z50\"         \"S1_165/Z50\"         ##  [7] \"T1_148/Psi_Extract\" \"T2_168/Psi_Extract\" \"S1_165/Psi_Extract\" ## [10] \"rfc@1\"              \"rfc@2\" #Parameter minimum and maximum values parMin = c(0.1,0.1,0.1,            100,100,50,            -5,-5,-5,            25,25) parMax = c(2,2,2,            500,500,300,            -1,-1,-1,            75,75)"},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"model-output-functions","dir":"Articles > Modelanalysis","previous_headings":"Sensitivity analysis","what":"Model output functions","title":"Sensitivity analysis and calibration","text":"sensitivity analyses, model output summarized single variable whose variation analyzed. Pianosi et al. (2016) distinguish two types model output functions: objective functions (also called loss cost functions), measures model performance calculated comparison modelled observed variables. prediction functions, scalar values provided model-user practical use, can computed even absence observations. use examples kinds. First, define function , given simulation result, calculates total transpiration (mm) simulated period (one year): Another prediction function can focus plant drought stress. define function , given simulation result, calculates average drought stress plants (measured using water stress index) simulated period: Sensitivity analysis requires model output functions whose parameters input factors studied. y=g(𝐱)=g(x1,x2,…,xn)\\begin{equation} y = g(\\mathbf{x}) = g(x_1, x_2, \\dots, x_n) \\end{equation} yy output, gg output function 𝐱={x1,x2,…,xn}\\mathbf{x} = \\{x_1, x_2, \\dots, x_n\\} vector parameter input factors. Functions of_transp of_stress take simulation results input, values input factors. Instead, need define functions take soil plant trait values input, run soil plant water balance model return desired prediction performance statistic. functions can generated using function factory optimization_function(). following code defines one functions focusing total transpiration: Note provided data needed simulations input optimization_function(), well names parameters study function sf_transp. resulting object of_transp function , can call parameter values (sets parameter values) input: important understand steps done call of_transp(): function of_transp() calls spwb() using parameters specified construction (.e. call function factory), except input factors indicated parNames, specified input time calling of_transp(). result soil plant water balance passed function sf_transp() output last function returned output of_transp(). can build similar model output function, case focusing plant stress (note difference call factory specification sf_stress summary function, instead sf_transp). mentioned , another kind output function can evaluation model performance. assume performance terms predictability soil water content desired; use data set ‘observed’ values (actually simulated values gaussian error) reference: soil water content dynamics column SWC. model fit observed data can measured using Nash-Sutcliffe coefficient, calculate initial run using function evaluation_metric(): call evaluation_metric() provides coefficient given model simulation result, model output function defined . Analogously measures total transpiration average plant stress, can use function factory define model output function takes input factors inputs, runs model performs evaluation: Function of_eval() stores internally data needed conducting simulations data needed evaluating simulation results, need provide values input factors:","code":"sf_transp<-function(x) {sum(x$WaterBalance$Transpiration, na.rm=TRUE)} sf_transp(S1) ## [1] 249.0844 sf_stress<-function(x) {   lai <- x$spwbInput$above$LAI_live   lai_p <- lai/sum(lai)   stress <- droughtStress(x, index=\"WSI\", draw = F)   mean(sweep(stress,2, lai_p, \"*\"), na.rm=T) } sf_stress(S1) ## [1] 2.301471 of_transp<-optimization_function(parNames = parNames,                                  x = x1,                                  meteo = examplemeteo,                                   latitude = 41.82592, elevation = 100,                                  summary_function = sf_transp) of_transp(parMin) ## [1] 47.63267 of_transp(parMax) ## [1] 349.1011 of_stress<-optimization_function(parNames = parNames,                                  x = x1,                                   meteo = examplemeteo,                                   latitude = 41.82592, elevation = 100,                                  summary_function = sf_stress) of_stress(parMin) ## [1] 0.9115247 of_stress(parMax) ## [1] 109.9439 data(exampleobs) head(exampleobs) ##        dates       SWC       ETR   E_T1_148   E_T2_168 FMC_T1_148 FMC_T2_168 ## 1 2001-01-01 0.3007733 2.2436218 0.09187857 0.14142950   125.9071   93.07915 ## 2 2001-01-02 0.3091627 2.3236565 0.26480973 0.19095008   125.9137   93.07863 ## 3 2001-01-03 0.2996498 0.7409083 0.15345643 0.17546363   125.8760   93.10512 ## 4 2001-01-04 0.3042764 1.7173522 0.23470647 0.04643454   125.8643   93.07022 ## 5 2001-01-05 0.3054886 2.0002562 0.37687792 0.10623552   125.8493   93.08487 ## 6 2001-01-06 0.3062005 2.0722706 0.16342360 0.05550329   125.9367   93.07343 ##     BAI_T1_148 BAI_T2_168    DI_T1_148 DI_T2_168 ## 1 6.222625e-06          0 9.948881e-08         0 ## 2 3.091274e-10          0 1.071090e-11         0 ## 3 1.298482e-13          0 0.000000e+00         0 ## 4 2.886195e-11          0 5.552753e-13         0 ## 5 1.287020e-03          0 1.367289e-05         0 ## 6 1.471202e-03          0 1.000411e-05         0 evaluation_metric(S1, measuredData = exampleobs, type = \"SWC\",                    metric = \"NSE\") ## [1] 0.9372955 of_eval<-optimization_evaluation_function(parNames = parNames,                 x = x1,                 meteo = examplemeteo, latitude = 41.82592, elevation = 100,                 measuredData = exampleobs, type = \"SWC\",                  metric = \"NSE\") of_eval(parMin) ## [1] 0.5982837 of_eval(parMax) ## [1] -11.76721"},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"global-sensitivity-analyses","dir":"Articles > Modelanalysis","previous_headings":"Sensitivity analysis","what":"Global sensitivity analyses","title":"Sensitivity analysis and calibration","text":"Sensitivity analysis either referred local global, depending variation input factors studied respect initial parameter set (local) whole space input factors taken account (global). conduct global sensitivity analyses using package sensitivity (Ioss et al. 2020): package provides suite approaches global sensitivity analysis. Among , follow Elementary Effect Test implemented function morris(). call function analyze sensitivity total transpiration simulated spwb() input factors (500 runs done, patient): Apart indicating sampling design sample input factor space, call morris() includes response model function (case of_transp), parameter names parameter value boundaries (.e. parMin parMax). mu.star values inform mean elementary effects ii factor can used rank input factors, whereas sigma inform degree interaction ii-th factor others. According result sensitivity analysis, leaf area index (LAI_live) parameters relevant determine total transpiration, much fine root distribution (Z50), rock fragment content soil water potentials corresponding whole-plant conductance reduction (.e. Psi_Extract).  can run sensitivity analysis focusing input factors relevant predicted plant drought stress (.e. using of_stress model output function): , LAI values parameters relevant, closely followed water potentials corresponding whole-plant conductance reduction (.e. Psi_Extract), appear relevant parameters fine root distribution (Z50) rock fragment content (rfc).  Finally, can study contribution input factors model performance terms soil water content dynamics (.e. using of_eval model output function): Contrary previous cases, contribution LAI parameters similar parameters fine root distribution (Z50), appear relevant water potentials corresponding whole-plant conductance reduction (.e. Psi_Extract).","code":"library(sensitivity) ## Registered S3 method overwritten by 'sensitivity': ##   method    from  ##   print.src dplyr ##  ## Attaching package: 'sensitivity' ## The following object is masked from 'package:medfate': ##  ##     extract sa_transp <- morris(of_transp, parNames, r = 50,               design = list(type = \"oat\", levels = 10, grid.jump = 3),               binf = parMin, bsup = parMax, scale=TRUE, verbose=FALSE) print(sa_transp) ##  ## Call: ## morris(model = of_transp, factors = parNames, r = 50, design = list(type = \"oat\",     levels = 10, grid.jump = 3), binf = parMin, bsup = parMax,     scale = TRUE, verbose = FALSE) ##  ## Model runs: 600  ##                             mu     mu.star      sigma ## T1_148/LAI_live    153.6591445 162.6752000 84.4307909 ## T2_168/LAI_live     95.3652583 107.8969236 62.7946309 ## S1_165/LAI_live    146.7424176 152.7440550 72.7860722 ## T1_148/Z50          -3.1140109   4.9123925 10.9257630 ## T2_168/Z50          -1.0121568   2.3895855  8.0897898 ## S1_165/Z50           0.1440795   0.4817739  0.9125476 ## T1_148/Psi_Extract  -3.1010337   6.1051877 10.9368259 ## T2_168/Psi_Extract  -2.6449397   3.5882482  5.8285725 ## S1_165/Psi_Extract  -0.4657024   3.3910221  9.9270164 ## rfc@1              -10.0489723  10.0489723 17.5544947 ## rfc@2              -16.0083538  16.0112776 33.9905052 plot(sa_transp, xlim=c(0,150)) sa_stress <- morris(of_stress, parNames, r = 50,               design = list(type = \"oat\", levels = 10, grid.jump = 3),               binf = parMin, bsup = parMax, scale=TRUE, verbose=FALSE) print(sa_stress) ##  ## Call: ## morris(model = of_stress, factors = parNames, r = 50, design = list(type = \"oat\",     levels = 10, grid.jump = 3), binf = parMin, bsup = parMax,     scale = TRUE, verbose = FALSE) ##  ## Model runs: 600  ##                            mu    mu.star     sigma ## T1_148/LAI_live    39.3701732 40.6280153 43.012050 ## T2_168/LAI_live    24.2422700 24.2422700 28.709054 ## S1_165/LAI_live    34.2099445 34.2099445 37.462036 ## T1_148/Z50          1.7496071  3.5329408  8.654708 ## T2_168/Z50          0.2240808  1.5457806  3.052235 ## S1_165/Z50         -0.2410193  0.7326172  1.020798 ## T1_148/Psi_Extract -0.9947753  4.5214926 14.289468 ## T2_168/Psi_Extract -3.1169767  3.1169767  9.000830 ## S1_165/Psi_Extract -1.0580752  1.0580752  1.693242 ## rfc@1               8.2724188  8.2724188 11.264721 ## rfc@2               3.2186280 11.1825579 24.324838 plot(sa_stress, xlim=c(0,300)) sa_eval <- morris(of_eval, parNames, r = 50,               design = list(type = \"oat\", levels = 10, grid.jump = 3),               binf = parMin, bsup = parMax, scale=TRUE, verbose=FALSE) print(sa_eval) ##  ## Call: ## morris(model = of_eval, factors = parNames, r = 50, design = list(type = \"oat\",     levels = 10, grid.jump = 3), binf = parMin, bsup = parMax,     scale = TRUE, verbose = FALSE) ##  ## Model runs: 600  ##                             mu    mu.star     sigma ## T1_148/LAI_live    -12.8813849 12.8813849 6.7216712 ## T2_168/LAI_live     -7.1523876  7.2482813 4.3856065 ## S1_165/LAI_live    -10.3023170 10.3023170 5.9723072 ## T1_148/Z50           2.9462338  2.9655605 2.8234231 ## T2_168/Z50           0.7120910  0.7132248 0.4806898 ## S1_165/Z50           0.4317170  0.4401409 0.2578594 ## T1_148/Psi_Extract   0.2343639  0.3865185 0.7713386 ## T2_168/Psi_Extract   0.1737744  0.1996813 0.3235109 ## S1_165/Psi_Extract   0.1981883  0.2465299 0.5361140 ## rfc@1               -2.0935668  2.2512164 2.6786947 ## rfc@2               -1.3197193  1.6729610 1.9113855 plot(sa_eval, xlim=c(0,15))"},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"calibration","dir":"Articles > Modelanalysis","previous_headings":"","what":"Calibration","title":"Sensitivity analysis and calibration","text":"model calibration mean process finding suitable parameter values (suitable parameter distributions) given set observations. Hence, idea optimize correspondence model predictions observations changing model parameter values.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"defining-parameter-space-and-objective-function","dir":"Articles > Modelanalysis","previous_headings":"Calibration","what":"Defining parameter space and objective function","title":"Sensitivity analysis and calibration","text":"simplify analysis avoid problems parameter identifiability, focus calibration parameter Z50 fine root distribution. redefine vectors parNames, parMin, parMax; specify vector initial values. order run calibration analyses need define objective function. Many evaluation metrics used common practice use likelihood functions . can use function factory optimization_evaluation_function ‘observed’ data aim, case specify log-likelihood Gaussian error evaluation metric of_eval().","code":"#Parameter names of interest parNames = c(paste0(PH_coh,\"/Z50\"), paste0(QI_coh,\"/Z50\"), paste0(QC_coh,\"/Z50\")) #Parameter minimum and maximum values parMin = c(50,50,50) parMax = c(500,500,300) parIni = x1$below$Z50 of_eval<-optimization_evaluation_function(parNames = parNames,                 x = x1,                 meteo = examplemeteo, latitude = 41.82592, elevation = 100,                 measuredData = exampleobs, type = \"SWC\",                  metric = \"loglikelihood\")"},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"calibration-by-gradient-search","dir":"Articles > Modelanalysis","previous_headings":"Calibration","what":"Calibration by gradient search","title":"Sensitivity analysis and calibration","text":"Model calibration can performed using broad range approaches. Many - including simulated annealing, genetic algorithms, gradient methods, etc. - focus maximization minimization objective function. illustrate common approach, use function optim package stats, provides several optimization methods. particular use “L-BFGS-B”, “BFGS” quasi-Newton method published Broyden, Fletcher, Goldfarb Shanno, modified inclusion minimum maximum boundaries. default, function optim performs minimization objective function (of_eval), can specify negative value control parameter fnscale turn process maximization maximum likelihood: calibration result following: Note optimized parameters relatively close Z50 original x1. occurs default values used generate ‘observed’ data exampleobs, contains small amount non-systematic error.","code":"opt_cal = optim(parIni, of_eval, method = \"L-BFGS-B\",                 control = list(fnscale = -1), verbose = FALSE) print(opt_cal) ## $par ## [1] 305.8826 110.5760 187.2690 ##  ## $value ## [1] 909.4165 ##  ## $counts ## function gradient  ##       25       25  ##  ## $convergence ## [1] 0 ##  ## $message ## [1] \"CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH\" cbind( x1$below[,\"Z50\", drop = FALSE], opt_cal$par) ##        Z50 opt_cal$par ## T1_148 100    305.8826 ## T2_168 300    110.5760 ## S1_165 200    187.2690"},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"bayesian-calibration","dir":"Articles > Modelanalysis","previous_headings":"Calibration","what":"Bayesian calibration","title":"Sensitivity analysis and calibration","text":"example sophisticated model calibration, conduct Bayesian calibration analysis using package BayesianTools (Hartig et al. 2019): Bayesian analysis one evaluates uncertainty model parameters changed (hopefully reduced) observing data, observed values likelihood regions parameter space. Bayesian analysis need specify (log)likelihood function prior distribution (.e. initial uncertainty) input factors. central object BayesianTools package BayesianSetup. class, created calls createBayesianSetup(), contains information model fit (likelihood), priors model parameters. absence previous data, specify uniform distribution minimum maximum values, BayesianTools package can done using function createUniformPrior(): Function createBayesianSetup() automatically creates posterior various convenience functions Markov Chain Monte Carlo (MCMC) samplers. runMCMC() function main wrapper implemented MCMC functions. call nine chains 1000 iterations . default runMCMC() uses parallel computation, calibration process nevertheless rather slow. summary function provided inspect convergence results correlation parameters: According Gelman-Rubin diagnostic, convergence can accepted multivariate potential scale reduction factor ≤ 1.1. can plot Markov Chains posterior density distribution parameters generate using: can also plot marginal prior posterior density distributions parameter. case, see similar Z50 distribution two trees, informative prior distribution. contrast, posterior distribution Z50 kermes oak remains uncertain prior one. happens LAI value kermes oak low, small influence soil water dynamics regardless root distribution.  Plots can also produced display correlation parameter values. can observed large correlation Z50 two tree cohorts. Since LAI values similar, similar effect soil water depletion can obtained extent exchanging fine root distribution. Posterior model prediction distributions can obtained take samples Markov chains use perform simulations (use sample size 100 larger value preferred). aim, medfate includes function multiple_runs() allows running simulation model matrix parameter values. example, following code runs spwb() combinations fine root distribution specified s. Function multiple_runs() determines model called inspecting class x (x1 spwbInput). conducted simulations can inspect posterior distribution several prediction variables, example total transpiration:  average plant drought stress:  Finally, can use object prior generate another sample prior parameter distribution, perform simulations: compare prior prediction uncertainty posterior prediction uncertainty output variables:","code":"library(BayesianTools) prior <- createUniformPrior(parMin, parMax, parIni) mcmc_setup <- createBayesianSetup(likelihood = of_eval,                                    prior = prior,                                    names = parNames) mcmc_out <- runMCMC(   bayesianSetup = mcmc_setup,    sampler = \"DEzs\",   settings = list(iterations = 1000, nrChains = 9)) summary(mcmc_out) ## Parameter values  241.786576775968 295.749078259277 177.667831744866 ## Problem encountered in the calculation of the likelihood with parameter 241.786576775968295.749078259277177.667831744866 ##  Error message wasError in eval(expr, envir): Index out of bounds: [index='Z100']. ##  ##  set result of the parameter evaluation to -Inf ParameterValues ## # # # # # # # # # # # # # # # # # # # # # # # # #  ## ## MCMC chain summary ##  ## # # # # # # # # # # # # # # # # # # # # # # # # #  ##   ## # MCMC sampler:  DEzs  ## # Nr. Chains:  27  ## # Iterations per chain:  334  ## # Rejection rate:  0.751  ## # Effective sample size:  673  ## # Runtime:  2212.486  sec.  ##   ## # Parameters ##              psf     MAP    2.5%  median   97.5% ## T1_148/Z50 1.037 306.754 101.883 245.343 345.003 ## T2_168/Z50 1.034 109.695  59.929 306.980 490.651 ## S1_165/Z50 1.036 179.784  57.204 182.498 294.762 ##  ## ## DIC:  -Inf  ## ## Convergence  ##  Gelman Rubin multivariate psrf:  1.077  ##   ## ## Correlations  ##            T1_148/Z50 T2_168/Z50 S1_165/Z50 ## T1_148/Z50      1.000     -0.801     -0.128 ## T2_168/Z50     -0.801      1.000      0.066 ## S1_165/Z50     -0.128      0.066      1.000 plot(mcmc_out) marginalPlot(mcmc_out, prior = T) correlationPlot(mcmc_out) s = getSample(mcmc_out, numSamples = 100) head(s) ##      T1_148/Z50 T2_168/Z50 S1_165/Z50 ## [1,]   217.9150  478.40434  258.52315 ## [2,]   260.5909  213.55127  184.20214 ## [3,]   243.8444  244.94568  233.38867 ## [4,]   166.7885   73.53628  230.78928 ## [5,]   313.5510  258.36418  216.23578 ## [6,]   276.2950  276.41855   71.93304 MS = multiple_runs(s, x = x1, meteo = examplemeteo,                    latitude = 41.82592, elevation = 100, verbose = FALSE) plot(density(unlist(lapply(MS, sf_transp))), main = \"Posterior transpiration\",       xlab = \"Total transpiration (mm)\") plot(density(unlist(lapply(MS, sf_stress))),       xlab = \"Average plant stress\", main=\"Posterior stress\") s_prior = prior$sampler(100) colnames(s_prior)<- parNames MS_prior = multiple_runs(s_prior, x = x1, meteo = examplemeteo,                          latitude = 41.82592, elevation = 100, verbose = FALSE) plot(density(unlist(lapply(MS_prior, sf_transp))), main = \"Transpiration\",       xlab = \"Total transpiration (mm)\",      xlim = c(100,200), ylim = c(0,6)) lines(density(unlist(lapply(MS, sf_transp))), col = \"red\") legend(\"topleft\", legend = c(\"Prior\", \"Posterior\"),         col = c(\"black\", \"red\"), lty=1, bty=\"n\") plot(density(unlist(lapply(MS_prior, sf_stress))), main = \"Plant stress\",       xlab = \"Average plant stress\",      xlim = c(0,30), ylim = c(0,2)) lines(density(unlist(lapply(MS, sf_stress))), col = \"red\") legend(\"topleft\", legend = c(\"Prior\", \"Posterior\"), col = c(\"black\", \"red\"), lty=1, bty=\"n\")"},{"path":"https://emf-creaf.github.io/medfate/articles/modelanalysis/SensitivityCalibration.html","id":"references","dir":"Articles > Modelanalysis","previous_headings":"","what":"References","title":"Sensitivity analysis and calibration","text":"Pianosi, F., Beven, K., Freer, J., Hall, J.W., Rougier, J., Stephenson, D.B., Wagener, T., 2016. Sensitivity analysis environmental models: systematic review practical workflow. Environ. Model. Softw. 79, 214–232. https://doi.org/10.1016/j.envsoft.2016.02.008 Bertrand Iooss, Sebastien Da Veiga, Alexandre Janon, Gilles Pujol, contributions Baptiste Broto, Khalid Boumhaout, Thibault Delage, Reda El Amri, Jana Fruth, Laurent Gilquin, Joseph Guillaume, Loic Le Gratiet, Paul Lemaitre, Amandine Marrel, Anouar Meynaoui, Barry L. Nelson, Filippo Monari, Roelof Oomen, Oldrich Rakovec, Bernardo Ramos, Olivier Roustant, Eunhye Song, Jeremy Staum, Roman Sueur, Taieb Touati Frank Weber (2020). sensitivity: Global Sensitivity Analysis Model Outputs. R package version 1.23.1. https://CRAN.R-project.org/package=sensitivity Florian Hartig, Francesco Minunno Stefan Paul (2019). BayesianTools: General-Purpose MCMC SMC Samplers Tools Bayesian Statistics. R package version 0.1.7. https://CRAN.R-project.org/package=BayesianTools Saltelli, ., Ratto, M., Andres, T., Campolongo, F., Cariboni, J., Gatelli, D., Saisana, M., Tarantola, S., 2008. Global Sensitivity Analysis. Primer. Wiley.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/GrowthCalibration.html","id":"goals","dir":"Articles > Parametrization","previous_headings":"Introduction","what":"Goals","title":"Calibration of growth and senescence parameters","text":"growth model included medfate implements processes regulating plant carbon balance growth. Species-level parameter values processes obtained : () global functional trait databases; (b) meta-modelling exercises; (c) model calibration exercises. main goal current exercise obtain suitable values (via model calibration) parameters related maintenance respiration costs, formation rates senescence rates sapwood, difficult obtain using means. time, exercise provides information performance model predict secondary growth tree stand levels. results presented obtained using ver. 4.7.0 medfate.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/GrowthCalibration.html","id":"observational-data","dir":"Articles > Parametrization","previous_headings":"Introduction","what":"Observational data","title":"Calibration of growth and senescence parameters","text":"calibration data set corresponds 75 permanent forest plots Spanish National Forest Inventory located Catalonia. Forest plots correspond pure stands whose dominant species Fagus sylvatica, Pinus halepensis, Pinus nigra, Pinus sylvestris Quercus pubescens. 15 plots per dominant species set 15 plots encompass range climatic aridity. Plot characteristics described Rosas et al. (2019). Dendrochronological series available 6 trees per plot sampled December 2015. Note sixth species (Quercus ilex) included Rosas et al (2019), dendrochronological dating available.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/GrowthCalibration.html","id":"target-parameters-for-calibration","dir":"Articles > Parametrization","previous_headings":"Introduction","what":"Target parameters for calibration","title":"Calibration of growth and senescence parameters","text":"model parameters desired good estimates : Sapwood daily respiration rate (RERsapwood) - Used modulate maintenance respiration demands living sapwood tissues (parenchyma, cambium, phloem, etc.), large trees may also represent large fraction maintenance respiration. Sapwood maximum growth rate (RGRcambiummax) - Used modulate tree maximum daily sapwood growth rates (relative current cambium perimeter). Actual relative growth rates include temperature sink limitations growth. Sapwood daily senescence rate (SRsapwood) - Used determine daily proportion sapwood becomes heartwood. regulates area functional sapwood, together sapwood maximum growth rate. addition, soil stoniness target plots estimated surface stoniness classes. Since soil rock fragment content (rfc) strong influence soil water capacity, decided include proportion rocks second soil layer (30 100 cm) parameter calibrated.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/GrowthCalibration.html","id":"calibration-procedure","dir":"Articles > Parametrization","previous_headings":"","what":"Calibration procedure","title":"Calibration of growth and senescence parameters","text":"forest plot first data set, matched available dendrochronological series forest inventory tree cohort finding tree (IFN3 sampling) DBH similar estimated dendrochronology year 2000. , took series annual basal area increments (BAI) observations matched model secondary growth predictions matched tree cohort. forest plot second data set, took available dendrochronological series 1990 2004. Available diameter increments (DI) used infer DBH year 1990 transformed DI annual BAI. Simulations performed using daily weather data target plot, obtained via interpolation using package meteoland (2001 - 2015 period 1990-2004 period, depending data set), soil physical characteristics drawn SoilGrids data base. Model simulations done using basic water balance model (.e. transpirationMode = \"Granier\"), explains evaluation calibrated growth better model advanced ones (.e. Sperry Sureau). Transpiration photosynthesis parameters given values resulting meta-modelling exercise, whereas parameters sensitivity analysis left species-level defaults SpParamsMED. calibrated four target parameters target dominant species target plot using genetic algorithm (function ga package GA). Model parameter values assumed cohorts target species, remaining species plot given default constant parameter values. objective function genetic algorithm average, across cohorts observed dendrochronology series, mean absolute error (MAE) resulting comparing observed predicted annual BAI series. Population size genetic algorithm set 40 individuals. maximum 25 iterations genetic algorithm allowed, calibration procedure stopped best parameter combination change 5 consecutive iterations.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/GrowthCalibration.html","id":"error-function","dir":"Articles > Parametrization","previous_headings":"Calibration results","what":"Error function","title":"Calibration of growth and senescence parameters","text":"following panel shows distribution final (optimum) values error function (average relative MAE) dominant species:","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/GrowthCalibration.html","id":"parameter-distribution-and-covariance","dir":"Articles > Parametrization","previous_headings":"Calibration results","what":"Parameter distribution and covariance","title":"Calibration of growth and senescence parameters","text":"following panels show distribution calibrated parameter values species (gray dashed lines indicate parameter value limits used calibration procedure):  following table shows mean error parameter values species overall means: Statistically significant differences can observed species RERsapwood RGRcambiummax, shown following ANOVA tables: Finally, following panels illustrate overall lack covariance calibrated parameter values:","code":"## Analysis of Variance Table ##  ## Response: RERsapwood_cal ##           Df     Sum Sq    Mean Sq F value  Pr(>F)   ## Species    4 2.9387e-09 7.3468e-10  2.4538 0.05371 . ## Residuals 70 2.0958e-08 2.9941e-10                   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ## Analysis of Variance Table ##  ## Response: RGRcambiummax_cal ##           Df     Sum Sq    Mean Sq F value    Pr(>F)     ## Species    4 3.5051e-05 8.7627e-06  7.2156 6.342e-05 *** ## Residuals 70 8.5008e-05 1.2144e-06                       ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ## Analysis of Variance Table ##  ## Response: SRsapwood_cal ##           Df     Sum Sq    Mean Sq F value  Pr(>F)   ## Species    4 1.7168e-08 4.2920e-09  2.6302 0.04147 * ## Residuals 70 1.1422e-07 1.6318e-09                   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ## Analysis of Variance Table ##  ## Response: rfc_cal ##           Df  Sum Sq Mean Sq F value Pr(>F) ## Species    4   933.5  233.38  0.5634   0.69 ## Residuals 70 28996.7  414.24 ## Warning in get_plot_component(plot, \"guide-box\"): Multiple components found; ## returning the first one. To return all, use `return_all = TRUE`."},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/GrowthCalibration.html","id":"comparison-of-the-basic-and-advanced-sub-models","dir":"Articles > Parametrization","previous_headings":"","what":"Comparison of the basic and advanced sub-models","title":"Calibration of growth and senescence parameters","text":"Since calibration exercise conducted using basic sub-model (transpirationMode = \"Granier\"), expected growth simulations advanced sub-model (transpirationMode = \"Sperry\" transpirationMode = \"Sureau\") larger error rates , potentially, larger bias. check , repeated growth simulations using calibrated parameters plot advanced sub-model. following figures show bias mean absolute error annual basal area increments obtained simulations using basic advanced sub-models, cases using calibrated parameters.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/GrowthCalibration.html","id":"bibliography","dir":"Articles > Parametrization","previous_headings":"","what":"Bibliography","title":"Calibration of growth and senescence parameters","text":"Batllori, E., J. M. Blanco-Moreno, J. M. Ninot, E. Gutiérrez, E. Carrillo. 2009. Vegetation patterns alpine treeline ecotone: influence tree cover abrupt change species composition alpine communities. Journal Vegetation Science 20:814–825. Batllori, E., E. Gutiérrez. 2008. Regional tree line dynamics response global change Pyrenees. Journal Ecology 96:1275–1288. Rosas, T., M. Mencuccini, J. Barba, H. Cochard, S. Saura-Mas, J. Martínez-Vilalta. 2019. Adjustments coordination hydraulic, leaf stem traits along water availability gradient. New Phytologist 223:632–646.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"goal","dir":"Articles > Parametrization","previous_headings":"Introduction","what":"Goal","title":"Meta-modelling exercise","text":"document presents meta-modelling exercise basic (Granier’s transpiration) advanced (Sperry’s transpiration mode) versions soil plant water balance model. goal make transpiration photosynthesis predictions produced basic water balance model similar possible produced advanced model , given greater process detail physical basis, assumed provide realistic accurate predictions appropriate functional traits supplied. exercise included, among others, De Cáceres et al. (2023). meta-modelling results benefit water balance simulations (function spwb) also simulations forest growth (growth) dynamics (fordyn). results presented obtained using ver. 4.7.0 medfate.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"target-parameters","dir":"Articles > Parametrization","previous_headings":"Introduction","what":"Target parameters","title":"Meta-modelling exercise","text":"following parameters used basic model, easily parameterized available information (see https://emf-creaf.github.io/medfatebook/index.html): Tmax_LAI Tmax_LAIsp, determine ratio maximum transpiration potential evapotranspiration given LAI. empirical function parameters derived Granier (1999) European temperate forests, without distinguishing forests dominated different species. Psi_Extract Exp_Extract, determine actual transpiration fraction maximum transpiration, function soil water potential given layer. WUE, represents daily water use efficiency (g C gross assimilation / l H2O transpired) conditions VPD = 1kPa, high photosynthetically active radiation (PAR) air CO2 limitations. WUE_par, specifies dependency WUE PAR. WUE_co2, specifies dependency WUE air CO2 concentration. WUE_vpd, specifies dependency WUE vapor pressure deficit (VPD). stated , general idea use simulation results issued advanced water balance model obtain appropriate species-level estimates previous parameters, simulations basic water balance model (faster) produce output similar advanced model (slower). case Tmax_LAI Tmax_LAIsp aim determine species-specific factor can used modify empirical coefficients obtained Granier (1999). Water use efficiency emergent property advanced water balance model, depending multiple parameters (hydraulics, photosynthetic capacity, stomatal conductance, etc). can thus estimate WUE values ([CO2] = 386) using simulations high light levels water deficit. decrease WUE plant cohorts progressively shadier environments respect WUE full light can provide us estimate WUE_par, depend multiple plant traits. Finally, can use additional simulations complex model increasing [CO2] values model relationship gross photosynthesis given [CO2] compared [CO2] = 386 species.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"target-species","dir":"Articles > Parametrization","previous_headings":"Introduction","what":"Target species","title":"Meta-modelling exercise","text":"metamodelling procedure applied target species, focused twelve main tree species Catalonia: Abies alba, Castanea sativa, Pinus halepensis, Pinus sylvestris, Pinus nigra, Pinus uncinata, Pinus pinea, Quercus faginea, Quercus ilex, Quercus pubescens, Quercus suber Fagus sylvatica. species included species parameter table SpParamsMED package medfate. Ideally, transpiration photosynthesis predictions advanced water balance model evaluated parameterization using reference meta-modelling study. Otherwise biasing models inappropriate parameter values. present, advance water balance model evaluated using data experimental plots stands dominated target species, others.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"forest-soil-and-weather-inputs","dir":"Articles > Parametrization","previous_headings":"Simulations for the meta-modelling exercise","what":"Forest, soil and weather inputs","title":"Meta-modelling exercise","text":"used forest plot data third edition Spanish National Forest Inventory (IFN3). Forest plots located Catalonia minimum basal area 5 m2·ha−1m^2·ha^{-1}. target species randomly selected 50 forest plots species dominant (> 50% basal area). Plant records corresponding species different target species excluded. Like simulation exercises IFN data, soil data obtained SoilGrids plot coordinates, rock fragment contents corrected according amount surface stoniness recorded field sampling. Daily weather data corresponding year 2000 obtained interpolation using package meteoland location forest plot.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"soil-water-balance-simulations","dir":"Articles > Parametrization","previous_headings":"Simulations for the meta-modelling exercise","what":"Soil water balance simulations","title":"Meta-modelling exercise","text":"target species, ran soil water balance model using function spwb (actually, spwb_spatial() package medfateland) either Granier’s Sperry’s transpiration mode. Simulations conducted using control$unlimitedSoilWater = TRUE transpiration photosynthesis estimates include soil water limitations (cohorts shade still affected lower PAR, however). plant cohort simulated plot recorded percentage PAR available plant cohort, annual transpiration annual photosynthesis produced model. Additional simulations increasing carbon dioxide concentration conducted using Sperry transpiration mode [CO2][CO_2] values increasing 350 ppm 900 ppm. also avoided soil water limitations using control$unlimitedSoilWater = TRUE. plot recorded annual gross photosynthesis per leaf area averaged across plant cohorts using LAI weights.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"transpiration-ratio","dir":"Articles > Parametrization","previous_headings":"","what":"Transpiration ratio","title":"Meta-modelling exercise","text":"examined systematic differences annual transpiration (E) two models. differences species-specific. basic model single linear equation (Granier) estimate ratio maximum transpiration (Tmax) potential evapotranspiration (PET) stand’s LAI divides plant transpiration among plant cohorts, advanced model estimates cohort transpiration complex calculation involving several species-specific functional traits. ratio cohort annual E estimates two models used scale estimates Granier’s equation (words, scale parameters). following plot displays ratio cohort annual E estimates obtained using basic advanced models, use percentage PAR plant cohort x-axis show whether relationship changes sunlit shade cohorts:","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"relative-transpiration-function","dir":"Articles > Parametrization","previous_headings":"","what":"Relative transpiration function","title":"Meta-modelling exercise","text":"Parameters Psi_Extract Exp_Extract determine actual transpiration fraction maximum transpiration, function soil water potential given layer. parameters Weibull function. can estimated fitting Weibull function ratio transpiration values obtained simulations vs without soil drought limitations (Sperry’s transpiration mode) function soil water potential. illustrated figure different species:","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"relationship-between-wue-and-par","dir":"Articles > Parametrization","previous_headings":"Water use efficiency ([CO2] = 386)","what":"Relationship between WUE and PAR","title":"Meta-modelling exercise","text":"estimated WUEg ratio annual gross photosynthesis (Ag) annual transpiration (E), estimated using advanced transpiration model. WUE values thus depend species identity (via functional traits) plot environmental factors (e.g. climatic conditions), well position plant within canopy. estimate maximum PAR maximum WUE across cohorts plot, calculate relative WUE cohort ratio WUE plot maximum value. want build model relative WUE function available PAR, can reduce species-level maximum WUE values cohorts shadow. fit model need good estimates relative WUE, implies maximum WUE values correspond high PAR. aim, focus records corresponding plots/species least 90% PAR available least one cohort species plot. Using selection, draw relationship PAR WUEg: see relationship species-specific. WUE known decrease parts canopy receiving less light (e.g. Medrano et al. 2012). can now plot relative WUE relationship FPAR:  Note relationship relative WUE PAR less noisy relationship absolute WUE FPAR. species, fit non-linear model relative WUE power function FPAR: now draw previous plot species-specific fitted relationships, .e. relative WUEg function FPAR:  Note substantial differences decay coefficients among species.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"dependency-of-photosynthesis-on-co2","dir":"Articles > Parametrization","previous_headings":"","what":"Dependency of photosynthesis on [CO2]","title":"Meta-modelling exercise","text":"parameter WUE_co2, specifies dependency WUE air CO2 concentration estimated fitting non-linear function ratio photosynthesis given [CO2][CO_2] value photosynthesis [CO2]=386[CO_2] = 386 ppm:","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"evaluation-of-the-effect-of-the-new-parameters","dir":"Articles > Parametrization","previous_headings":"","what":"Evaluation of the effect of the new parameters","title":"Meta-modelling exercise","text":"evaluated whether estimated parameters indeed increased similarity transpiration (E) gross photosynthesis (Ag) estimates two models. aim ran basic water balance model forest plots using estimated parameters instead default values. following plots show effect new parameters annual E annual Ag plant cohorts plots included study:","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/parametrization/Metamodelling.html","id":"references","dir":"Articles > Parametrization","previous_headings":"","what":"References","title":"Meta-modelling exercise","text":"De Cáceres M, Molowny-Horas R, Cabon , Martínez-Vilalta J, Mencuccini M, García-Valdés R, Nadal-Sala D, Sabaté S, Martin-StPaul N, Morin X, D’Adamo F, Batllori E, Améztegui (2023) MEDFATE 2.9.3: trait-enabled model simulate Mediterranean forest function dynamics regional scales. Geoscientific Model Development 16, 3165–3201 (https://doi.org/10.5194/gmd-16-3165-2023). Medrano, H., . Pou, M. Tomás, S. Martorell, J. Gulias, J. Flexas, J. M. Escalona. 2012. Average daily light interception determines leaf water use efficiency among different canopy locations grapevine. Agricultural Water Management 114:4–10.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"about-this-vignette","dir":"Articles > Runmodels","previous_headings":"","what":"About this vignette","title":"Advanced water and energy balance","text":"document describes run water energy balance model uses detailed approach hydraulics stomatal regulation described De Cáceres et al. (2021) Ruffault et al. (2022). recommend reading vignette Basic water balance one accessible introduction soil water balance modelling. vignette meant teach users run simulation model within R. details model design formulation can found medfatebook.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"preparing-model-inputs","dir":"Articles > Runmodels","previous_headings":"","what":"Preparing model inputs","title":"Advanced water and energy balance","text":"Model inputs explained greater detail vignettes Understanding model inputs Preparing model inputs. review different steps required run function spwb().","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"soil-vegetation-meteorology-and-species-data","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Soil, vegetation, meteorology and species data","title":"Advanced water and energy balance","text":"Soil information needs entered data frame soil layers rows physical attributes columns. Soil physical attributes can initialized default values, given number layers, using function defaultSoilParams(): explained package overview, models included medfate primarily designed ran forest inventory plots. use example object provided package: Importantly, data frame daily weather period simulated required. use default data frame included package: Finally, simulations medfate require data frame species parameter values, load using defaults Catalonia (NE Spain):","code":"examplesoil <- defaultSoilParams(4) examplesoil ##   widths clay sand om nitrogen  bd rfc ## 1    300   25   25 NA       NA 1.5  25 ## 2    700   25   25 NA       NA 1.5  45 ## 3   1000   25   25 NA       NA 1.5  75 ## 4   2000   25   25 NA       NA 1.5  95 data(exampleforest) exampleforest ## $treeData ##            Species   N   DBH Height Z50  Z95 ## 1 Pinus halepensis 168 37.55    800 100  600 ## 2     Quercus ilex 384 14.60    660 300 1000 ##  ## $shrubData ##             Species Cover Height Z50  Z95 ## 1 Quercus coccifera  3.75     80 200 1000 ##  ## $herbCover ## [1] 10 ##  ## $herbHeight ## [1] 20 ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\" data(examplemeteo) head(examplemeteo) ##        dates MinTemperature MaxTemperature Precipitation MinRelativeHumidity ## 1 2001-01-01     -0.5934215       6.287950      4.869109            65.15411 ## 2 2001-01-02     -2.3662458       4.569737      2.498292            57.43761 ## 3 2001-01-03     -3.8541036       2.661951      0.000000            58.77432 ## 4 2001-01-04     -1.8744860       3.097705      5.796973            66.84256 ## 5 2001-01-05      0.3288287       7.551532      1.884401            62.97656 ## 6 2001-01-06      0.5461322       7.186784     13.359801            74.25754 ##   MaxRelativeHumidity Radiation WindSpeed ## 1           100.00000  12.89251  2.000000 ## 2            94.71780  13.03079  7.662544 ## 3            94.66823  16.90722  2.000000 ## 4            95.80950  11.07275  2.000000 ## 5           100.00000  13.45205  7.581347 ## 6           100.00000  12.84841  6.570501 data(\"SpParamsMED\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"simulation-control","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Simulation control","title":"Advanced water and energy balance","text":"Apart data inputs, behaviour simulation models controlled using set global parameters. default parameterization obtained using function defaultControl(): use advanced water balance model must change values transpirationMode switch \"Granier\" either \"Sperry\" \"Sureau\". Since inspecting subdaily results, need set flag obtain subdaily output:","code":"control <- defaultControl(\"Sperry\") control$subdailyResults <- TRUE"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"water-balance-input-object","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Water balance input object","title":"Advanced water and energy balance","text":"last object needed calling simulation functions, called spwbInput. consists compilation aboveground, belowground parameters specification additional parameter values plant cohort. done calling function spwbInput(): spwbInput object advanced water energy balance similar simple water balance simulations, contains elements. Information cohort species found element cohorts, .e. cohort code, species index species name: Element soil contains soil layer parameters state variables (moisture temperature): aside, columns x$soil present input data frame examplesoil created internal call soil initialization function called soil(). Element canopy contains state variables within canopy: Canopy temperature, water vapour pressure CO2CO_2 concentration state variables needed canopy energy balance. canopy energy balance assumes single canopy layer, values assumed canopy. Variation within-canopy state variables modelled multi-canopy energy balance used (see control parameter multiLayerBalance). may already known, element contains aboveground structure data already know: Belowground parameters can seen : belowLayers: spwbInputobject also includes cohort parameter values several kinds traits. example, plant anatomy parameters described paramsAnatomy: Parameters related plant transpiration photosynthesis can seen paramsTranspiration: Parameters related pressure-volume curves water storage capacity leaf stem organs paramsWaterStorage: Finally, remember one can play plant-specific parameters soil water balance (instead using species-level values) modifying manually parameter values object.","code":"x <- spwbInput(exampleforest, examplesoil, SpParamsMED, control) x$cohorts ##         SP              Name ## T1_148 148  Pinus halepensis ## T2_168 168      Quercus ilex ## S1_165 165 Quercus coccifera x$soil ##   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha ## 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 ## 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 ## 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 ## 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 ##       VG_n VG_theta_res VG_theta_sat W Temp ## 1 1.303861        0.041     0.423715 1   NA ## 2 1.303861        0.041     0.423715 1   NA ## 3 1.303861        0.041     0.423715 1   NA ## 4 1.303861        0.041     0.423715 1   NA x$canopy ##    zlow zmid  zup LAIlive LAIexpanded LAIdead Tair Cair VPair ## 1     0   50  100      NA          NA      NA   NA   NA    NA ## 2   100  150  200      NA          NA      NA   NA   NA    NA ## 3   200  250  300      NA          NA      NA   NA   NA    NA ## 4   300  350  400      NA          NA      NA   NA   NA    NA ## 5   400  450  500      NA          NA      NA   NA   NA    NA ## 6   500  550  600      NA          NA      NA   NA   NA    NA ## 7   600  650  700      NA          NA      NA   NA   NA    NA ## 8   700  750  800      NA          NA      NA   NA   NA    NA ## 9   800  850  900      NA          NA      NA   NA   NA    NA ## 10  900  950 1000      NA          NA      NA   NA   NA    NA ## 11 1000 1050 1100      NA          NA      NA   NA   NA    NA ## 12 1100 1150 1200      NA          NA      NA   NA   NA    NA ## 13 1200 1250 1300      NA          NA      NA   NA   NA    NA ## 14 1300 1350 1400      NA          NA      NA   NA   NA    NA ## 15 1400 1450 1500      NA          NA      NA   NA   NA    NA ## 16 1500 1550 1600      NA          NA      NA   NA   NA    NA ## 17 1600 1650 1700      NA          NA      NA   NA   NA    NA ## 18 1700 1750 1800      NA          NA      NA   NA   NA    NA ## 19 1800 1850 1900      NA          NA      NA   NA   NA    NA ## 20 1900 1950 2000      NA          NA      NA   NA   NA    NA ## 21 2000 2050 2100      NA          NA      NA   NA   NA    NA ## 22 2100 2150 2200      NA          NA      NA   NA   NA    NA ## 23 2200 2250 2300      NA          NA      NA   NA   NA    NA ## 24 2300 2350 2400      NA          NA      NA   NA   NA    NA ## 25 2400 2450 2500      NA          NA      NA   NA   NA    NA ## 26 2500 2550 2600      NA          NA      NA   NA   NA    NA ## 27 2600 2650 2700      NA          NA      NA   NA   NA    NA ## 28 2700 2750 2800      NA          NA      NA   NA   NA    NA x$above ##          H        CR   LAI_live LAI_expanded LAI_dead ObsID ## T1_148 800 0.6605196 0.84874773   0.84874773        0  <NA> ## T2_168 660 0.6055642 0.70557382   0.70557382        0  <NA> ## S1_165  80 0.8032817 0.03062604   0.03062604        0  <NA> x$below ##        Z50  Z95 Z100 ## T1_148 100  600   NA ## T2_168 300 1000   NA ## S1_165 200 1000   NA x$belowLayers ## $V ##                1         2          3           4 ## T1_148 0.8604899 0.1194556 0.01511005 0.004944476 ## T2_168 0.5008953 0.4505941 0.04064831 0.007862284 ## S1_165 0.6799879 0.2737911 0.03567632 0.010544678 ##  ## $L ##               1        2        3        4 ## T1_148 2289.062 1566.552 2250.052 4226.166 ## T2_168 1817.571 2100.346 2410.127 4285.194 ## S1_165 1085.030 1380.808 2170.587 4146.637 ##  ## $VGrhizo_kmax ##               1        2         3         4 ## T1_148 11478618  1593494  201562.5  65957.49 ## T2_168 36121247 32493859 2931286.8 566975.78 ## S1_165 10941459  4405482  574055.7 169670.90 ##  ## $VCroot_kmax ##               1         2          3           4 ## T1_148 2.382795 0.4833484 0.04256689 0.007416044 ## T2_168 1.568929 1.2213562 0.09601747 0.010445417 ## S1_165 2.407779 0.7618041 0.06314806 0.009770000 ##  ## $Wpool ##        1 2 3 4 ## T1_148 1 1 1 1 ## T2_168 1 1 1 1 ## S1_165 1 1 1 1 ##  ## $RhizoPsi ##             1      2      3      4 ## T1_148 -0.033 -0.033 -0.033 -0.033 ## T2_168 -0.033 -0.033 -0.033 -0.033 ## S1_165 -0.033 -0.033 -0.033 -0.033 x$paramsAnatomy ##        Hmed    Al2As      SLA LeafWidth LeafDensity WoodDensity FineRootDensity ## T1_148  850 1317.523 5.140523 0.1384772   0.2982842   0.6077016       0.2982842 ## T2_168  500 3908.823 6.340000 1.7674359   0.4893392   0.9008264       0.4893392 ## S1_165   80 4189.325 4.980084 1.3761085   0.3709679   0.4389106       0.3709679 ##        conduit2sapwood      SRL RLD     r635 ## T1_148       0.9236406 3172.572  10 1.964226 ## T2_168       0.6238125 4398.812  10 1.805872 ## S1_165       0.6238125 4398.812  10 2.289452 x$paramsTranspiration ##             Gswmin    Gswmax  Vmax298  Jmax298 Kmax_stemxylem Kmax_rootxylem ## T1_148 0.003086667 0.2850000 72.19617 124.1687           0.15           0.60 ## T2_168 0.004473333 0.2007222 68.51600 118.7863           0.40           1.60 ## S1_165 0.010455247 0.2830167 62.78100 118.4486           0.29           1.16 ##        VCleaf_kmax VCleafapo_kmax  VCleaf_c  VCleaf_d kleaf_symp VCstem_kmax ## T1_148    4.000000        8.00000 11.137050 -2.380849    8.00000    1.339563 ## T2_168    4.000000        8.00000  1.339370 -2.582279    8.00000    1.620936 ## S1_165    9.579077       19.15815  2.254991 -3.133381   19.15815    4.599269 ##         VCstem_c  VCstem_d VCroot_kmax  VCroot_c  VCroot_d VGrhizo_kmax ## T1_148 12.709999 -5.290000    2.916127 11.137050 -3.065569     13339632 ## T2_168  3.560000 -7.720000    2.896748  1.339370 -2.214081     72113368 ## S1_165  3.095442 -7.857378    3.242501  1.402489 -1.523324     16090667 ##        Plant_kmax   FR_leaf   FR_stem   FR_root ## T1_148  0.7465846 0.1866462 0.5573346 0.2560193 ## T2_168  0.8249857 0.2062464 0.5089563 0.2847972 ## S1_165  1.5867376 0.1656462 0.3449978 0.4893561 x$paramsWaterStorage ##           maxFMC   LeafPI0   LeafEPS LeafAF     Vleaf   StemPI0   StemEPS ## T1_148 126.03063 -1.591429  8.918571 0.3525 0.5258525 -2.008039 13.256355 ## T2_168  93.15304 -1.483333 19.260000 0.1700 0.2199087 -3.227438 46.420610 ## S1_165  96.53441 -2.370000 17.230000 0.2400 0.4108968 -1.305868  6.297155 ##           StemAF Vsapwood ## T1_148 0.9236406 6.174277 ## T2_168 0.6238125 1.278142 ## S1_165 0.6238125 1.064511"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"static-analysis-of-sub-models","dir":"Articles > Runmodels","previous_headings":"","what":"Static analysis of sub-models","title":"Advanced water and energy balance","text":"using advanced water energy balance model, important understand parameters influence different sub-models. Package medfate provides low-level functions corresponding sub-models (light extinction, hydraulics, transpiration, photosynthesis…). addition, several high-level plotting functions allow examining several aspects processes.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"vulnerability-curves","dir":"Articles > Runmodels","previous_headings":"Static analysis of sub-models","what":"Vulnerability curves","title":"Advanced water and energy balance","text":"Given spwbInput object, can use function hydraulics_vulnerabilityCurvePlot() inspect vulnerability curves (.e. hydraulic conductance given segment changes water potential) plant cohort different segments soil-plant hydraulic network: rhizosphere, roots, stems leaves:     maximum values shape vulnerability curves leaves stems regulated parameters paramsTranspiration. Roots vulnerability curve parameters data frame, maximum conductance values need specified soil layer given belowLayers$VCroot_kmax. Note last call hydraulics_vulnerabilityCurvePlot() includes soil object. van Genuchten parameters define shape vulnerability curve rhizosphere stored object. Maximum conductance values rhizosphere given belowLayers$VGrhizo_kmax.","code":"hydraulics_vulnerabilityCurvePlot(x, type=\"leaf\") hydraulics_vulnerabilityCurvePlot(x, type=\"stem\") hydraulics_vulnerabilityCurvePlot(x, type=\"root\") hydraulics_vulnerabilityCurvePlot(x, examplesoil, type=\"rhizo\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"supply-functions","dir":"Articles > Runmodels","previous_headings":"Static analysis of sub-models","what":"Supply functions","title":"Advanced water and energy balance","text":"vulnerability curves conforming hydraulic network used model build supply function, relates water flow (.e. transpiration) drop water potential along whole hydraulic pathway. supply function contains two variables, also water potential intermediate nodes hydraulic network. Function hydraulics_supplyFunctionPlot() can used inspect variables:     Calls hydraulics_supplyFunctionPlot() always need spwbInput object soil object. soil moisture state (.e. water potential) starting point calculation supply function, different curves obtained different values soil moisture.","code":"hydraulics_supplyFunctionPlot(x, type=\"E\") hydraulics_supplyFunctionPlot(x, type=\"ERhizo\") hydraulics_supplyFunctionPlot(x, type=\"dEdP\") hydraulics_supplyFunctionPlot(x, type=\"StemPsi\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"stomatal-regulation-and-photosynthesis","dir":"Articles > Runmodels","previous_headings":"Static analysis of sub-models","what":"Stomatal regulation and photosynthesis","title":"Advanced water and energy balance","text":"soil water balance model determines stomatal conductance transpiration separately sunlit shade leaves. Stomatal conductance determined building photosynthesis function corresponding supply function finding value stomatal conductance maximizes carbon revenue avoiding hydraulic damage (profit-maximization approach). Given meteorological soil inputs chosen day timestep, function transp_stomatalRegulationPlot() allows displaying supply photosynthesis curves sunlit shade leaves, along indication values corresponding chosen stomatal aperture:","code":"d <- 100 transp_stomatalRegulationPlot(x, examplemeteo, day = d, timestep=12,                               latitude = 41.82592, elevation = 100, type=\"E\") ## Package 'meteoland' [ver. 2.2.2] transp_stomatalRegulationPlot(x, examplemeteo, day = d, timestep=12,                               latitude = 41.82592, elevation = 100, type=\"An\") transp_stomatalRegulationPlot(x, examplemeteo, day = d, timestep=12,                               latitude = 41.82592, elevation = 100, type=\"Gsw\") transp_stomatalRegulationPlot(x, examplemeteo, day = d, timestep=12,                               latitude = 41.82592, elevation = 100, type=\"T\") transp_stomatalRegulationPlot(x, examplemeteo, day = d, timestep=12,                               latitude = 41.82592, elevation = 100, type=\"VPD\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"pressure-volume-curves","dir":"Articles > Runmodels","previous_headings":"Static analysis of sub-models","what":"Pressure volume curves","title":"Advanced water and energy balance","text":"","code":"moisture_pressureVolumeCurvePlot(x, segment=\"leaf\", fraction=\"symplastic\") moisture_pressureVolumeCurvePlot(x, segment=\"leaf\", fraction=\"apoplastic\") moisture_pressureVolumeCurvePlot(x, segment=\"stem\", fraction=\"symplastic\") moisture_pressureVolumeCurvePlot(x, segment=\"stem\", fraction=\"apoplastic\")"},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"running-the-model","dir":"Articles > Runmodels","previous_headings":"Water balance for a single day","what":"Running the model","title":"Advanced water and energy balance","text":"Soil water balance simulations normally span periods several months years, since model operates daily subdaily temporal scales, possible perform soil water balance one day . done using function spwb_day(). following code select day meteorological input data perform soil water balance day : output spwb_day() list several elements:","code":"date <- examplemeteo$dates[d] meteovec <- unlist(examplemeteo[d,]) sd1<-spwb_day(x, date, meteovec,               latitude = 41.82592, elevation = 100, slope= 0, aspect = 0) names(sd1) ##  [1] \"cohorts\"            \"topography\"         \"weather\"            ##  [4] \"WaterBalance\"       \"EnergyBalance\"      \"Soil\"               ##  [7] \"Stand\"              \"Plants\"             \"SunlitLeaves\"       ## [10] \"ShadeLeaves\"        \"RhizoPsi\"           \"ExtractionInst\"     ## [13] \"PlantsInst\"         \"RadiationInputInst\" \"SunlitLeavesInst\"   ## [16] \"ShadeLeavesInst\"    \"LightExtinction\"    \"LWRExtinction\"      ## [19] \"CanopyTurbulence\""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"water-balance-output","dir":"Articles > Runmodels","previous_headings":"Water balance for a single day","what":"Water balance output","title":"Advanced water and energy balance","text":"Element WaterBalance contains soil water balance flows day (precipitation, infiltration, transpiration, …) Soil contains water evaporated soil layer, water transpired soil layer final soil water potential:","code":"sd1$WaterBalance ##                     PET                    Rain                    Snow  ##              3.90233421              0.00000000              0.00000000  ##                 NetRain                Snowmelt                   Runon  ##              0.00000000              0.00000000              0.00000000  ##            Infiltration      InfiltrationExcess        SaturationExcess  ##              0.00000000              0.00000000              0.00000000  ##                  Runoff            DeepDrainage         CapillarityRise  ##              0.00000000              0.00000000              0.00000000  ##         SoilEvaporation       HerbTranspiration         PlantExtraction  ##              0.50000000              0.04872542              0.68459236  ##           Transpiration HydraulicRedistribution  ##              0.68459236              0.00000000 sd1$Soil ##           Psi HerbTranspiration HydraulicInput HydraulicOutput PlantExtraction ## 1 -0.03547019      0.0444001775              0     0.494446834     0.494446834 ## 2 -0.03323841      0.0034620610              0     0.173786416     0.173786416 ## 3 -0.03303092      0.0006078123              0     0.014363954     0.014363954 ## 4 -0.03301162      0.0002553696              0     0.001995157     0.001995157"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"soil-and-canopy-energy-balance","dir":"Articles > Runmodels","previous_headings":"Water balance for a single day","what":"Soil and canopy energy balance","title":"Advanced water and energy balance","text":"Element EnergyBalance contains subdaily variation atmosphere, canopy soil temperatures, well canopy soil energy balance components. Package medfate provides plot function objects class spwb_day can used inspect results simulation. use function display subdaily dynamics plant, soil canopy variables. example, can use display temperature variations (temperature topmost soil layer drawn):","code":"names(sd1$EnergyBalance) ## [1] \"Temperature\"         \"SoilTemperature\"     \"CanopyEnergyBalance\" ## [4] \"SoilEnergyBalance\"   \"TemperatureLayers\"   \"VaporPressureLayers\" plot(sd1, type = \"Temperature\") plot(sd1, type = \"CanopyEnergyBalance\") plot(sd1, type = \"SoilEnergyBalance\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"plant-output","dir":"Articles > Runmodels","previous_headings":"Water balance for a single day","what":"Plant output","title":"Advanced water and energy balance","text":"Element Plants contains output values plant cohort. Several output variables can inspected element. Plants contains one value per cohort variable summarizes whole simulated day, information disaggregated time step can accessed PlantsInst. Moreover, can use function plot.spwb_day() draw plots sub-daily variation per species plant transpiration per ground area (L·m−2^{-2}), transpiration per leaf area (also L·m−2^{-2}), plant net photosynthesis (g C·m−2^{-2}), plant water potential (MPa):","code":"sd1$Plants ##               LAI    LAIlive     FPAR Extraction Transpiration ## T1_148 0.84874773 0.84874773 92.18285  0.4398375     0.4398375 ## T2_168 0.70557382 0.70557382 72.36365  0.2323782     0.2323782 ## S1_165 0.03062604 0.03062604 44.32407  0.0123766     0.0123766 ##        GrossPhotosynthesis NetPhotosynthesis    RootPsi    StemPsi LeafPLC ## T1_148          2.13085415        2.01822582 -0.4190276 -1.2593181       0 ## T2_168          1.74734659        1.63974124 -0.3353606 -0.8559196       0 ## S1_165          0.06680913        0.06290243 -0.3759137 -0.6029081       0 ##             StemPLC LeafPsiMin  LeafPsiMax      dEdP        DDS   StemRWC ## T1_148 5.822231e-09 -1.5416393 -0.03994108 0.5034372 0.00162010 0.9971770 ## T2_168 2.190611e-04 -1.1346709 -0.04019180 0.5262791 0.05550598 0.9973077 ## S1_165 1.941646e-04 -0.7151737 -0.04188680 1.0418424 0.02786522 0.9880915 ##          LeafRWC      LFMC WaterBalance ## T1_148 0.9581789 123.17261 4.895173e-17 ## T2_168 0.9826722  92.14730 1.059808e-17 ## S1_165 0.9891188  95.42815 1.148577e-18 plot(sd1, type = \"PlantTranspiration\", bySpecies = T) plot(sd1, type = \"TranspirationPerLeaf\", bySpecies = T) plot(sd1, type = \"NetPhotosynthesis\", bySpecies = T) plot(sd1, type = \"LeafPsiAverage\", bySpecies = T)"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"output-for-sunlit-and-shade-leaves","dir":"Articles > Runmodels","previous_headings":"Water balance for a single day","what":"Output for sunlit and shade leaves","title":"Advanced water and energy balance","text":"model distinguishes sunlit shade leaves stomatal regulation. Static properties sunlit shade leaves, cohort, can accessed via: Instantaneous values also stored sunlit shade leaves. can also use plot function objects class spwb_day draw instantaneous variations temperature sunlit shade leaves:  Note sunlit leaves species reach temperatures higher canopy. can also plot variations instantaneous gross net photosynthesis rates:   variations stomatal conductance:  variations vapour pressure deficit:  variations leaf water potential:","code":"sd1$SunlitLeaves ##        LeafPsiMin  LeafPsiMax      GSWMin     GSWMax  TempMin  TempMax ## T1_148  -1.642069 -0.03994108 0.002242650 0.27415943 1.274590 12.16115 ## T2_168  -1.593485 -0.04199022 0.003269167 0.07347117 1.272433 17.53310 ## S1_165  -1.122060 -0.04703362 0.007561899 0.09612847 1.267823 17.29344 sd1$ShadeLeaves ##        LeafPsiMin  LeafPsiMax      GSWMin     GSWMax   TempMin  TempMax ## T1_148 -1.4414211 -0.03994108 0.002250500 0.27894888 0.9434619 10.29716 ## T2_168 -0.7791464 -0.04019180 0.003263123 0.08228505 0.5326568 10.38288 ## S1_165 -0.5152537 -0.04188680 0.007626981 0.10699247 0.6721882 10.16051 plot(sd1, type = \"LeafTemperature\", bySpecies=TRUE) plot(sd1, type = \"LeafGrossPhotosynthesis\", bySpecies=TRUE) plot(sd1, type = \"LeafNetPhotosynthesis\", bySpecies=TRUE) plot(sd1, type = \"LeafStomatalConductance\", bySpecies=TRUE) plot(sd1, type = \"LeafVPD\", bySpecies=TRUE) plot(sd1, type = \"LeafPsi\", bySpecies=TRUE) plot(sd1, type = \"LeafCi\", bySpecies=TRUE) plot(sd1, type = \"LeafIntrinsicWUE\", bySpecies=TRUE)"},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"running-the-model-1","dir":"Articles > Runmodels","previous_headings":"Water balance for multiple days","what":"Running the model","title":"Advanced water and energy balance","text":"Users often use function spwb() run soil water balance model several days. function requires spwbInput object, soil object meteorological data frame. However, running spwb_day() modified input objects. particular, soil moisture end simulation : temperature soil layers: can also see current state canopy variables: simply use function resetInputs() reset state variables default values, new simulation affected end state previous simulation: Now ready call function spwb(): Function spwb() returns object class spwb. inspect elements, realize output arranged differently spwb_day(): particular, element spwbInput contains copy input parameters used run model: , WaterBalance contains water balance components, case form data frame days rows: Elements Plants list several elements contain daily output results plant cohorts, example leaf minimum (midday) water potentials :","code":"x$soil$W ## [1] 0.9847618 0.9984805 0.9998023 0.9999257 x$soil$Temp ## [1] 8.088428 3.159952 2.383624 2.363290 x$canopy ##    zlow zmid  zup    LAIlive LAIexpanded LAIdead     Tair Cair     VPair ## 1     0   50  100 0.03062604  0.03062604       0 5.684041  386 0.5170718 ## 2   100  150  200 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 3   200  250  300 0.06200693  0.06200693       0 5.684041  386 0.5170718 ## 4   300  350  400 0.29933459  0.29933459       0 5.684041  386 0.5170718 ## 5   400  450  500 0.43266592  0.43266592       0 5.684041  386 0.5170718 ## 6   500  550  600 0.41005056  0.41005056       0 5.684041  386 0.5170718 ## 7   600  650  700 0.24368578  0.24368578       0 5.684041  386 0.5170718 ## 8   700  750  800 0.10657777  0.10657777       0 5.684041  386 0.5170718 ## 9   800  850  900 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 10  900  950 1000 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 11 1000 1050 1100 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 12 1100 1150 1200 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 13 1200 1250 1300 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 14 1300 1350 1400 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 15 1400 1450 1500 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 16 1500 1550 1600 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 17 1600 1650 1700 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 18 1700 1750 1800 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 19 1800 1850 1900 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 20 1900 1950 2000 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 21 2000 2050 2100 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 22 2100 2150 2200 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 23 2200 2250 2300 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 24 2300 2350 2400 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 25 2400 2450 2500 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 26 2500 2550 2600 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 27 2600 2650 2700 0.00000000  0.00000000       0 5.684041  386 0.5170718 ## 28 2700 2750 2800 0.00000000  0.00000000       0 5.684041  386 0.5170718 resetInputs(x) x$soil$W ## [1] 1 1 1 1 x$soil$Temp ## [1] NA NA NA NA x$canopy ##    zlow zmid  zup    LAIlive LAIexpanded LAIdead Tair Cair VPair ## 1     0   50  100 0.03062604  0.03062604       0   NA   NA    NA ## 2   100  150  200 0.00000000  0.00000000       0   NA   NA    NA ## 3   200  250  300 0.06200693  0.06200693       0   NA   NA    NA ## 4   300  350  400 0.29933459  0.29933459       0   NA   NA    NA ## 5   400  450  500 0.43266592  0.43266592       0   NA   NA    NA ## 6   500  550  600 0.41005056  0.41005056       0   NA   NA    NA ## 7   600  650  700 0.24368578  0.24368578       0   NA   NA    NA ## 8   700  750  800 0.10657777  0.10657777       0   NA   NA    NA ## 9   800  850  900 0.00000000  0.00000000       0   NA   NA    NA ## 10  900  950 1000 0.00000000  0.00000000       0   NA   NA    NA ## 11 1000 1050 1100 0.00000000  0.00000000       0   NA   NA    NA ## 12 1100 1150 1200 0.00000000  0.00000000       0   NA   NA    NA ## 13 1200 1250 1300 0.00000000  0.00000000       0   NA   NA    NA ## 14 1300 1350 1400 0.00000000  0.00000000       0   NA   NA    NA ## 15 1400 1450 1500 0.00000000  0.00000000       0   NA   NA    NA ## 16 1500 1550 1600 0.00000000  0.00000000       0   NA   NA    NA ## 17 1600 1650 1700 0.00000000  0.00000000       0   NA   NA    NA ## 18 1700 1750 1800 0.00000000  0.00000000       0   NA   NA    NA ## 19 1800 1850 1900 0.00000000  0.00000000       0   NA   NA    NA ## 20 1900 1950 2000 0.00000000  0.00000000       0   NA   NA    NA ## 21 2000 2050 2100 0.00000000  0.00000000       0   NA   NA    NA ## 22 2100 2150 2200 0.00000000  0.00000000       0   NA   NA    NA ## 23 2200 2250 2300 0.00000000  0.00000000       0   NA   NA    NA ## 24 2300 2350 2400 0.00000000  0.00000000       0   NA   NA    NA ## 25 2400 2450 2500 0.00000000  0.00000000       0   NA   NA    NA ## 26 2500 2550 2600 0.00000000  0.00000000       0   NA   NA    NA ## 27 2600 2650 2700 0.00000000  0.00000000       0   NA   NA    NA ## 28 2700 2750 2800 0.00000000  0.00000000       0   NA   NA    NA S <- spwb(x, examplemeteo, latitude = 41.82592, elevation = 100) ## Initial plant water content (mm): 6.78662 ## Initial soil water content (mm): 290.875 ## Initial snowpack content (mm): 0 ## Performing daily simulations ##  ##  [Year 2001]:............ ##  ## Final plant water content (mm): 6.78164 ## Final soil water content (mm): 273.973 ## Final snowpack content (mm): 0 ## Change in plant water content (mm): -0.00497874 ## Plant water balance result (mm): -5.66285e-16 ## Change in soil water content (mm): -16.902 ## Soil water balance result (mm): -16.902 ## Change in snowpack water content (mm): 0 ## Snowpack water balance result (mm): -7.10543e-15 ## Water balance components: ##   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 ##   Interception (mm) 92 Net rainfall (mm) 370 ##   Infiltration (mm) 402 Infiltration excess (mm) 19 Saturation excess (mm) 0 Capillarity rise (mm) 0 ##   Soil evaporation (mm) 22  Herbaceous transpiration (mm) 13 Woody plant transpiration (mm) 242 ##   Plant extraction from soil (mm) 242  Plant water balance (mm) -0 Hydraulic redistribution (mm) 4 ##   Runoff (mm) 19 Deep drainage (mm) 141 names(S) ##  [1] \"latitude\"      \"topography\"    \"weather\"       \"spwbInput\"     ##  [5] \"spwbOutput\"    \"WaterBalance\"  \"EnergyBalance\" \"Temperature\"   ##  [9] \"Soil\"          \"Snow\"          \"Stand\"         \"Plants\"        ## [13] \"SunlitLeaves\"  \"ShadeLeaves\"   \"subdaily\" names(S$spwbInput) ##  [1] \"control\"                 \"soil\"                    ##  [3] \"snowpack\"                \"canopy\"                  ##  [5] \"herbLAI\"                 \"herbLAImax\"              ##  [7] \"cohorts\"                 \"above\"                   ##  [9] \"below\"                   \"belowLayers\"             ## [11] \"paramsPhenology\"         \"paramsAnatomy\"           ## [13] \"paramsInterception\"      \"paramsTranspiration\"     ## [15] \"paramsWaterStorage\"      \"internalPhenology\"       ## [17] \"internalWater\"           \"internalLAIDistribution\" ## [19] \"internalFCCS\" head(S$WaterBalance) ##                  PET Precipitation      Rain Snow    NetRain Snowmelt ## 2001-01-01 0.8828475      4.869109  4.869109    0  3.4241795        0 ## 2001-01-02 1.6375337      2.498292  2.498292    0  1.0717469        0 ## 2001-01-03 1.3017026      0.000000  0.000000    0  0.0000000        0 ## 2001-01-04 0.5690790      5.796973  5.796973    0  4.3625616        0 ## 2001-01-05 1.6760567      1.884401  1.884401    0  0.7539027        0 ## 2001-01-06 1.2077028     13.359801 13.359801    0 11.7240275        0 ##            Infiltration InfiltrationExcess SaturationExcess Runoff DeepDrainage ## 2001-01-01    3.4241795                  0                0      0    2.9587043 ## 2001-01-02    1.0717469                  0                0      0    0.4987713 ## 2001-01-03    0.0000000                  0                0      0    0.0000000 ## 2001-01-04    4.3625616                  0                0      0    3.3039457 ## 2001-01-05    0.7539027                  0                0      0    0.1771615 ## 2001-01-06   11.7240275                  0                0      0    4.1214138 ##            CapillarityRise Evapotranspiration Interception SoilEvaporation ## 2001-01-01               0          1.9104045     1.444929       0.4478948 ## 2001-01-02               0          1.9995203     1.426545       0.5000000 ## 2001-01-03               0          0.8999863     0.000000       0.5000000 ## 2001-01-04               0          1.5930409     1.434411       0.1435328 ## 2001-01-05               0          1.7587830     1.130499       0.5000000 ## 2001-01-06               0          2.1067816     1.635773       0.4511066 ##            HerbTranspiration PlantExtraction Transpiration ## 2001-01-01       0.011023432     0.006557005   0.006557005 ## 2001-01-02       0.020446613     0.052528994   0.052528994 ## 2001-01-03       0.016253351     0.383732929   0.383732929 ## 2001-01-04       0.007105368     0.007991412   0.007991412 ## 2001-01-05       0.020927620     0.107356642   0.107356642 ## 2001-01-06       0.015079612     0.004822175   0.004822175 ##            HydraulicRedistribution ## 2001-01-01            0.000000e+00 ## 2001-01-02            0.000000e+00 ## 2001-01-03            0.000000e+00 ## 2001-01-04            0.000000e+00 ## 2001-01-05            0.000000e+00 ## 2001-01-06            1.329694e-05 head(S$Plants$LeafPsiMin) ##               T1_148     T2_168     S1_165 ## 2001-01-01 -1.256406 -0.7425001 -0.3902716 ## 2001-01-02 -1.368721 -0.6525553 -0.3961108 ## 2001-01-03 -1.331580 -0.8165961 -0.4527407 ## 2001-01-04 -1.223824 -0.6063900 -0.3488515 ## 2001-01-05 -1.349259 -0.7358269 -0.4326192 ## 2001-01-06 -1.299800 -0.6350148 -0.3832314"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"plotting-and-summarizing-results","dir":"Articles > Runmodels","previous_headings":"Water balance for multiple days","what":"Plotting and summarizing results","title":"Advanced water and energy balance","text":"Package medfate also provides plot function objects class spwb. can used show meteorological input. Additionally, can also used draw soil plant variables. code draw water fluxes, soil water potentials, plant transpiration plant (mid-day) water potential:     Alternatively, one can interactively create plots using function shinyplot, e.g.: simulation model uses daily steps, users may interested outputs larger time scales. package provides summary objects class spwb. function can used summarize model’s output different temporal steps (.e. weekly, annual, …). example, obtain water balance months one can use: Parameter output used indicate element spwb object desire summaries. Similarly, possible calculate average stress plant cohorts months: summary function can also used aggregate output species. case, values plant cohorts belonging species averaged using LAI values weights. example, may average daily drought stress across cohorts species (one cohort species, modify output): can combine aggregation species temporal aggregation (monthly averages):","code":"plot(S, type=\"Evapotranspiration\") plot(S, type=\"SoilPsi\", bySpecies = TRUE) plot(S, type=\"PlantTranspiration\", bySpecies = TRUE) plot(S, type=\"LeafPsiMin\", bySpecies = TRUE) shinyplot(S) summary(S, freq=\"months\",FUN=mean, output=\"WaterBalance\") ##                 PET Precipitation       Rain      Snow    NetRain   Snowmelt ## 2001-01-01 1.011397    2.41127383 1.87415609 0.5371177 1.34613589 0.42235503 ## 2001-02-01 2.278646    0.17855109 0.08778069 0.0907704 0.03511889 0.19831578 ## 2001-03-01 2.368035    2.41917349 2.41917349 0.0000000 1.93933438 0.01762496 ## 2001-04-01 3.086567    0.63056064 0.29195973 0.3386009 0.13472156 0.33860091 ## 2001-05-01 3.662604    0.76337345 0.76337345 0.0000000 0.57881566 0.00000000 ## 2001-06-01 5.265359    0.21959509 0.21959509 0.0000000 0.15746695 0.00000000 ## 2001-07-01 4.443053    3.27810591 3.27810591 0.0000000 2.81775241 0.00000000 ## 2001-08-01 4.463242    1.92222891 1.92222891 0.0000000 1.55188110 0.00000000 ## 2001-09-01 3.453891    1.30651303 1.30651303 0.0000000 1.04946567 0.00000000 ## 2001-10-01 2.405506    1.33598175 1.33598175 0.0000000 1.05395924 0.00000000 ## 2001-11-01 1.716591    2.20566281 1.47764599 0.7280168 1.33350571 0.72801682 ## 2001-12-01 1.608082    0.05046181 0.05046181 0.0000000 0.02018853 0.00000000 ##            Infiltration InfiltrationExcess SaturationExcess    Runoff ## 2001-01-01   1.76849092          0.0000000                0 0.0000000 ## 2001-02-01   0.23343467          0.0000000                0 0.0000000 ## 2001-03-01   1.95695933          0.0000000                0 0.0000000 ## 2001-04-01   0.47332247          0.0000000                0 0.0000000 ## 2001-05-01   0.57881566          0.0000000                0 0.0000000 ## 2001-06-01   0.15746695          0.0000000                0 0.0000000 ## 2001-07-01   2.57561889          0.2421335                0 0.2421335 ## 2001-08-01   1.51553769          0.0363434                0 0.0363434 ## 2001-09-01   1.04946567          0.0000000                0 0.0000000 ## 2001-10-01   0.95317435          0.1007849                0 0.1007849 ## 2001-11-01   1.82722547          0.2342971                0 0.2342971 ## 2001-12-01   0.02018853          0.0000000                0 0.0000000 ##            DeepDrainage CapillarityRise Evapotranspiration Interception ## 2001-01-01   1.44744549               0          0.9342692   0.52802019 ## 2001-02-01   0.01123283               0          0.5703038   0.05266179 ## 2001-03-01   1.26967055               0          1.0907492   0.47983911 ## 2001-04-01   0.00000000               0          0.8133118   0.15723817 ## 2001-05-01   0.06372233               0          1.1254065   0.18455779 ## 2001-06-01   0.00000000               0          1.2242501   0.06212814 ## 2001-07-01   0.00000000               0          1.6060321   0.46035350 ## 2001-08-01   0.09758682               0          1.5964331   0.37034782 ## 2001-09-01   0.05128315               0          1.0899358   0.25704736 ## 2001-10-01   0.44489349               0          0.9902250   0.28202252 ## 2001-11-01   1.21949898               0          0.6282484   0.14414028 ## 2001-12-01   0.00000000               0          0.4466326   0.03027328 ##            SoilEvaporation HerbTranspiration PlantExtraction Transpiration ## 2001-01-01     0.170049280        0.01262819       0.2235716     0.2235716 ## 2001-02-01     0.039707854        0.02844308       0.4494911     0.4494911 ## 2001-03-01     0.120147424        0.02955993       0.4612028     0.4612028 ## 2001-04-01     0.012045501        0.03849426       0.6055338     0.6055338 ## 2001-05-01     0.073947519        0.04566650       0.8212347     0.8212347 ## 2001-06-01     0.004702183        0.06307895       1.0943408     1.0943408 ## 2001-07-01     0.090002094        0.05492023       1.0007562     1.0007562 ## 2001-08-01     0.043282716        0.05567775       1.1271248     1.1271248 ## 2001-09-01     0.044322248        0.04310262       0.7454636     0.7454636 ## 2001-10-01     0.052513679        0.03002608       0.6256627     0.6256627 ## 2001-11-01     0.058371102        0.02142489       0.4043121     0.4043121 ## 2001-12-01     0.016180807        0.02006187       0.3801167     0.3801167 ##            HydraulicRedistribution ## 2001-01-01            6.954160e-07 ## 2001-02-01            2.649091e-04 ## 2001-03-01            1.001693e-03 ## 2001-04-01            5.639151e-03 ## 2001-05-01            4.514233e-03 ## 2001-06-01            9.831075e-02 ## 2001-07-01            2.318220e-02 ## 2001-08-01            2.130429e-03 ## 2001-09-01            1.746721e-03 ## 2001-10-01            5.115775e-04 ## 2001-11-01            1.584007e-03 ## 2001-12-01            2.420113e-03 summary(S, freq=\"months\",FUN=mean, output=\"PlantStress\") ##                  T1_148     T2_168     S1_165 ## 2001-01-01 0.0002425489 0.02029131 0.01098663 ## 2001-02-01 0.0007955526 0.03584040 0.01969908 ## 2001-03-01 0.0010360682 0.04084532 0.02237665 ## 2001-04-01 0.0013961111 0.05026582 0.03026205 ## 2001-05-01 0.0029847640 0.06881531 0.04117978 ## 2001-06-01 0.0210319599 0.12176464 0.12757254 ## 2001-07-01 0.0083677818 0.09575847 0.06826600 ## 2001-08-01 0.0063842654 0.09342219 0.05705369 ## 2001-09-01 0.0028120353 0.06597470 0.03795780 ## 2001-10-01 0.0019567417 0.05328059 0.02954134 ## 2001-11-01 0.0006214232 0.03239042 0.01851331 ## 2001-12-01 0.0006653219 0.03295971 0.02006250 head(summary(S, freq=\"day\", output=\"PlantStress\", bySpecies = TRUE)) ##            Pinus halepensis Quercus coccifera Quercus ilex ## 2001-01-01     1.239166e-04       0.009798356   0.02120075 ## 2001-01-02     2.690256e-04       0.009886504   0.01865970 ## 2001-01-03     2.951949e-04       0.012992165   0.02712720 ## 2001-01-04     8.704417e-05       0.009361148   0.01819566 ## 2001-01-05     2.837136e-04       0.010253995   0.01932877 ## 2001-01-06     1.669615e-04       0.008492610   0.01632111 summary(S, freq=\"month\", FUN = mean, output=\"PlantStress\", bySpecies = TRUE) ##            Pinus halepensis Quercus coccifera Quercus ilex ## 2001-01-01     0.0002425489        0.01098663   0.02029131 ## 2001-02-01     0.0007955526        0.01969908   0.03584040 ## 2001-03-01     0.0010360682        0.02237665   0.04084532 ## 2001-04-01     0.0013961111        0.03026205   0.05026582 ## 2001-05-01     0.0029847640        0.04117978   0.06881531 ## 2001-06-01     0.0210319599        0.12757254   0.12176464 ## 2001-07-01     0.0083677818        0.06826600   0.09575847 ## 2001-08-01     0.0063842654        0.05705369   0.09342219 ## 2001-09-01     0.0028120353        0.03795780   0.06597470 ## 2001-10-01     0.0019567417        0.02954134   0.05328059 ## 2001-11-01     0.0006214232        0.01851331   0.03239042 ## 2001-12-01     0.0006653219        0.02006250   0.03295971"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/AdvancedWaterEnergyBalance.html","id":"references","dir":"Articles > Runmodels","previous_headings":"","what":"References","title":"Advanced water and energy balance","text":"De Cáceres M, Mencuccini M, Martin-StPaul N, Limousin JM, Coll L, Poyatos R, Cabon , Granda V, Forner , Valladares F, Martínez-Vilalta J (2021) Unravelling effect species mixing water use drought stress holm oak forests: modelling approach. Agricultural Forest Meteorology 296 (https://doi.org/10.1016/j.agrformet.2020.108233). Ruffault J, Pimont F, Cochard H, Dupuy JL, Martin-StPaul N (2022) SurEau-Ecos v2.0: trait-based plant hydraulics model simulations plant water status drought-induced mortality ecosystem level. Geoscientific Model Development 15, 5593-5626 (https://doi.org/10.5194/gmd-15-5593-2022).","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"about-this-vignette","dir":"Articles > Runmodels","previous_headings":"","what":"About this vignette","title":"Basic water balance","text":"present document describes run soil plant water balance model described De Cáceres et al. (2015) using package medfate. document illustrates prepare inputs, use simulation functions inspect outputs. details model design formulation can found medfatebook. introduces many basic features simulations package medfate, document read addressing advanced topics water balance simulations growth simulations.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"preparing-model-inputs","dir":"Articles > Runmodels","previous_headings":"","what":"Preparing model inputs","title":"Basic water balance","text":"Model inputs explained greater detail vignettes Understanding model inputs Preparing model inputs. review different steps required run function spwb().","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"soil-vegetation-meteorology-and-species-data","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Soil, vegetation, meteorology and species data","title":"Basic water balance","text":"Soil information needs entered data frame soil layers rows physical attributes columns. Soil physical attributes can initialized default values, given number layers, using function defaultSoilParams(): explained package overview, models included medfate primarily designed ran forest inventory plots. use example object provided package: Importantly, data frame daily weather period simulated required. use default data frame included package: Finally, simulations medfate require data frame species parameter values, load using defaults Catalonia (NE Spain):","code":"examplesoil <- defaultSoilParams(4) examplesoil ##   widths clay sand om nitrogen  bd rfc ## 1    300   25   25 NA       NA 1.5  25 ## 2    700   25   25 NA       NA 1.5  45 ## 3   1000   25   25 NA       NA 1.5  75 ## 4   2000   25   25 NA       NA 1.5  95 data(exampleforest) exampleforest ## $treeData ##            Species   N   DBH Height Z50  Z95 ## 1 Pinus halepensis 168 37.55    800 100  600 ## 2     Quercus ilex 384 14.60    660 300 1000 ##  ## $shrubData ##             Species Cover Height Z50  Z95 ## 1 Quercus coccifera  3.75     80 200 1000 ##  ## $herbCover ## [1] 10 ##  ## $herbHeight ## [1] 20 ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\" data(examplemeteo) head(examplemeteo) ##        dates MinTemperature MaxTemperature Precipitation MinRelativeHumidity ## 1 2001-01-01     -0.5934215       6.287950      4.869109            65.15411 ## 2 2001-01-02     -2.3662458       4.569737      2.498292            57.43761 ## 3 2001-01-03     -3.8541036       2.661951      0.000000            58.77432 ## 4 2001-01-04     -1.8744860       3.097705      5.796973            66.84256 ## 5 2001-01-05      0.3288287       7.551532      1.884401            62.97656 ## 6 2001-01-06      0.5461322       7.186784     13.359801            74.25754 ##   MaxRelativeHumidity Radiation WindSpeed ## 1           100.00000  12.89251  2.000000 ## 2            94.71780  13.03079  7.662544 ## 3            94.66823  16.90722  2.000000 ## 4            95.80950  11.07275  2.000000 ## 5           100.00000  13.45205  7.581347 ## 6           100.00000  12.84841  6.570501 data(\"SpParamsMED\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"simulation-control","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Simulation control","title":"Basic water balance","text":"Apart data inputs, behaviour simulation models can controlled using set global parameters. default parameterization obtained using function defaultControl(): parameters deserve explanation : Console output can turned setting verbose = FALSE. soil water retention curves can switched Saxton’s Van Genuchten’s using parameter soilFunctions. complexity soil water balance calculations different set transpirationMode = \"Sperry\" transpirationMode = \"Sureau\", instead transpirationMode = \"Granier\".","code":"control <- defaultControl(\"Granier\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"water-balance-input-object","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Water balance input object","title":"Basic water balance","text":"last object needed calling simulation functions, called spwbInput. consists compilation aboveground belowground parameters specification additional parameter values plant cohort. object can generated using function spwbInput(): Different parameter variables drawn depending value transpirationMode. basic water balance model (transpirationMode = \"Granier\"), relatively parameters needed. input information forest data species parameter values can inspected accessing different elements object, whose names . Finally, note users can set cohort-specific parameters soil water balance (instead using species-level values) modifying manually parameter values object. Since parameters may coordinated design, however, better use specific package functions purpose.","code":"x <- spwbInput(exampleforest, examplesoil, SpParamsMED, control) names(x) ##  [1] \"control\"                 \"soil\"                    ##  [3] \"snowpack\"                \"canopy\"                  ##  [5] \"herbLAI\"                 \"herbLAImax\"              ##  [7] \"cohorts\"                 \"above\"                   ##  [9] \"below\"                   \"belowLayers\"             ## [11] \"paramsPhenology\"         \"paramsAnatomy\"           ## [13] \"paramsInterception\"      \"paramsTranspiration\"     ## [15] \"paramsWaterStorage\"      \"internalPhenology\"       ## [17] \"internalWater\"           \"internalLAIDistribution\" ## [19] \"internalFCCS\""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"water-balance-for-a-single-day","dir":"Articles > Runmodels","previous_headings":"Executing the soil water balance model","what":"Water balance for a single day","title":"Basic water balance","text":"Soil water balance simulations normally span periods several months years, since model operates daily temporal scale, possible perform soil water balance one day . done using function spwb_day(). following code select day 100 meteorological input data perform soil water balance day : Function spwb_day() useful working complex transpiration model. many meteorological variables required. output spwb_day() list five elements: cohorts: Table species code species name cohort. WaterBalance: Contains soil water balance flows (precipitation, infiltration, transpiration, …) Soil: Contains output values soil layer (.e. water evaporated soil layer, water transpired soil layer final soil water potential). Stand: list stand LAI (expanded dead leaves), canopy water retention capacity proportion light (SWR PAR) reaching ground. Plants: Contains output values plant cohort (.e. LAI values, transpiration, water potential, drought stress index, …).","code":"d <- 100 date <- examplemeteo$dates[d] meteovec <- unlist(examplemeteo[d,]) sd1<-spwb_day(x, date, meteovec,                latitude = 41.82592, elevation = 100, slope= 0, aspect = 0) ## Package 'meteoland' [ver. 2.2.2] names(sd1) ## [1] \"cohorts\"      \"topography\"   \"weather\"      \"WaterBalance\" \"Soil\"         ## [6] \"Stand\"        \"Plants\" sd1 ## $cohorts ##         SP              Name ## T1_148 148  Pinus halepensis ## T2_168 168      Quercus ilex ## S1_165 165 Quercus coccifera ##  ## $topography ## elevation     slope    aspect  ##       100         0         0  ##  ## $weather ##        tday        prec        tmin        tmax       rhmin       rhmax  ##   6.2323731   0.0000000   0.3881289  10.0320962  42.0207334  82.3036989  ##         rad        wind        Catm        Patm         pet        rint  ##  28.7201692   3.3228840 386.0000000          NA   3.9023342   1.5000000  ##  ## $WaterBalance ##                     PET                    Rain                    Snow  ##              3.90233421              0.00000000              0.00000000  ##                 NetRain                Snowmelt                   Runon  ##              0.00000000              0.00000000              0.00000000  ##            Infiltration      InfiltrationExcess        SaturationExcess  ##              0.00000000              0.00000000              0.00000000  ##                  Runoff            DeepDrainage         CapillarityRise  ##              0.00000000              0.00000000              0.00000000  ##         SoilEvaporation       HerbTranspiration         PlantExtraction  ##              0.50000000              0.04872542              0.89968355  ##           Transpiration HydraulicRedistribution  ##              0.89968355              0.00000000  ##  ## $Soil ##           Psi HerbTranspiration HydraulicInput HydraulicOutput PlantExtraction ## 1 -0.03586605      0.0444001775              0     0.654144225     0.654144225 ## 2 -0.03329772      0.0034620610              0     0.217680714     0.217680714 ## 3 -0.03304737      0.0006078123              0     0.022325608     0.022325608 ## 4 -0.03302988      0.0002553696              0     0.005533003     0.005533003 ##  ## $Stand ##         LAI     LAIherb     LAIlive LAIexpanded     LAIdead          Cm  ##   1.7585845   0.1736369   1.5849476   1.5849476   0.0000000   1.3904846  ##  LgroundPAR  LgroundSWR  ##  40.0075402  50.7329667  ##  ## $Plants ##               LAI    LAIlive     FPAR AbsorbedSWRFraction Extraction ## T1_148 0.84874773 0.84874773 92.18285           35.076344 0.55258221 ## T2_168 0.70557382 0.70557382 72.36365           30.444383 0.32034759 ## S1_165 0.03062604 0.03062604 44.32407            2.366131 0.02675376 ##        Transpiration GrossPhotosynthesis PlantPsi         DDS   StemRWC ## T1_148    0.55258221           3.7143297   -0.033 0.004613739 0.9998350 ## T2_168    0.32034759           2.9300190   -0.033 0.006282261 0.9997500 ## S1_165    0.02675376           0.1635903   -0.033 0.003088161 0.9983684 ##          LeafRWC      LFMC      StemPLC      LeafPLC WaterBalance ## T1_148 0.9979679 125.89003 0.000000e+00 0.000000e+00            0 ## T2_168 0.9986797  93.07454 3.681226e-09 2.905929e-03            0 ## S1_165 0.9987207  96.39176 4.394058e-08 3.473351e-05            0 ##  ## attr(,\"class\") ## [1] \"spwb_day\" \"list\""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"water-balance-for-multiple-days","dir":"Articles > Runmodels","previous_headings":"Executing the soil water balance model","what":"Water balance for multiple days","title":"Basic water balance","text":"often, users use function spwb() run soil water balance model. function requires spwbInput object meteorological data frame. However, function spwb_day() default modifies state variables input objects. particular, values soil moisture now: simply reset state variables default values new simulations affected end state previous simulation: Now ready call function spwb(): Function spwb() returns object class name, actually list: inspect elements, realize output arranged differently spwb_day(): particular, element spwbInput contains copy input parameters used run model: , WaterBalance contains water balance components, case form data frame days rows: Element Plants turn list several dataframes plant output variables, example plant water potentials :","code":"x$soil$W ## [1] 0.9824193 0.9981043 0.9996972 0.9998090 resetInputs(x) x$soil$W ## [1] 1 1 1 1 S <- spwb(x, examplemeteo, latitude = 41.82592, elevation = 100) ## Initial plant water content (mm): 4.73001 ## Initial soil water content (mm): 290.875 ## Initial snowpack content (mm): 0 ## Performing daily simulations ##  ##  [Year 2001]:............ ##  ## Final plant water content (mm): 4.7285 ## Final soil water content (mm): 274.723 ## Final snowpack content (mm): 0 ## Change in plant water content (mm): -0.00151775 ## Plant water balance result (mm): -0.00151775 ## Change in soil water content (mm): -16.1521 ## Soil water balance result (mm): -16.1521 ## Change in snowpack water content (mm): 0 ## Snowpack water balance result (mm): -7.10543e-15 ## Water balance components: ##   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 ##   Interception (mm) 92 Net rainfall (mm) 370 ##   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 ##   Soil evaporation (mm) 26  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 249 ##   Plant extraction from soil (mm) 249  Plant water balance (mm) -0 Hydraulic redistribution (mm) 5 ##   Runoff (mm) 21 Deep drainage (mm) 128 class(S) ## [1] \"spwb\" \"list\" names(S) ##  [1] \"latitude\"     \"topography\"   \"weather\"      \"spwbInput\"    \"spwbOutput\"   ##  [6] \"WaterBalance\" \"Soil\"         \"Snow\"         \"Stand\"        \"Plants\" names(S$spwbInput) ##  [1] \"control\"                 \"soil\"                    ##  [3] \"snowpack\"                \"canopy\"                  ##  [5] \"herbLAI\"                 \"herbLAImax\"              ##  [7] \"cohorts\"                 \"above\"                   ##  [9] \"below\"                   \"belowLayers\"             ## [11] \"paramsPhenology\"         \"paramsAnatomy\"           ## [13] \"paramsInterception\"      \"paramsTranspiration\"     ## [15] \"paramsWaterStorage\"      \"internalPhenology\"       ## [17] \"internalWater\"           \"internalLAIDistribution\" ## [19] \"internalFCCS\" head(S$WaterBalance) ##                  PET Precipitation      Rain Snow    NetRain Snowmelt ## 2001-01-01 0.8828475      4.869109  4.869109    0  3.4241795        0 ## 2001-01-02 1.6375337      2.498292  2.498292    0  1.0717469        0 ## 2001-01-03 1.3017026      0.000000  0.000000    0  0.0000000        0 ## 2001-01-04 0.5690790      5.796973  5.796973    0  4.3625616        0 ## 2001-01-05 1.6760567      1.884401  1.884401    0  0.7539027        0 ## 2001-01-06 1.2077028     13.359801 13.359801    0 11.7240275        0 ##            Infiltration InfiltrationExcess SaturationExcess Runoff DeepDrainage ## 2001-01-01    3.4241795                  0                0      0   2.76172073 ## 2001-01-02    1.0717469                  0                0      0   0.18953238 ## 2001-01-03    0.0000000                  0                0      0   0.00000000 ## 2001-01-04    4.3625616                  0                0      0   3.24803369 ## 2001-01-05    0.7539027                  0                0      0   0.09976167 ## 2001-01-06   11.7240275                  0                0      0   4.12141379 ##            CapillarityRise Evapotranspiration Interception SoilEvaporation ## 2001-01-01               0          2.1073881     1.444929       0.4478948 ## 2001-01-02               0          2.3245249     1.426545       0.5000000 ## 2001-01-03               0          0.8008422     0.000000       0.4844828 ## 2001-01-04               0          1.7323314     1.434411       0.1596478 ## 2001-01-05               0          2.0378414     1.130499       0.5000000 ## 2001-01-06               0          2.2365181     1.635773       0.3072545 ##            HerbTranspiration PlantExtraction Transpiration ## 2001-01-01       0.011023432       0.2035406     0.2035406 ## 2001-01-02       0.020446613       0.3775336     0.3775336 ## 2001-01-03       0.016253339       0.3001060     0.3001060 ## 2001-01-04       0.007105403       0.1311669     0.1311669 ## 2001-01-05       0.020927620       0.3864150     0.3864150 ## 2001-01-06       0.015079467       0.2784110     0.2784110 ##            HydraulicRedistribution ## 2001-01-01                       0 ## 2001-01-02                       0 ## 2001-01-03                       0 ## 2001-01-04                       0 ## 2001-01-05                       0 ## 2001-01-06                       0 head(S$Plants$PlantPsi) ##                 T1_148      T2_168      S1_165 ## 2001-01-01 -0.03300000 -0.03300000 -0.03300000 ## 2001-01-02 -0.03300000 -0.03300000 -0.03300000 ## 2001-01-03 -0.03303113 -0.03301812 -0.03302460 ## 2001-01-04 -0.03443824 -0.03388161 -0.03415864 ## 2001-01-05 -0.03300000 -0.03300000 -0.03300000 ## 2001-01-06 -0.03350436 -0.03329360 -0.03339865"},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"plots","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Plots","title":"Basic water balance","text":"Package medfate provides simple plot function objects class spwb. can used show meteorological inputs, snow dynamics, different components water balance:     Function plot also allows displaying soil moisture dynamics layer, can done four different ways (first two imply change axis units):     Finally, function can also used draw dynamics plant variables cohorts, transpiration, gross photosynthesis water potential:    Finally, one can interactively create plots using function shinyplot, e.g.:","code":"plot(S, type = \"PET_Precipitation\") plot(S, type = \"Snow\") plot(S, type = \"Export\") plot(S, type = \"Evapotranspiration\") plot(S, type=\"SoilTheta\") plot(S, type=\"SoilRWC\") plot(S, type=\"SoilPsi\") plot(S, type=\"SoilVol\") plot(S, type=\"Transpiration\") plot(S, type=\"GrossPhotosynthesis\") plot(S, type=\"PlantPsi\") shinyplot(S)"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"extracting-output","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Extracting output","title":"Basic water balance","text":"Simulation outputs form lists nested structure easy handle. Functions provided extract model outputs data.frame objects. following code extracts daily series stand-level variables: similar code can used daily series cohort-level variables:","code":"df <- extract(S, \"forest\") head(df) ##         date       PET Precipitation      Rain Snow    NetRain Snowmelt ## 1 2001-01-01 0.8828475      4.869109  4.869109    0  3.4241795        0 ## 2 2001-01-02 1.6375337      2.498292  2.498292    0  1.0717469        0 ## 3 2001-01-03 1.3017026      0.000000  0.000000    0  0.0000000        0 ## 4 2001-01-04 0.5690790      5.796973  5.796973    0  4.3625616        0 ## 5 2001-01-05 1.6760567      1.884401  1.884401    0  0.7539027        0 ## 6 2001-01-06 1.2077028     13.359801 13.359801    0 11.7240275        0 ##   Infiltration InfiltrationExcess SaturationExcess Runoff DeepDrainage ## 1    3.4241795                  0                0      0   2.76172073 ## 2    1.0717469                  0                0      0   0.18953238 ## 3    0.0000000                  0                0      0   0.00000000 ## 4    4.3625616                  0                0      0   3.24803369 ## 5    0.7539027                  0                0      0   0.09976167 ## 6   11.7240275                  0                0      0   4.12141379 ##   CapillarityRise Evapotranspiration Interception SoilEvaporation ## 1               0          2.1073881     1.444929       0.4478948 ## 2               0          2.3245249     1.426545       0.5000000 ## 3               0          0.8008422     0.000000       0.4844828 ## 4               0          1.7323314     1.434411       0.1596478 ## 5               0          2.0378414     1.130499       0.5000000 ## 6               0          2.2365181     1.635773       0.3072545 ##   HerbTranspiration PlantExtraction Transpiration HydraulicRedistribution ## 1       0.011023432       0.2035406     0.2035406                       0 ## 2       0.020446613       0.3775336     0.3775336                       0 ## 3       0.016253339       0.3001060     0.3001060                       0 ## 4       0.007105403       0.1311669     0.1311669                       0 ## 5       0.020927620       0.3864150     0.3864150                       0 ## 6       0.015079467       0.2784110     0.2784110                       0 ##        LAI   LAIherb  LAIlive LAIexpanded LAIdead       Cm LgroundPAR ## 1 1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 ## 2 1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 ## 3 1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 ## 4 1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 ## 5 1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 ## 6 1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 ##   LgroundSWR SWE ## 1   50.73297   0 ## 2   50.73297   0 ## 3   50.73297   0 ## 4   50.73297   0 ## 5   50.73297   0 ## 6   50.73297   0 df <- extract(S, \"cohort\") head(df) ##         date cohort          species       LAI   LAIlive     FPAR ## 1 2001-01-01 T1_148 Pinus halepensis 0.8487477 0.8487477 92.18285 ## 2 2001-01-02 T1_148 Pinus halepensis 0.8487477 0.8487477 92.18285 ## 3 2001-01-03 T1_148 Pinus halepensis 0.8487477 0.8487477 92.18285 ## 4 2001-01-04 T1_148 Pinus halepensis 0.8487477 0.8487477 92.18285 ## 5 2001-01-05 T1_148 Pinus halepensis 0.8487477 0.8487477 92.18285 ## 6 2001-01-06 T1_148 Pinus halepensis 0.8487477 0.8487477 92.18285 ##   AbsorbedSWRFraction Transpiration GrossPhotosynthesis    PlantPsi LeafPLC ## 1            35.07634    0.12501386            1.213416 -0.03300000       0 ## 2            35.07634    0.23187968            2.104075 -0.03300000       0 ## 3            35.07634    0.18432378            1.774462 -0.03303113       0 ## 4            35.07634    0.08055859            0.813316 -0.03443824       0 ## 5            35.07634    0.23733465            2.184267 -0.03300000       0 ## 6            35.07634    0.17099608            1.791178 -0.03350436       0 ##   StemPLC PlantWaterBalance   LeafRWC   StemRWC     LFMC PlantStress ## 1       0      0.000000e+00 0.9979679 0.9998350 125.8900 0.004613739 ## 2       0      0.000000e+00 0.9979679 0.9998350 125.8900 0.004613739 ## 3       0     -1.405221e-06 0.9979660 0.9998348 125.8899 0.004620274 ## 4       0     -6.351485e-05 0.9978794 0.9998278 125.8839 0.004918823 ## 5       0      6.492007e-05 0.9979679 0.9998350 125.8900 0.004613739 ## 6       0     -2.276642e-05 0.9979369 0.9998324 125.8879 0.004719988"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"temporal-summaries","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Temporal summaries","title":"Basic water balance","text":"simulation model uses daily steps, users normally interested outputs larger time scales. package provides summary objects class spwb. function can used summarize model’s output different temporal steps (.e. weekly, annual, …). example, obtain water balance months one can use: Parameter output used indicate element spwb object desire summaries. Similarly, possible calculate average stress plant cohorts months: summary function can also used aggregate output species. case, values plant cohorts belonging species averaged using LAI values weights. example, may average daily drought stress across cohorts species (one cohort species, modify output): can combine aggregation species temporal aggregation (monthly averages):","code":"summary(S, freq=\"months\",FUN=mean, output=\"WaterBalance\") ##                 PET Precipitation       Rain      Snow    NetRain   Snowmelt ## 2001-01-01 1.011397    2.41127383 1.87415609 0.5371177 1.34613589 0.42235503 ## 2001-02-01 2.278646    0.17855109 0.08778069 0.0907704 0.03511889 0.19831578 ## 2001-03-01 2.368035    2.41917349 2.41917349 0.0000000 1.93933438 0.01762496 ## 2001-04-01 3.086567    0.63056064 0.29195973 0.3386009 0.13472156 0.33860091 ## 2001-05-01 3.662604    0.76337345 0.76337345 0.0000000 0.57881566 0.00000000 ## 2001-06-01 5.265359    0.21959509 0.21959509 0.0000000 0.15746695 0.00000000 ## 2001-07-01 4.443053    3.27810591 3.27810591 0.0000000 2.81775241 0.00000000 ## 2001-08-01 4.463242    1.92222891 1.92222891 0.0000000 1.55188110 0.00000000 ## 2001-09-01 3.453891    1.30651303 1.30651303 0.0000000 1.04946567 0.00000000 ## 2001-10-01 2.405506    1.33598175 1.33598175 0.0000000 1.05395924 0.00000000 ## 2001-11-01 1.716591    2.20566281 1.47764599 0.7280168 1.33350571 0.72801682 ## 2001-12-01 1.608082    0.05046181 0.05046181 0.0000000 0.02018853 0.00000000 ##            Infiltration InfiltrationExcess SaturationExcess     Runoff ## 2001-01-01   1.76849092         0.00000000                0 0.00000000 ## 2001-02-01   0.23343467         0.00000000                0 0.00000000 ## 2001-03-01   1.95695933         0.00000000                0 0.00000000 ## 2001-04-01   0.47332247         0.00000000                0 0.00000000 ## 2001-05-01   0.57881566         0.00000000                0 0.00000000 ## 2001-06-01   0.15746695         0.00000000                0 0.00000000 ## 2001-07-01   2.52051838         0.29723403                0 0.29723403 ## 2001-08-01   1.51260303         0.03927806                0 0.03927806 ## 2001-09-01   1.04946567         0.00000000                0 0.00000000 ## 2001-10-01   0.94550777         0.10845147                0 0.10845147 ## 2001-11-01   1.81380382         0.24771871                0 0.24771871 ## 2001-12-01   0.02018853         0.00000000                0 0.00000000 ##            DeepDrainage CapillarityRise Evapotranspiration Interception ## 2001-01-01   1.42475654               0          0.9469929   0.52802019 ## 2001-02-01   0.00443135               0          0.6648546   0.05266179 ## 2001-03-01   1.13215212               0          1.1747925   0.47983911 ## 2001-04-01   0.00000000               0          0.9197907   0.15723817 ## 2001-05-01   0.00000000               0          1.1375146   0.18455779 ## 2001-06-01   0.00000000               0          1.3146359   0.06212814 ## 2001-07-01   0.00000000               0          1.6430660   0.46035350 ## 2001-08-01   0.00000000               0          1.5123815   0.37034782 ## 2001-09-01   0.00000000               0          1.1564214   0.25704736 ## 2001-10-01   0.36163006               0          0.9433241   0.28202252 ## 2001-11-01   1.23136121               0          0.6253738   0.14414028 ## 2001-12-01   0.00000000               0          0.4403926   0.03027328 ##            SoilEvaporation HerbTranspiration PlantExtraction Transpiration ## 2001-01-01     0.173200243        0.01262829       0.2331442     0.2331442 ## 2001-02-01     0.059381717        0.02844432       0.5243667     0.5243667 ## 2001-03-01     0.120250680        0.02956161       0.5451411     0.5451411 ## 2001-04-01     0.016035154        0.03851007       0.7080074     0.7080074 ## 2001-05-01     0.067146317        0.04569483       0.8401156     0.8401156 ## 2001-06-01     0.006696057        0.06533277       1.1804789     1.1804789 ## 2001-07-01     0.110999950        0.05539539       1.0163172     1.0163172 ## 2001-08-01     0.061171907        0.05569881       1.0251630     1.0251630 ## 2001-09-01     0.062199712        0.04310862       0.7940657     0.7940657 ## 2001-10-01     0.077508497        0.03002986       0.5537632     0.5537632 ## 2001-11-01     0.064779318        0.02142805       0.3950262     0.3950262 ## 2001-12-01     0.020637953        0.02006816       0.3694132     0.3694132 ##            HydraulicRedistribution ## 2001-01-01            0.0005519858 ## 2001-02-01            0.0003086511 ## 2001-03-01            0.0005558499 ## 2001-04-01            0.0000000000 ## 2001-05-01            0.0113159388 ## 2001-06-01            0.0000000000 ## 2001-07-01            0.0613223302 ## 2001-08-01            0.0540533907 ## 2001-09-01            0.0131069615 ## 2001-10-01            0.0055364191 ## 2001-11-01            0.0005577914 ## 2001-12-01            0.0000000000 summary(S, freq=\"months\",FUN=mean, output=\"PlantStress\") ##                 T1_148      T2_168      S1_165 ## 2001-01-01 0.004773280 0.006381122 0.003160206 ## 2001-02-01 0.006705762 0.007649057 0.004059289 ## 2001-03-01 0.006241447 0.007320306 0.003834123 ## 2001-04-01 0.010550415 0.010187824 0.005819370 ## 2001-05-01 0.009599211 0.009424160 0.005341480 ## 2001-06-01 0.037076275 0.023913153 0.016427375 ## 2001-07-01 0.012835893 0.012459017 0.007043919 ## 2001-08-01 0.008878109 0.009235359 0.005121251 ## 2001-09-01 0.007878910 0.008458217 0.004608889 ## 2001-10-01 0.006250142 0.007456718 0.003881840 ## 2001-11-01 0.006570576 0.007550018 0.003988078 ## 2001-12-01 0.008947174 0.009012524 0.005057706 head(summary(S, freq=\"day\", output=\"PlantStress\", bySpecies = TRUE)) ##            Pinus halepensis Quercus coccifera Quercus ilex ## 2001-01-01      0.004613739       0.003088161  0.006282261 ## 2001-01-02      0.004613739       0.003088161  0.006282261 ## 2001-01-03      0.004620274       0.003091150  0.006286213 ## 2001-01-04      0.004918823       0.003229622  0.006474864 ## 2001-01-05      0.004613739       0.003088161  0.006282261 ## 2001-01-06      0.004719988       0.003136670  0.006346322 summary(S, freq=\"month\", FUN = mean, output=\"PlantStress\", bySpecies = TRUE) ##            Pinus halepensis Quercus coccifera Quercus ilex ## 2001-01-01      0.004773280       0.003160206  0.006381122 ## 2001-02-01      0.006705762       0.004059289  0.007649057 ## 2001-03-01      0.006241447       0.003834123  0.007320306 ## 2001-04-01      0.010550415       0.005819370  0.010187824 ## 2001-05-01      0.009599211       0.005341480  0.009424160 ## 2001-06-01      0.037076275       0.016427375  0.023913153 ## 2001-07-01      0.012835893       0.007043919  0.012459017 ## 2001-08-01      0.008878109       0.005121251  0.009235359 ## 2001-09-01      0.007878910       0.004608889  0.008458217 ## 2001-10-01      0.006250142       0.003881840  0.007456718 ## 2001-11-01      0.006570576       0.003988078  0.007550018 ## 2001-12-01      0.008947174       0.005057706  0.009012524"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"specific-output-functions","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Specific output functions","title":"Basic water balance","text":"package provides functions extract transform specific outputs soil plant water balance simulations. particular, function droughtStress() allows calculating several plant stress indices, number days drought stress > 0.5 maximum drought stress: general summary function, droughtStress() allows calculating stress indices several temporal scales. example water stress index (integral water potential values) can calculated drawn every month:  Another specific summary function waterUseEfficiency(). useful advanced water energy balance modeling, simple water balance calculates ratio photosynthesis transpiration desired scale. case equal value input species parameter WUE:","code":"droughtStress(S, index = \"NDD\", freq = \"years\", draw=FALSE) ##            T1_148 T2_168 S1_165 ## 2001-01-01      0      0      0 droughtStress(S, index = \"MDS\", freq = \"years\", draw=FALSE) ##                T1_148     T2_168     S1_165 ## 2001-01-01 0.06072597 0.03471311 0.02524436 droughtStress(S, index = \"WSI\", freq = \"months\", draw=TRUE) waterUseEfficiency(S, type = \"Stand Ag/E\", freq = \"months\", draw=FALSE) ##            Stand Ag/E ## 2001-01-01  10.153004 ## 2001-02-01   8.238184 ## 2001-03-01   9.036680 ## 2001-04-01   8.838007 ## 2001-05-01   8.275341 ## 2001-06-01   6.379552 ## 2001-07-01   7.028561 ## 2001-08-01   6.308963 ## 2001-09-01   7.485210 ## 2001-10-01   7.685487 ## 2001-11-01   8.767115 ## 2001-12-01   8.446743"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/BasicWaterBalance.html","id":"references","dir":"Articles > Runmodels","previous_headings":"","what":"References","title":"Basic water balance","text":"De Cáceres M, Martínez-Vilalta J, Coll L, Llorens P, Casals P, Poyatos R, Pausas JG, Brotons L. (2015) Coupling water balance model forest inventory data predict drought stress: role forest structural changes vs. climate changes. Agricultural Forest Meteorology 213: 77-90 (https://doi.org/10.1016/j.agrformet.2015.06.012).","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"about-this-vignette","dir":"Articles > Runmodels","previous_headings":"","what":"About this vignette","title":"Forest dynamics","text":"document describes run forest dynamics model medfate, described De Cáceres et al. (2023) implemented function fordyn(). document meant teach users run simulation model function fordyn(). Details model design formulation can found corresponding chapters medfate book. model builds growth water balance models, reader assumed familiarized spwb() growth() (otherwise read vignettes Basic water balance Forest growth).","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"preparing-model-inputs","dir":"Articles > Runmodels","previous_headings":"","what":"Preparing model inputs","title":"Forest dynamics","text":"forest dynamics model needs information climate, vegetation soils forest stand simulated. Moreover, since models medfate differentiate species, information species-specific model parameters also needed. subsection explain different steps prepare data needed run function fordyn(). Model inputs explained greater detail vignettes Understanding model inputs Preparing model inputs. review different steps required run function fordyn().","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"soil-vegetation-meteorology-and-species-data","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Soil, vegetation, meteorology and species data","title":"Forest dynamics","text":"Soil information needs entered data frame soil layers rows physical attributes columns. Soil physical attributes can initialized default values, given number layers, using function defaultSoilParams(): explained package overview, models included medfate primarily designed ran forest inventory plots. use example object provided package: Importantly, data frame daily weather period simulated required. use default data frame included package: Finally, simulations medfate require data frame species parameter values, load using defaults Catalonia (NE Spain):","code":"examplesoil <- defaultSoilParams(4) examplesoil ##   widths clay sand om nitrogen  bd rfc ## 1    300   25   25 NA       NA 1.5  25 ## 2    700   25   25 NA       NA 1.5  45 ## 3   1000   25   25 NA       NA 1.5  75 ## 4   2000   25   25 NA       NA 1.5  95 data(exampleforest) exampleforest ## $treeData ##            Species   N   DBH Height Z50  Z95 ## 1 Pinus halepensis 168 37.55    800 100  600 ## 2     Quercus ilex 384 14.60    660 300 1000 ##  ## $shrubData ##             Species Cover Height Z50  Z95 ## 1 Quercus coccifera  3.75     80 200 1000 ##  ## $herbCover ## [1] 10 ##  ## $herbHeight ## [1] 20 ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\" data(examplemeteo) head(examplemeteo) ##        dates MinTemperature MaxTemperature Precipitation MinRelativeHumidity ## 1 2001-01-01     -0.5934215       6.287950      4.869109            65.15411 ## 2 2001-01-02     -2.3662458       4.569737      2.498292            57.43761 ## 3 2001-01-03     -3.8541036       2.661951      0.000000            58.77432 ## 4 2001-01-04     -1.8744860       3.097705      5.796973            66.84256 ## 5 2001-01-05      0.3288287       7.551532      1.884401            62.97656 ## 6 2001-01-06      0.5461322       7.186784     13.359801            74.25754 ##   MaxRelativeHumidity Radiation WindSpeed ## 1           100.00000  12.89251  2.000000 ## 2            94.71780  13.03079  7.662544 ## 3            94.66823  16.90722  2.000000 ## 4            95.80950  11.07275  2.000000 ## 5           100.00000  13.45205  7.581347 ## 6           100.00000  12.84841  6.570501 data(\"SpParamsMED\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"simulation-control","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Simulation control","title":"Forest dynamics","text":"Apart data inputs, behaviour simulation models can controlled using set global parameters. default parameterization obtained using function defaultControl(): run simulations forest dynamics using basic water balance model (.e. transpirationMode = \"Granier\"). complexity soil water balance calculations can changed using \"Sperry\" input defaultControl(). However, running fordyn() sub-daily output never stored (.e. setting subdailyResults = TRUE useless).","code":"control <- defaultControl(\"Granier\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"executing-the-forest-dynamics-model","dir":"Articles > Runmodels","previous_headings":"","what":"Executing the forest dynamics model","title":"Forest dynamics","text":"vignette fake ten-year weather input repeating example weather data frame ten times. Now run forest dynamics model using inputs (note intermediate input object needed, spwb() growth()): worth noting , fordyn() calls function growth() internally simulated year, verbose option control parameters affects function fordyn() (.e. console output growth() hidden). Recruitment summaries done year level function fordyn().","code":"meteo <- rbind(examplemeteo, examplemeteo, examplemeteo, examplemeteo,                     examplemeteo, examplemeteo, examplemeteo, examplemeteo,                     examplemeteo, examplemeteo) meteo$dates = seq(as.Date(\"2001-01-01\"),                    as.Date(\"2010-12-29\"), by=\"day\") fd<-fordyn(exampleforest, examplesoil, SpParamsMED, meteo, control,             latitude = 41.82592, elevation = 100) ## Simulating year 2001 (1/10):  (a) Growth/mortality ## Package 'meteoland' [ver. 2.2.2] ## , (b) Regeneration nT = 2 nS = 1 ## Simulating year 2002 (2/10):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1 ## Simulating year 2003 (3/10):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1 ## Simulating year 2004 (4/10):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1 ## Simulating year 2005 (5/10):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1 ## Simulating year 2006 (6/10):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1 ## Simulating year 2007 (7/10):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1 ## Simulating year 2008 (8/10):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1 ## Simulating year 2009 (9/10):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1 ## Simulating year 2010 (10/10):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1"},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"stand-species-and-cohort-summaries-and-plots","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Stand, species and cohort summaries and plots","title":"Forest dynamics","text":"Among outputs, function fordyn() calculates standard summary statistics describe structural compositional state forest time step. example, can access stand-level statistics using: Species-level analogous statistics shown using: Package medfate provides simple plot function objects class fordyn. example, can show interannual variation stand-level basal area using:","code":"fd$StandSummary ##    Step NumTreeSpecies NumTreeCohorts NumShrubSpecies NumShrubCohorts ## 1     0              2              2               1               1 ## 2     1              2              2               1               1 ## 3     2              2              2               1               1 ## 4     3              2              2               1               1 ## 5     4              2              2               1               1 ## 6     5              2              2               1               1 ## 7     6              2              2               1               1 ## 8     7              2              2               1               1 ## 9     8              2              2               1               1 ## 10    9              2              2               1               1 ## 11   10              2              2               1               1 ##    TreeDensityLive TreeBasalAreaLive DominantTreeHeight DominantTreeDiameter ## 1         552.0000          25.03330           800.0000             37.55000 ## 2         551.3663          25.20814           806.2122             37.66571 ## 3         550.7269          25.38313           812.4144             37.78185 ## 4         550.0818          25.55825           818.5877             37.89804 ## 5         549.4291          25.73292           824.7217             38.01410 ## 6         548.7724          25.90729           830.8130             38.12995 ## 7         548.1100          26.08105           836.8596             38.24556 ## 8         547.4418          26.25427           842.8607             38.36089 ## 9         546.7660          26.42680           848.8159             38.47594 ## 10        546.0863          26.59896           854.7254             38.59070 ## 11        545.4046          26.77088           860.5892             38.70516 ##    QuadraticMeanTreeDiameter HartBeckingIndex ShrubCoverLive BasalAreaDead ## 1                   24.02949         53.20353       3.750000    0.00000000 ## 2                   24.12711         52.82391       3.092051    0.03917375 ## 3                   24.22476         52.45105       3.139858    0.03983747 ## 4                   24.32243         52.08602       3.188231    0.04050957 ## 5                   24.41989         51.72931       3.237273    0.04130225 ## 6                   24.51715         51.38076       3.286839    0.04187540 ## 7                   24.61409         51.04034       3.336935    0.04256669 ## 8                   24.71076         50.70785       3.387572    0.04326357 ## 9                   24.80713         50.38320       3.439335    0.04408709 ## 10                  24.90329         50.06598       3.490479    0.04467519 ## 11                  24.99925         49.75591       3.542204    0.04513908 ##    ShrubCoverDead BasalAreaCut ShrubCoverCut ## 1     0.000000000            0             0 ## 2     0.005308898            0             0 ## 3     0.004784468            0             0 ## 4     0.004858342            0             0 ## 5     0.004946768            0             0 ## 6     0.005009006            0             0 ## 7     0.005085565            0             0 ## 8     0.005162947            0             0 ## 9     0.005255865            0             0 ## 10    0.005320788            0             0 ## 11    0.005369917            0             0 fd$SpeciesSummary ##    Step           Species NumCohorts TreeDensityLive TreeBasalAreaLive ## 1     0  Pinus halepensis          1        168.0000         18.604547 ## 2     0 Quercus coccifera          1              NA                NA ## 3     0      Quercus ilex          1        384.0000          6.428755 ## 4     1  Pinus halepensis          1        167.6992         18.685872 ## 5     1 Quercus coccifera          1              NA                NA ## 6     1      Quercus ilex          1        383.6671          6.522264 ## 7     2  Pinus halepensis          1        167.3956         18.767232 ## 8     2 Quercus coccifera          1              NA                NA ## 9     2      Quercus ilex          1        383.3314          6.615899 ## 10    3  Pinus halepensis          1        167.0890         18.848266 ## 11    3 Quercus coccifera          1              NA                NA ## 12    3      Quercus ilex          1        382.9928          6.709981 ## 13    4  Pinus halepensis          1        166.7788         18.928674 ## 14    4 Quercus coccifera          1              NA                NA ## 15    4      Quercus ilex          1        382.6503          6.804243 ## 16    5  Pinus halepensis          1        166.4665         19.008563 ## 17    5 Quercus coccifera          1              NA                NA ## 18    5      Quercus ilex          1        382.3060          6.898728 ## 19    6  Pinus halepensis          1        166.1513         19.087791 ## 20    6 Quercus coccifera          1              NA                NA ## 21    6      Quercus ilex          1        381.9587          6.993262 ## 22    7  Pinus halepensis          1        165.8332         19.166327 ## 23    7 Quercus coccifera          1              NA                NA ## 24    7      Quercus ilex          1        381.6086          7.087941 ## 25    8  Pinus halepensis          1        165.5114         19.244046 ## 26    8 Quercus coccifera          1              NA                NA ## 27    8      Quercus ilex          1        381.2546          7.182749 ## 28    9  Pinus halepensis          1        165.1876         19.321136 ## 29    9 Quercus coccifera          1              NA                NA ## 30    9      Quercus ilex          1        380.8987          7.277820 ## 31   10  Pinus halepensis          1        164.8627         19.397698 ## 32   10 Quercus coccifera          1              NA                NA ## 33   10      Quercus ilex          1        380.5419          7.373179 ##    ShrubCoverLive BasalAreaDead ShrubCoverDead BasalAreaCut ShrubCoverCut ## 1              NA   0.000000000             NA            0            NA ## 2        3.750000            NA    0.000000000           NA             0 ## 3              NA   0.000000000             NA            0            NA ## 4              NA   0.033514702             NA            0            NA ## 5        3.092051            NA    0.005308898           NA             0 ## 6              NA   0.005659051             NA            0            NA ## 7              NA   0.034042919             NA            0            NA ## 8        3.139858            NA    0.004784468           NA             0 ## 9              NA   0.005794555             NA            0            NA ## 10             NA   0.034577198             NA            0            NA ## 11       3.188231            NA    0.004858342           NA             0 ## 12             NA   0.005932369             NA            0            NA ## 13             NA   0.035213326             NA            0            NA ## 14       3.237273            NA    0.004946768           NA             0 ## 15             NA   0.006088926             NA            0            NA ## 16             NA   0.035661249             NA            0            NA ## 17       3.286839            NA    0.005009006           NA             0 ## 18             NA   0.006214154             NA            0            NA ## 19             NA   0.036208945             NA            0            NA ## 20       3.336935            NA    0.005085565           NA             0 ## 21             NA   0.006357748             NA            0            NA ## 22             NA   0.036760362             NA            0            NA ## 23       3.387572            NA    0.005162947           NA             0 ## 24             NA   0.006503206             NA            0            NA ## 25             NA   0.037418237             NA            0            NA ## 26       3.439335            NA    0.005255865           NA             0 ## 27             NA   0.006668851             NA            0            NA ## 28             NA   0.037875173             NA            0            NA ## 29       3.490479            NA    0.005320788           NA             0 ## 30             NA   0.006800020             NA            0            NA ## 31             NA   0.038225978             NA            0            NA ## 32       3.542204            NA    0.005369917           NA             0 ## 33             NA   0.006913100             NA            0            NA plot(fd, type = \"StandBasalArea\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"treeshrub-tables","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Tree/shrub tables","title":"Forest dynamics","text":"Another useful output fordyn() tables long format cohort structural information (.e. DBH, height, density, etc) time step: can shown dead trees:","code":"fd$TreeTable ##    Step Year Cohort          Species      DBH   Height        N Z50  Z95 ObsID ## 1     0   NA T1_148 Pinus halepensis 37.55000 800.0000 168.0000 100  600  <NA> ## 2     0   NA T2_168     Quercus ilex 14.60000 660.0000 384.0000 300 1000  <NA> ## 3     1 2001 T1_148 Pinus halepensis 37.66571 806.2122 167.6992 100  600  <NA> ## 4     1 2001 T2_168     Quercus ilex 14.71218 663.4915 383.6671 300 1000  <NA> ## 5     2 2002 T1_148 Pinus halepensis 37.78185 812.4144 167.3956 100  600  <NA> ## 6     2 2002 T2_168     Quercus ilex 14.82389 666.9588 383.3314 300 1000  <NA> ## 7     3 2003 T1_148 Pinus halepensis 37.89804 818.5877 167.0890 100  600  <NA> ## 8     3 2003 T2_168     Quercus ilex 14.93552 670.4135 382.9928 300 1000  <NA> ## 9     4 2004 T1_148 Pinus halepensis 38.01410 824.7217 166.7788 100  600  <NA> ## 10    4 2004 T2_168     Quercus ilex 15.04679 673.8471 382.6503 300 1000  <NA> ## 11    5 2005 T1_148 Pinus halepensis 38.12995 830.8130 166.4665 100  600  <NA> ## 12    5 2005 T2_168     Quercus ilex 15.15772 677.2606 382.3060 300 1000  <NA> ## 13    6 2006 T1_148 Pinus halepensis 38.24556 836.8596 166.1513 100  600  <NA> ## 14    6 2006 T2_168     Quercus ilex 15.26816 680.6487 381.9587 300 1000  <NA> ## 15    7 2007 T1_148 Pinus halepensis 38.36089 842.8607 165.8332 100  600  <NA> ## 16    7 2007 T2_168     Quercus ilex 15.37822 684.0151 381.6086 300 1000  <NA> ## 17    8 2008 T1_148 Pinus halepensis 38.47594 848.8159 165.5114 100  600  <NA> ## 18    8 2008 T2_168     Quercus ilex 15.48791 687.3601 381.2546 300 1000  <NA> ## 19    9 2009 T1_148 Pinus halepensis 38.59070 854.7254 165.1876 100  600  <NA> ## 20    9 2009 T2_168     Quercus ilex 15.59735 690.6873 380.8987 300 1000  <NA> ## 21   10 2010 T1_148 Pinus halepensis 38.70516 860.5892 164.8627 100  600  <NA> ## 22   10 2010 T2_168     Quercus ilex 15.70656 693.9971 380.5419 300 1000  <NA> fd$DeadTreeTable ##    Step Year Cohort          Species      DBH   Height         N N_starvation ## 1     1 2001 T1_148 Pinus halepensis 37.66571 806.2122 0.3007828            0 ## 2     1 2001 T2_168     Quercus ilex 14.71218 663.4915 0.3328893            0 ## 3     2 2002 T1_148 Pinus halepensis 37.78185 812.4144 0.3036481            0 ## 4     2 2002 T2_168     Quercus ilex 14.82389 666.9588 0.3357419            0 ## 5     3 2003 T1_148 Pinus halepensis 37.89804 818.5877 0.3065253            0 ## 6     3 2003 T2_168     Quercus ilex 14.93552 670.4135 0.3386082            0 ## 7     4 2004 T1_148 Pinus halepensis 38.01410 824.7217 0.3102613            0 ## 8     4 2004 T2_168     Quercus ilex 15.04679 673.8471 0.3424230            0 ## 9     5 2005 T1_148 Pinus halepensis 38.12995 830.8130 0.3123015            0 ## 10    5 2005 T2_168     Quercus ilex 15.15772 677.2606 0.3443690            0 ## 11    6 2006 T1_148 Pinus halepensis 38.24556 836.8596 0.3151838            0 ## 12    6 2006 T2_168     Quercus ilex 15.26816 680.6487 0.3472482            0 ## 13    7 2007 T1_148 Pinus halepensis 38.36089 842.8607 0.3180625            0 ## 14    7 2007 T2_168     Quercus ilex 15.37822 684.0151 0.3501270            0 ## 15    8 2008 T1_148 Pinus halepensis 38.47594 848.8159 0.3218214            0 ## 16    8 2008 T2_168     Quercus ilex 15.48791 687.3601 0.3539773            0 ## 17    9 2009 T1_148 Pinus halepensis 38.59070 854.7254 0.3238168            0 ## 18    9 2009 T2_168     Quercus ilex 15.59735 690.6873 0.3558922            0 ## 19   10 2010 T1_148 Pinus halepensis 38.70516 860.5892 0.3248859            0 ## 20   10 2010 T2_168     Quercus ilex 15.70656 693.9971 0.3567965            0 ##    N_dessication N_burnt Z50  Z95 ObsID ## 1              0       0 100  600  <NA> ## 2              0       0 300 1000  <NA> ## 3              0       0 100  600  <NA> ## 4              0       0 300 1000  <NA> ## 5              0       0 100  600  <NA> ## 6              0       0 300 1000  <NA> ## 7              0       0 100  600  <NA> ## 8              0       0 300 1000  <NA> ## 9              0       0 100  600  <NA> ## 10             0       0 300 1000  <NA> ## 11             0       0 100  600  <NA> ## 12             0       0 300 1000  <NA> ## 13             0       0 100  600  <NA> ## 14             0       0 300 1000  <NA> ## 15             0       0 100  600  <NA> ## 16             0       0 300 1000  <NA> ## 17             0       0 100  600  <NA> ## 18             0       0 300 1000  <NA> ## 19             0       0 100  600  <NA> ## 20             0       0 300 1000  <NA>"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"accessing-the-output-from-function-growth","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Accessing the output from function growth()","title":"Forest dynamics","text":"Since function fordyn() makes internal calls function growth(), stores result vector called GrowthResults, can use inspect intra-annual patterns desired variables. example, following shows leaf area individuals three cohorts second year: Instead examining year year, possible plot whole series results passing fordyn object plot() function:  Finally, can create interactive plots particular steps using function shinyplot(), e.g.:","code":"plot(fd$GrowthResults[[2]], \"LeafArea\", bySpecies = T) plot(fd, \"LeafArea\") shinyplot(fd$GrowthResults[[1]])"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"forest-dynamics-including-management","dir":"Articles > Runmodels","previous_headings":"","what":"Forest dynamics including management","title":"Forest dynamics","text":"package allows including forest management simulations forest dynamics. done flexible manner, sense fordyn() allows user supply arbitrary function implementing desired management strategy stand whose dynamics simulated. package includes, however, -built default function called defaultManagementFunction() along flexible parameterization, list defaults provided function defaultManagementArguments(). provide example simulations including forest management: management included simulations, two additional tables produced, corresponding trees shrubs cut, e.g.: Management parameters irregular model thinning interventions ‘’, indicating smaller trees cut earlier: Note example, resprouting Quercus ilex thinning intervention, evidenced new cohort (T3_168) appearing year 2001:","code":"# Default arguments args <- defaultManagementArguments() # Here one can modify defaults before calling fordyn() # # Simulation fd<-fordyn(exampleforest, examplesoil, SpParamsMED, meteo, control,             latitude = 41.82592, elevation = 100,            management_function = defaultManagementFunction,            management_args = args) ## Simulating year 2001 (1/10):  (a) Growth/mortality & management [thinning], (b) Regeneration nT = 2 nS = 2 ## Simulating year 2002 (2/10):  (a) Growth/mortality & management [none], (b) Regeneration nT = 2 nS = 2 ## Simulating year 2003 (3/10):  (a) Growth/mortality & management [none], (b) Regeneration nT = 2 nS = 2 ## Simulating year 2004 (4/10):  (a) Growth/mortality & management [none], (b) Regeneration nT = 2 nS = 2 ## Simulating year 2005 (5/10):  (a) Growth/mortality & management [none], (b) Regeneration nT = 2 nS = 2 ## Simulating year 2006 (6/10):  (a) Growth/mortality & management [none], (b) Regeneration nT = 2 nS = 2 ## Simulating year 2007 (7/10):  (a) Growth/mortality & management [none], (b) Regeneration nT = 2 nS = 2 ## Simulating year 2008 (8/10):  (a) Growth/mortality & management [none], (b) Regeneration nT = 2 nS = 2 ## Simulating year 2009 (9/10):  (a) Growth/mortality & management [none], (b) Regeneration nT = 2 nS = 2 ## Simulating year 2010 (10/10):  (a) Growth/mortality & management [none], (b) Regeneration nT = 2 nS = 2 fd$CutTreeTable ##   Step Year Cohort          Species      DBH   Height          N Z50  Z95 ObsID ## 1    1 2001 T1_148 Pinus halepensis 37.66571 806.2122   9.335235 100  600  <NA> ## 2    1 2001 T2_168     Quercus ilex 14.71218 663.4915 383.667111 300 1000  <NA> args$type ## [1] \"irregular\" args$thinning ## [1] \"below\" fd$TreeTable ##    Step Year Cohort          Species       DBH    Height         N     Z50  Z95 ## 1     0   NA T1_148 Pinus halepensis 37.550000 800.00000  168.0000 100.000  600 ## 2     0   NA T2_168     Quercus ilex 14.600000 660.00000  384.0000 300.000 1000 ## 3     1 2001 T1_148 Pinus halepensis 37.665714 806.21221  158.3640 100.000  600 ## 4     1 2001 T3_168     Quercus ilex  1.000000  47.23629 3000.0000 300.000 1000 ## 5     2 2002 T1_148 Pinus halepensis 37.783136 812.42942  158.1925 100.000  600 ## 6     2 2002 T3_168     Quercus ilex  1.138465  55.72699 2613.6589 300.000 1000 ## 7     3 2003 T1_148 Pinus halepensis 37.903263 818.75045  158.0197 100.000  600 ## 8     3 2003 T3_168     Quercus ilex  1.254329  62.78682 2357.7754 300.000 1000 ## 9     4 2004 T1_148 Pinus halepensis 38.023436 825.04012  157.8450 100.000  600 ## 10    4 2004 T3_168     Quercus ilex  1.370150  69.84156 2146.4770 300.000 1000 ## 11    5 2005 T1_148 Pinus halepensis 38.143510 831.29111  157.6694 100.000  600 ## 12    5 2005 T2_168     Quercus ilex  1.413444  74.33957 2388.5454 282.355 1000 ## 13    6 2006 T1_148 Pinus halepensis 38.261912 837.42213  157.4926 100.000  600 ## 14    6 2006 T2_168     Quercus ilex  1.530237  81.45569 1908.5733 282.355 1000 ## 15    7 2007 T1_148 Pinus halepensis 38.380692 843.54012  157.3145 100.000  600 ## 16    7 2007 T2_168     Quercus ilex  1.647162  88.57922 1764.8776 282.355 1000 ## 17    8 2008 T1_148 Pinus halepensis 38.499604 849.63239  157.1344 100.000  600 ## 18    8 2008 T2_168     Quercus ilex  1.765275  95.78108 1639.6114 282.355 1000 ## 19    9 2009 T1_148 Pinus halepensis 38.618506 855.69180  156.9535 100.000  600 ## 20    9 2009 T2_168     Quercus ilex  1.884053 103.02922 1529.9469 282.355 1000 ## 21   10 2010 T1_148 Pinus halepensis 38.737310 861.71400  156.7722 100.000  600 ## 22   10 2010 T2_168     Quercus ilex  2.003338 110.31380 1433.2939 282.355 1000 ##    ObsID ## 1   <NA> ## 2   <NA> ## 3   <NA> ## 4   <NA> ## 5   <NA> ## 6   <NA> ## 7   <NA> ## 8   <NA> ## 9   <NA> ## 10  <NA> ## 11  <NA> ## 12  <NA> ## 13  <NA> ## 14  <NA> ## 15  <NA> ## 16  <NA> ## 17  <NA> ## 18  <NA> ## 19  <NA> ## 20  <NA> ## 21  <NA> ## 22  <NA>"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestDynamics.html","id":"references","dir":"Articles > Runmodels","previous_headings":"","what":"References","title":"Forest dynamics","text":"De Cáceres M, Molowny-Horas R, Cabon , Martínez-Vilalta J, Mencuccini M, García-Valdés R, Nadal-Sala D, Sabaté S, Martin-StPaul N, Morin X, D’Adamo F, Batllori E, Améztegui (2023) MEDFATE 2.9.3: trait-enabled model simulate Mediterranean forest function dynamics regional scales. Geoscientific Model Development 16: 3165-3201 (https://doi.org/10.5194/gmd-16-3165-2023).","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"about-this-vignette","dir":"Articles > Runmodels","previous_headings":"","what":"About this vignette","title":"Forest growth","text":"document describes run growth model medfate, described De Cáceres et al. (2023) implemented function growth(). details model design formulation can found corresponding chapters medfate book. forest growth model builds water balance model, reader assumed familiarized spwb(). , recommend reading vignette Basic water balance one.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"preparing-model-inputs","dir":"Articles > Runmodels","previous_headings":"","what":"Preparing model inputs","title":"Forest growth","text":"Model inputs explained greater detail vignettes Understanding model inputs Preparing model inputs. briefly review different steps required run function growth().","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"soil-vegetation-meteorology-and-species-data","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Soil, vegetation, meteorology and species data","title":"Forest growth","text":"Soil physical characteristics needs specified using data frame soil layers rows physical attributes columns. Soil physical attributes can initialized default values, given number layers, using function defaultSoilParams(): explained package overview, models included medfate primarily designed ran forest inventory plots. use example forest object provided package: Importantly, data frame daily weather period simulated required. use default data frame included package: weather variables required growth() function depend complexity water balance simulations underlying growth (.e. control parameter transpirationMode, see ). Finally, simulations medfate require data frame species parameter values, load using defaults Catalonia (NE Spain):","code":"examplesoil <- defaultSoilParams(4) examplesoil ##   widths clay sand om nitrogen  bd rfc ## 1    300   25   25 NA       NA 1.5  25 ## 2    700   25   25 NA       NA 1.5  45 ## 3   1000   25   25 NA       NA 1.5  75 ## 4   2000   25   25 NA       NA 1.5  95 data(exampleforest) exampleforest ## $treeData ##            Species   N   DBH Height Z50  Z95 ## 1 Pinus halepensis 168 37.55    800 100  600 ## 2     Quercus ilex 384 14.60    660 300 1000 ##  ## $shrubData ##             Species Cover Height Z50  Z95 ## 1 Quercus coccifera  3.75     80 200 1000 ##  ## $herbCover ## [1] 10 ##  ## $herbHeight ## [1] 20 ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\" data(examplemeteo) head(examplemeteo) ##        dates MinTemperature MaxTemperature Precipitation MinRelativeHumidity ## 1 2001-01-01     -0.5934215       6.287950      4.869109            65.15411 ## 2 2001-01-02     -2.3662458       4.569737      2.498292            57.43761 ## 3 2001-01-03     -3.8541036       2.661951      0.000000            58.77432 ## 4 2001-01-04     -1.8744860       3.097705      5.796973            66.84256 ## 5 2001-01-05      0.3288287       7.551532      1.884401            62.97656 ## 6 2001-01-06      0.5461322       7.186784     13.359801            74.25754 ##   MaxRelativeHumidity Radiation WindSpeed ## 1           100.00000  12.89251  2.000000 ## 2            94.71780  13.03079  7.662544 ## 3            94.66823  16.90722  2.000000 ## 4            95.80950  11.07275  2.000000 ## 5           100.00000  13.45205  7.581347 ## 6           100.00000  12.84841  6.570501 data(\"SpParamsMED\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"simulation-control","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Simulation control","title":"Forest growth","text":"Apart data inputs, behaviour simulation models can controlled using set global parameters. default parameterization obtained using function defaultControl(): run growth simulations using basic water balance model (.e. transpirationMode = \"Granier\"). complexity soil water balance calculations can changed using \"Sperry\" input defaultControl().","code":"control = defaultControl(\"Granier\")"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"growth-input-object","dir":"Articles > Runmodels","previous_headings":"Preparing model inputs","what":"Growth input object","title":"Forest growth","text":"last object, called growthInput, needs created calling simulation function. analogous spwbInput consists compilation soil cohort-level parameters needed simulations. object can obtained using function growthInput(): input information forest data species parameter values can inspected printing different elements input object, whose names : spwbInput objects, information cohort species found element cohorts (.e. code, species name): Element contains -ground structure data already know, additional columns describes estimated initial amount sapwood area: Elements starting params* contain cohort-specific model parameters. already presented previous vignettes (Basic water balance Advanced water/energy balance). important set new cohort-specific parameters forest growth model paramsGrowth: includes maximum growth rates, senescence rates maintenance respiration rages. Another important set parameters given paramsAllometries: Note previous models, allometries already used estimate -ground structural parameters, static simulations. Elements starting internal* contain state variables required keep track plant status. example, metabolic storage carbon levels can seen internalCarbon: internalAllocation stores carbon allocation targets: Additional internal* elements internalMortality, used keep track dead individuals; internalRings, stores state variables used model sink limitations wood formation.","code":"x <- growthInput(exampleforest, examplesoil, SpParamsMED, control) names(x) ##  [1] \"control\"                     \"soil\"                        ##  [3] \"snowpack\"                    \"canopy\"                      ##  [5] \"herbLAI\"                     \"herbLAImax\"                  ##  [7] \"cohorts\"                     \"above\"                       ##  [9] \"below\"                       \"belowLayers\"                 ## [11] \"paramsPhenology\"             \"paramsAnatomy\"               ## [13] \"paramsInterception\"          \"paramsTranspiration\"         ## [15] \"paramsWaterStorage\"          \"paramsGrowth\"                ## [17] \"paramsMortalityRegeneration\" \"paramsAllometries\"           ## [19] \"internalPhenology\"           \"internalWater\"               ## [21] \"internalLAIDistribution\"     \"internalCarbon\"              ## [23] \"internalAllocation\"          \"internalMortality\"           ## [25] \"internalFCCS\" x$cohorts ##         SP              Name ## T1_148 148  Pinus halepensis ## T2_168 168      Quercus ilex ## S1_165 165 Quercus coccifera x$above ##         SP        N   DBH Cover   H        CR          SA   LAI_live ## T1_148 148 168.0000 37.55    NA 800 0.6605196 383.4520992 0.84874773 ## T2_168 168 384.0000 14.60    NA 660 0.6055642  47.0072886 0.70557382 ## S1_165 165 749.4923    NA  3.75  80 0.8032817   0.9753929 0.03062604 ##        LAI_expanded LAI_dead LAI_nocomp    Loading ObsID ## T1_148   0.84874773        0 1.29720268 0.32447403  <NA> ## T2_168   0.70557382        0 1.01943205 0.20102636  <NA> ## S1_165   0.03062604        0 0.04412896 0.01407945  <NA> x$paramsGrowth ##           RERleaf RERsapwood  RERfineroot CCleaf CCsapwood CCfineroot ## T1_148 0.01210607   5.15e-05 0.0009610199 1.5905      1.47        1.3 ## T2_168 0.01757808   5.15e-05 0.0072846640 1.4300      1.47        1.3 ## S1_165 0.02647746   5.15e-05 0.0072846640 1.5320      1.47        1.3 ##        RGRleafmax RGRsapwoodmax RGRcambiummax RGRfinerootmax SRsapwood ## T1_148       0.09            NA   0.002628095            0.1  0.000135 ## T2_168       0.09            NA   0.002500000            0.1  0.000135 ## S1_165       0.09         0.002            NA            0.1  0.000135 ##         SRfineroot      RSSG fHDmin fHDmax     WoodC ## T1_148 0.001897231 0.3725000     80    160 0.4979943 ## T2_168 0.001897231 0.9500000     40    100 0.4740096 ## S1_165 0.001897231 0.7804035     NA     NA 0.4749178 x$paramsAllometries ##              Afbt     Bfbt        Cfbt      Aash     Bash      Absh      Bbsh ## T1_148 0.07607828 1.462411 -0.02280106        NA       NA        NA        NA ## T2_168 0.07848713 1.497670 -0.01470000 1.8574862 1.885548 0.5238830 0.7337293 ## S1_165         NA       NA          NA 0.1305509 2.408443 0.5147731 0.5311554 ##        BTsh     Acr   B1cr     B2cr         B3cr     C1cr     C2cr       Acw ## T1_148   NA 1.99500 -0.649 -0.02000 -0.000120000 -0.00400 -0.15900 0.6415296 ## T2_168    2 1.98539 -0.552 -0.01386 -0.000110736 -0.00685 -0.20101 0.5681897 ## S1_165    2      NA     NA       NA           NA       NA       NA        NA ##           Bcw       Abt       Bbt ## T1_148 0.7310 0.5535741 1.1848613 ## T2_168 0.7974 0.5622245 0.9626839 ## S1_165     NA        NA        NA x$internalCarbon ##        sugarLeaf starchLeaf sugarSapwood starchSapwood ## T1_148 0.4029239 0.00925123    0.5738487      3.201897 ## T2_168 0.3585751 0.00925123    1.0741383      3.100817 ## S1_165 0.7223526 0.00925123    0.2857655      2.654773 x$internalAllocation ##        allocationTarget leafAreaTarget sapwoodAreaTarget fineRootBiomassTarget ## T1_148         1317.523     50.5206982       383.4520992            1381.89095 ## T2_168         3908.823     18.3743183        47.0072886             546.69314 ## S1_165         4189.325      0.4086238         0.9753929              10.58569 ##        crownBudPercent ## T1_148             100 ## T2_168             100 ## S1_165             100"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"executing-the-growth-model","dir":"Articles > Runmodels","previous_headings":"","what":"Executing the growth model","title":"Forest growth","text":"input information ready call function growth(), parameter names spwb(): end daily simulations, growth() function displays information regarding carbon water balance, mostly useful check balances closed. Function growth() returns object class name, actually list: inspect elements, realize returned spwb(): elements common output spwb(). particular, growthInput contains copy input object, whereas growthOutput contains object, values state variables end simulation. new list elements, respect output function spwb(), LabileCarbonBalance (components labile carbon balance), PlantBiomassBalance (plant- cohort-level biomass balance), PlantStructure (daily series structural variables) GrowthMortality (daily growth mortality rates).","code":"G1<-growth(x, examplemeteo, latitude = 41.82592, elevation = 100) ## Package 'meteoland' [ver. 2.2.2] ## Initial plant cohort biomass (g/m2): 5068.34 ## Initial plant water content (mm): 4.73001 ## Initial soil water content (mm): 290.875 ## Initial snowpack content (mm): 0 ## Performing daily simulations ##  ##  Year 2001:............ ##  ## Final plant biomass (g/m2): 5256.53 ## Change in plant biomass (g/m2): 188.193 ## Plant biomass balance result (g/m2): 188.193 ## Plant biomass balance components: ##   Structural balance (g/m2) 104 Labile balance (g/m2) 92 ##   Plant individual balance (g/m2) 196 Mortality loss (g/m2) 8 ## Final plant water content (mm): 4.73794 ## Final soil water content (mm): 274.787 ## Final snowpack content (mm): 0 ## Change in plant water content (mm): 0.00793033 ## Plant water balance result (mm): -0.00116903 ## Change in soil water content (mm): -16.0878 ## Soil water balance result (mm): -16.0878 ## Change in snowpack water content (mm): 0 ## Snowpack water balance result (mm): 7.10543e-15 ## Water balance components: ##   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 ##   Interception (mm) 92 Net rainfall (mm) 370 ##   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 ##   Soil evaporation (mm) 26  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 248 ##   Plant extraction from soil (mm) 248  Plant water balance (mm) -0 Hydraulic redistribution (mm) 4 ##   Runoff (mm) 21 Deep drainage (mm) 128 class(G1) ## [1] \"growth\" \"list\" names(G1) ##  [1] \"latitude\"            \"topography\"          \"weather\"             ##  [4] \"growthInput\"         \"growthOutput\"        \"WaterBalance\"        ##  [7] \"CarbonBalance\"       \"BiomassBalance\"      \"Soil\"                ## [10] \"Snow\"                \"Stand\"               \"Plants\"              ## [13] \"LabileCarbonBalance\" \"PlantBiomassBalance\" \"PlantStructure\"      ## [16] \"GrowthMortality\""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"inspecting-model-outputs","dir":"Articles > Runmodels","previous_headings":"","what":"Inspecting model outputs","title":"Forest growth","text":"Users can extract, summarize inspect output growth() simulations done simulations spwb().","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"extracting-output","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Extracting output","title":"Forest growth","text":"Function extract() allow extracting model outputs form data frame: data frames easy handle R can written text files post-processing programs.","code":"df <- extract(G1, \"forest\") names(df) ##  [1] \"date\"                    \"PET\"                     ##  [3] \"Precipitation\"           \"Rain\"                    ##  [5] \"Snow\"                    \"NetRain\"                 ##  [7] \"Snowmelt\"                \"Infiltration\"            ##  [9] \"InfiltrationExcess\"      \"SaturationExcess\"        ## [11] \"Runoff\"                  \"DeepDrainage\"            ## [13] \"CapillarityRise\"         \"Evapotranspiration\"      ## [15] \"Interception\"            \"SoilEvaporation\"         ## [17] \"HerbTranspiration\"       \"PlantExtraction\"         ## [19] \"Transpiration\"           \"HydraulicRedistribution\" ## [21] \"LAI\"                     \"LAIherb\"                 ## [23] \"LAIlive\"                 \"LAIexpanded\"             ## [25] \"LAIdead\"                 \"Cm\"                      ## [27] \"LgroundPAR\"              \"LgroundSWR\"              ## [29] \"SWE\""},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"plots","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Plots","title":"Forest growth","text":"Several plots available, addition plots available display results spwb() simulations. illustrated following subsections: inspect components plant carbon balance can first display daily gross photosynthesis expressed carbon fixation relative dry biomass: can draw maintenance respiration costs (include sum leaf, sapwood fine root respiration) units: Finally can display daily negative positive balance plant storage, determines changes plant carbon pools:  Carbon assimilation respiration rates define dynamics stored carbon. important storage compartment sapwood starch, whose dynamics can shown using:  Leaf sapwood area dynamics arising interplay growth senescence tissues can inspected using:  Even one year short period tree growth, can display resulting dynamics diameter breast height (DBH) plant height:","code":"plot(G1, \"GrossPhotosynthesis\", bySpecies = T) plot(G1, \"MaintenanceRespiration\", bySpecies = T) plot(G1, \"LabileCarbonBalance\", bySpecies = T) plot(G1, \"StarchSapwood\", bySpecies = T) plot(G1, \"LeafArea\", bySpecies = T) plot(G1, \"SapwoodArea\", bySpecies = T) plot(G1, \"DBH\", bySpecies = T) ## Warning: Removed 365 rows containing missing values or values outside the scale range ## (`geom_line()`). plot(G1, \"Height\", bySpecies = T)"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"interactive-plots","dir":"Articles > Runmodels","previous_headings":"Inspecting model outputs","what":"Interactive plots","title":"Forest growth","text":"Finally, recall one can interactively create plots using function shinyplot, e.g.:","code":"shinyplot(G1)"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"growth-evaluation","dir":"Articles > Runmodels","previous_headings":"","what":"Growth evaluation","title":"Forest growth","text":"Evaluation growth simulations normally imply comparison predicted vs observed basal area increment (BAI) diameter increment given temporal resolution. , illustrate evaluation functions included package using fake data set, consisting predicted values added error. Normally growth evaluations annual scale, one year simulated growth. Assuming want evaluate predictive capacity model terms monthly basal area increment pine cohort, can plot relationship observed predicted values using function evaluation_plot():  following help us quantifying strength relationship: observed data set fake evaluation unrealistically good. illustrative purposes, also compare diameter increment values, drawing observed predicted time series together:  , actual comparisons done coarser temporal resolution. convenience, function shinyplot() also accepts observed data frame second argument, allows performing model evaluation interactively:","code":"data(exampleobs) evaluation_plot(G1, exampleobs, \"BAI\", cohort = \"T1_148\",                  temporalResolution = \"month\", plotType = \"scatter\") ## `geom_smooth()` using formula = 'y ~ x' evaluation_stats(G1, exampleobs, \"BAI\", cohort = \"T1_148\",                   temporalResolution = \"month\") ##            n         Bias     Bias.rel          MAE      MAE.rel            r  ##  12.00000000  -0.07781339 -12.01831387   0.07962106  12.29751007   0.99395791  ##          NSE      NSE.abs  ##   0.95935190   0.83966426 evaluation_plot(G1, exampleobs, \"DI\", cohort = \"T1_148\",                  temporalResolution = \"day\") shinyplot(G1, exampleobs)"},{"path":"https://emf-creaf.github.io/medfate/articles/runmodels/ForestGrowth.html","id":"references","dir":"Articles > Runmodels","previous_headings":"","what":"References","title":"Forest growth","text":"De Cáceres M, Molowny-Horas R, Cabon , Martínez-Vilalta J, Mencuccini M, García-Valdés R, Nadal-Sala D, Sabaté S, Martin-StPaul N, Morin X, D’Adamo F, Batllori E, Améztegui (2023) MEDFATE 2.9.3: trait-enabled model simulate Mediterranean forest function dynamics regional scales. Geoscientific Model Development 16: 3165-3201 (https://doi.org/10.5194/gmd-16-3165-2023).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"about-this-vignette","dir":"Articles > Workedexamples","previous_headings":"Introduction","what":"About this vignette","title":"Soil and plant water balances at Font-Blanche","text":"document describes run water balance model forest plot Font-Blanche (France), using R function spwb() included package medfate. document indicates prepare model inputs, use model simulation function, evaluate predictions available observations inspect outputs.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"about-the-font-blanche-research-forest","dir":"Articles > Workedexamples","previous_headings":"Introduction","what":"About the Font-Blanche research forest","title":"Soil and plant water balances at Font-Blanche","text":"Font-Blanche research forest, located southeastern France (43º14′27″ N 5°40′45″ E, 420 m elevation), composed top strata Pinus halepensis (Aleppo pine) reaching 12 m, lower strata Quercus ilex (holm oak), reaching 6 m, understorey strata dominated Quercus coccifera including species Phillyrea latifolia. spatially heterogeneous: trees strata contiguous, trees lower stratas partially exposed direct light. forest grows rocky shallow soils low retention capacity Jurassic limestone origin. climate Mediterranean, water stress period summer, cold mild winters precipitation occurring September May. experimental site, dedicated study forest carbon water cycles, enclosed area 80×80 m (Simioni et al. 2013) specific plot quadrat dimensions 25x25 m.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"model-inputs","dir":"Articles > Workedexamples","previous_headings":"","what":"Model inputs","title":"Soil and plant water balances at Font-Blanche","text":"forest water balance model needs information climate, vegetation soils forest stand simulated. Moreover, since soil water balance medfate differentiates species, species-specific parameters also needed. Since FontBlanche one sites used evaluating model, much data can found Moreno et al. (2021). can use data list fb necessary inputs:","code":"fb <- medfatereports::load_list(\"FONBLA\") fb <- readRDS(\"fb_data.rds\") names(fb) ##  [1] \"siteData\"       \"treeData\"       \"shrubData\"      \"customParams\"   ##  [5] \"measuredData\"   \"meteoData\"      \"miscData\"       \"soilData\"       ##  [9] \"terrainData\"    \"remarks\"        \"sp_params\"      \"forest_object1\""},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"soil","dir":"Articles > Workedexamples","previous_headings":"Model inputs","what":"Soil","title":"Soil and plant water balances at Font-Blanche","text":"require information physical attributes soil Font-Blanche, namely soil depth, texture, bulk density rock fragment content. Soil information needs entered data frame soil layers rows physical attributes columns. model accepts one five soil layers arbitrary widths. soil properties vary strongly fine spatial scales, ideally soil physical attributes measured samples taken forest stand simulated. users lacking data, soil properties modelled larger scales available via soilgrids.org (see function soilgridsParams()). case soil physical attributes already defined data bundled FontBlanche: soil input function spwb() actually object class soil created using function name: print() function objects soil provides lot information soil physical properties water capacity: soil object also used store moisture degree soil layer. particular, W contains state variable represents moisture content - proportion moisture relative field capacity - default initialized 1 layer:","code":"spar <- fb$soilData print(spar) ##   widths clay sand om   bd rfc ## 1    300   39   26  6 1.45  50 ## 2    700   39   26  3 1.45  65 ## 3   1000   39   26  1 1.45  90 ## 4   2500   39   26  1 1.45  95 fb_soil <- soil(spar) print(fb_soil) ##   widths sand clay      usda om nitrogen   bd rfc   macro     Ksat VG_alpha ## 1    300   26   39 Clay loam  6       NA 1.45  50 0.07387 7232.425 44.14586 ## 2    700   26   39 Clay loam  3       NA 1.45  65 0.07387 3481.917 61.34088 ## 3   1000   26   39 Clay loam  1       NA 1.45  90 0.07387 1879.187 76.38182 ## 4   2500   26   39 Clay loam  1       NA 1.45  95 0.07387 1879.187 76.38182 ##       VG_n VG_theta_res VG_theta_sat W Temp ## 1 1.254346        0.041    0.4388377 1   NA ## 2 1.273896        0.041    0.4388377 1   NA ## 3 1.287757        0.041    0.4388377 1   NA ## 4 1.287757        0.041    0.4388377 1   NA fb_soil$W ## [1] 1 1 1 1"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"species-parameters","dir":"Articles > Workedexamples","previous_headings":"Model inputs","what":"Species parameters","title":"Soil and plant water balances at Font-Blanche","text":"Simulation models medfate require data frame species parameter values. package provides default data set parameter values number Mediterranean species occurring Spain (rows), resulting bibliographic search, fit empirical data expert-based guesses: However, sometimes one may wish override species defaults custom values. case FontBlanche table preferred parameters: can use function modifySpParams() replace values parameters desired traits, leaving rest unaltered: Note function returns subset rows species mentioned customParams. parameters needed soil water balance model. user can find parameter definitions help page data set. However, fully understand role parameters model, user read details model design formulation (http://emf-creaf.github.io/medfate).","code":"data(\"SpParamsMED\") fb$customParams ##               Species VCleaf_P12 VCleaf_P50 VCleaf_P88 VCleaf_slope VCstem_P12 ## 1 Phillyrea latifolia         NA         NA         NA           NA  -1.971750 ## 2    Pinus halepensis         NA         NA         NA           NA  -3.707158 ## 3        Quercus ilex         NA         NA         NA           NA  -4.739642 ##   VCstem_P50 VCstem_P88 VCstem_slope VCroot_P12 VCroot_P50 VCroot_P88 ## 1      -6.50 -11.028250           11         NA         NA         NA ## 2      -4.79  -5.872842           46         -1  -1.741565  -2.301482 ## 3      -6.40  -8.060358           30         NA         NA         NA ##   VCroot_slope VCleaf_kmax LeafEPS LeafPI0 LeafAF StemEPS StemPI0 StemAF Gswmin ## 1           NA        3.00   12.38   -2.13    0.5   12.38   -2.13    0.4  0.002 ## 2           NA        4.00    5.31   -1.50    0.6    5.00   -1.65    0.4  0.001 ## 3           NA        2.63   15.00   -2.50    0.4   15.00   -2.50    0.4  0.002 ##   Gswmax    Gs_P50 Gs_slope    Al2As ## 1 0.2200 -2.207094 89.41176       NA ## 2 0.2175 -1.871216 97.43590  631.000 ## 3 0.2200 -2.114188 44.70588 1540.671 SpParamsFB <- modifySpParams(SpParamsMED, fb$customParams) SpParamsFB ##                    Name IFNcodes SpIndex        AcceptedName ## 143 Phillyrea latifolia        8     142 Phillyrea latifolia ## 149    Pinus halepensis       24     148    Pinus halepensis ## 169        Quercus ilex   45/245     168        Quercus ilex ##                 Species     Genus   Family    Order      Group GrowthForm ## 143 Phillyrea latifolia Phillyrea Oleaceae Lamiales Angiosperm       Tree ## 149    Pinus halepensis     Pinus Pinaceae  Pinales Gymnosperm       Tree ## 169        Quercus ilex   Quercus Fagaceae  Fagales Angiosperm Tree/Shrub ##         LifeForm LeafShape LeafSize      PhenologyType DispersalType Hmed Hmax ## 143 Phanerophyte     Broad   Medium oneflush-evergreen    vertebrate  150  900 ## 149 Phanerophyte    Needle    Small oneflush-evergreen          wind  850 1900 ## 169 Phanerophyte     Broad   Medium oneflush-evergreen    vertebrate  500 1300 ##     Dmax Z50  Z95 fHDmin fHDmax    a_ash    b_ash    a_bsh     b_bsh    a_btsh ## 143   NA  NA 2353     45    109       NA       NA       NA        NA        NA ## 149   NA  NA 7500     80    160       NA       NA       NA        NA        NA ## 169   NA  NA 5020     40    100 1.857486 1.885548 0.523883 0.7337293 0.7327147 ##       b_btsh cr BTsh      a_fbt    b_fbt       c_fbt    a_cr  b_1cr    b_2cr ## 143       NA NA   NA         NA       NA          NA      NA     NA       NA ## 149       NA NA   NA 0.07607828 1.462411 -0.02280106      NA     NA       NA ## 169 0.737577 NA   NA 0.07848713 1.497670 -0.00309341 1.98539 -0.552 -0.01386 ##            b_3cr    c_1cr    c_2cr      a_cw   b_cw      a_bt      b_bt ## 143           NA       NA       NA        NA     NA        NA        NA ## 149           NA       NA       NA 0.6415296 0.7310 0.5535741 1.1848613 ## 169 -0.000110736 -0.00685 -0.20101 0.5681897 0.7974 0.5622245 0.9626839 ##     LeafDuration t0gdd  Sgdd Tbgdd  Ssen Phsen Tbsen xsen ysen      SLA ## 143     2.556345    NA    NA    NA    NA    NA    NA   NA   NA 6.881886 ## 149     2.536875    NA    NA    NA    NA    NA    NA   NA   NA 5.140523 ## 169     2.183837  54.5 240.7  4.34 10178  12.5  28.5    2    2 6.340000 ##     LeafDensity WoodDensity FineRootDensity conduit2sapwood     r635    pDead ## 143   0.5327417   0.7050000              NA              NA 1.917579 0.119768 ## 149   0.2982842   0.6077016              NA       0.9236406 1.964226 0.000500 ## 169   0.4893392   0.9008264              NA       0.6238125 1.805872 0.000260 ##        Al2As Ar2Al LeafWidth      SRL RLD    maxFMC   minFMC LeafPI0 LeafEPS ## 143 1698.950    NA 1.2000000       NA  NA 108.24724 56.53442   -2.13   12.38 ## 149  631.000    NA 0.1384772 3172.572  NA 126.03063 86.22550   -1.50    5.31 ## 169 1540.671    NA 1.7674359 4398.812  NA  93.15304 57.44192   -2.50   15.00 ##     LeafAF StemPI0 StemEPS StemAF  SAV HeatContent LigninPercent LeafAngle ## 143    0.5   -2.13   12.38    0.4 9630       21400            NA        NA ## 149    0.6   -1.65    5.00    0.4 6050       22150      24.52473        NA ## 169    0.4   -2.50   15.00    0.4 4050       19300      28.97492        NA ##     LeafAngleSD ClumpingIndex gammaSWR alphaSWR kPAR  g  Tmax_LAI   Tmax_LAIsq ## 143          NA            NA       NA       NA   NA NA        NA           NA ## 149          NA            NA       NA       NA   NA NA 0.1869849 -0.008372458 ## 169          NA            NA       NA       NA   NA NA 0.1251027 -0.005601615 ##     Psi_Extract Exp_Extract      WUE   WUE_par     WUE_co2    WUE_vpd Gswmin ## 143  -1.8969940          NA       NA        NA          NA         NA  0.002 ## 149  -0.9218219    1.504542 8.525550 0.5239136 0.002586327 -0.2647169  0.001 ## 169  -1.9726871    1.149052 8.968208 0.1412266 0.002413091 -0.5664879  0.002 ##     Gswmax Gsw_AC_slope Gs_Toptim Gs_Tsens    Gs_P50 Gs_slope VCleaf_kmax ## 143 0.2200           NA        NA       NA -2.207094 89.41176        3.00 ## 149 0.2175           NA        NA       NA -1.871216 97.43590        4.00 ## 169 0.2200           NA        NA       NA -2.114188 44.70588        2.63 ##     VCleaf_P12 VCleaf_P50 VCleaf_P88 VCleaf_slope Kmax_stemxylem VCstem_P12 ## 143         NA         NA         NA           NA      0.4083769  -1.971750 ## 149 -1.9793246  -2.303772  -2.547056    133.86620      0.1500000  -3.707158 ## 169 -0.5559123  -1.964085  -4.525766     19.14428      0.4000000  -4.739642 ##     VCstem_P50 VCstem_P88 VCstem_slope Kmax_rootxylem VCroot_P12 VCroot_P50 ## 143      -6.50 -11.028250           11             NA -3.1224807  -5.300000 ## 149      -4.79  -5.872842           46             NA -1.0000000  -1.741565 ## 169      -6.40  -8.060358           30             NA -0.4766469  -1.684034 ##     VCroot_P88 VCroot_slope  Vmax298  Jmax298    Nleaf Nsapwood Nfineroot ## 143  -7.477519     17.45105 65.23250 146.2701 16.09170  2.78000        NA ## 149  -2.301482    103.96607 72.19617 124.1687 11.91507  1.26556  9.187476 ## 169  -3.880455     22.32794 68.51600 118.7863 14.11983  5.66150 12.166747 ##         WoodC    RERleaf RERsapwood RERfineroot CCleaf CCsapwood CCfineroot ## 143        NA         NA         NA          NA 1.6300        NA         NA ## 149 0.4979943 0.01210607         NA          NA 1.5905      1.47        1.3 ## 169 0.4740096 0.01757808         NA          NA 1.4300        NA         NA ##     RGRleafmax RGRsapwoodmax RGRcambiummax RGRfinerootmax SRsapwood SRfineroot ## 143         NA            NA  0.0006653797             NA        NA         NA ## 149         NA            NA  0.0026280949             NA        NA         NA ## 169         NA            NA            NA             NA        NA         NA ##       RSSG MortalityBaselineRate SurvivalModelStep SurvivalB0 SurvivalB1 ## 143     NA           0.001622378                NA         NA         NA ## 149 0.3725           0.005000000                10   7.311515 -0.6532989 ## 169 0.9500           0.001000000                10   7.484348 -0.5420550 ##     SeedProductionHeight SeedProductionDiameter SeedMass SeedLongevity ## 143                   NA                     NA       NA            NA ## 149                   NA                     NA       NA            NA ## 169                   NA               10.64702       NA            NA ##     DispersalDistance DispersalShape   ProbRecr MinTempRecr MinMoistureRecr ## 143                NA             NA 0.04459023   -2.570181      0.05070956 ## 149                NA             NA 0.02473379    1.083300      0.10154153 ## 169                NA             NA 0.03005748   -3.744526      0.09657161 ##     MinFPARRecr RecrTreeDBH RecrTreeHeight RecrShrubHeight RecrTreeDensity ## 143   0.4943654          NA       52.54367              NA              NA ## 149   4.5625766          NA       56.93647              NA              NA ## 169   0.1307250          NA       47.23629              NA              NA ##     RecrShrubCover RecrZ50 RecrZ95 RespFire RespDist RespClip ## 143             NA      NA      NA      0.9     0.95     0.96 ## 149             NA      NA      NA       NA       NA       NA ## 169             NA      NA      NA      0.9     0.95     0.96 ##     IngrowthTreeDensity IngrowthTreeDBH ## 143            235.1347              NA ## 149            246.2793              NA ## 169            352.2668              NA"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"vegetation","dir":"Articles > Workedexamples","previous_headings":"Model inputs","what":"Vegetation","title":"Soil and plant water balances at Font-Blanche","text":"Models included medfate primarily designed ran forest inventory plots. kind data, vegetation sampled area described terms woody plants (trees shrubs) along size species identity. Forest plots medfate assumed format follows closely Spanish forest inventory. forest plot represented object class forest, list contains several elements. Among , important items two data frames, treeData (trees) shrubData shrubs: Trees expected primarily described terms species, diameter (DBH) height, whereas shrubs described terms species, percent cover mean height. case, simplicity avoid shrubs concentrate main three tree species Font-Blanche forest plot: Phillyrea latifolia (code 142), Pinus halepensis (Alepo pine, code 148), Quercus ilex (holm oak; code 168). order run model, one prepare data table like one, already prepared Font-Blanche: Trees grouped species, DBH height values means (cm), N indicates number trees category. Package medfate allows separating trees size, simplicity distinguish tree sizes within species. Columns Z50 Z95 indicate depths (mm) corresponding cumulative 50% 95% fine roots, respectively. order use data, need replace part corresponding trees forest object created : forest plot format rather specific, medfate also allows starting alternative way using two data frames, one aboveground information (.e. leave area size plants) belowground information (.e. root distribution). aboveground data frame distinguish trees shrubs. includes, plant cohort considered rows, species identity, height, leaf area index (LAI) crown ratio. users can build input data , use function forest2aboveground() object fb_forest show data look like: Note call forest2aboveground() included species parameters, species-specific parameter values needed calculate leaf area tree diameters shrub cover using allometric relationships. Columns N, DBH Cover required simulating growth, soil water balance, requires columns SP, H (cm), CR (.e. crown ratio), LAI_live, LAI_expanded LAI_dead. plant cohorts given unique codes tell us whether correspond trees shrubs. practice, user needs worry calculate values LAI_live. LAI_live LAI_expanded can contain LAI values, LAI_dead normally zero. see Font-Blanche holm oaks (code 68) represent total leaf area. hand, pines taller oaks. medfate assumes leaf distribution follows truncated normal curve crown base height total height. can easily inspected using function vprofile_leafAreaDensity():  Regarding belowground information, usuer supply matrix describing plant cohort, proportion fine roots soil layer. , use function forest2belowground() object fb_forest show data look like: case, proportions implicitly specified parameters Z50 Z95. fact, values describe continuous distribution fine roots along depth, can displayed using function vprofile_rootDistribution():  Note Font-Blanche set root system Aleppo pines (Pinus halepensis) superficial two species. Moreover, holm oak trees ones extend roots deepest soil layers.","code":"fb_forest <- emptyforest() fb_forest ## $treeData ## [1] Species DBH     Height  N       Z50     Z95     ## <0 rows> (or 0-length row.names) ##  ## $shrubData ## [1] Species Height  Cover   Z50     Z95     ## <0 rows> (or 0-length row.names) ##  ## $herbCover ## [1] NA ##  ## $herbHeight ## [1] NA ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\" fb$treeData ##               Species       DBH    Height    N Z50  Z95       LAI ## 1 Phillyrea latifolia  2.587859  323.0000 1248 390 1470 0.2581029 ## 2    Pinus halepensis 26.759914 1195.7667  256 300 1200 1.0035486 ## 3        Quercus ilex  6.220031  495.5532 3104 500 2287 1.4383485 fb_forest$treeData <- fb$treeData fb_forest ## $treeData ##               Species       DBH    Height    N Z50  Z95       LAI ## 1 Phillyrea latifolia  2.587859  323.0000 1248 390 1470 0.2581029 ## 2    Pinus halepensis 26.759914 1195.7667  256 300 1200 1.0035486 ## 3        Quercus ilex  6.220031  495.5532 3104 500 2287 1.4383485 ##  ## $shrubData ## [1] Species Height  Cover   Z50     Z95     ## <0 rows> (or 0-length row.names) ##  ## $herbCover ## [1] NA ##  ## $herbHeight ## [1] NA ##  ## $seedBank ## [1] Species Percent ## <0 rows> (or 0-length row.names) ##  ## attr(,\"class\") ## [1] \"forest\" \"list\" fb_above <- forest2aboveground(fb_forest, SpParamsFB) fb_above ##         SP    N       DBH Cover         H        CR  LAI_live LAI_expanded ## T1_142 142 1248  2.587859    NA  323.0000 0.5510653 0.2581029    0.2581029 ## T2_148 148  256 26.759914    NA 1195.7667 0.6126601 1.0035486    1.0035486 ## T3_168 168 3104  6.220031    NA  495.5532 0.5531152 1.4383485    1.4383485 ##        LAI_dead LAI_nocomp ObsID ## T1_142        0  0.2581029  <NA> ## T2_148        0  1.0035486  <NA> ## T3_168        0  1.4383485  <NA> vprofile_leafAreaDensity(fb_forest, SpParamsFB, byCohorts = T, bySpecies = T) fb_below <- forest2belowground(fb_forest, fb_soil, SpParamsFB) fb_below ##                1         2          3          4 ## T1_142 0.3602157 0.5332967 0.08477533 0.02171222 ## T2_148 0.5016024 0.4291685 0.05479894 0.01443019 ## T3_168 0.2752236 0.5286425 0.14537757 0.05075634 vprofile_rootDistribution(fb_forest, SpParamsFB, bySpecies = T)"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"meteorology","dir":"Articles > Workedexamples","previous_headings":"Model inputs","what":"Meteorology","title":"Soil and plant water balances at Font-Blanche","text":"Water balance simulations function spwb() require daily weather inputs. weather variables required depend complexity soil water balance model using. simplest case, mean temperature, precipitation potential evapo-transpiration (PET) required, complex simulation model also requires radiation, wind speed, min/max temparature relative humitidy. already data frame daily meteorology measured Font-Blanche year 2014: Simulation models medfate designed work along data generated package meteoland (De Cáceres et al. 2018), specifies conventions variable names units. user strongly recommended resort package obtain suitable weather input soil water balance simulations (see http://emf-creaf.github.io/meteoland).","code":"fb_meteo <- fb$meteoData head(fb_meteo) ##        dates MeanTemperature MinTemperature MaxTemperature MeanRelativeHumidity ## 1 2014-01-01        7.661856       5.988889       8.960000             87.78224 ## 2 2014-01-02        9.525431       7.958333      11.550000             96.40669 ## 3 2014-01-03        9.482417       8.176111      11.762220             93.05705 ## 4 2014-01-04       10.016813       6.313000      11.010000             96.31667 ## 5 2014-01-05        6.619919       4.766000       9.060555             57.77938 ## 6 2014-01-06        8.923008       6.793889      12.329440             64.40477 ##   MinRelativeHumidity MaxRelativeHumidity WindSpeed Precipitation Radiation ## 1            80.37265            98.48404  2.317495      0.000000 1.5050178 ## 2            84.22588           100.00000  2.407691      0.000000 2.6173102 ## 3            79.93501           100.00000  1.950114      0.000000 3.9089762 ## 4            90.14023           100.00000  3.596797      2.590674 0.4753025 ## 5            48.92043            65.71329  7.310334      0.000000 8.6224570 ## 6            51.31975            74.46718  2.301697      0.000000 6.7835715"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"simulation-control","dir":"Articles > Workedexamples","previous_headings":"Model inputs","what":"Simulation control","title":"Soil and plant water balances at Font-Blanche","text":"Apart data inputs, behavior simulation models can controlled using set global parameters. default global parameter values obtained using function defaultControl(): following changes set control parameters: Transpiration set transpirationMode = \"Sperry\", implies greater complexity plant hydraulics energy balance calculations. Soil water retention curves calculated using Van Genuchten’s equations. Subdaily results generated model kept. Coarse root resistance assumed 40% total plant resistance","code":"fb_control <- defaultControl() fb_control$transpirationMode <- \"Sperry\" fb_control$subdailyResults <- TRUE fb_control$stemCavitationRecovery <- \"rate\" fb_control$leafCavitationRecovery <- \"total\" fb_control$fracRootResistance <- 0.4"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"water-balance-input-object","dir":"Articles > Workedexamples","previous_headings":"Model inputs","what":"Water balance input object","title":"Soil and plant water balances at Font-Blanche","text":"last step needed calling simulation functions. consists compilation aboveground belowground parameters specification additional parameter values plant cohort, light extinction coefficient response drought. one forest object, spwbInput object can generated directly , avoiding need explicitly build fb_above fb_below data frames: Different species parameter variables drawn SpParamsMED depending value transpirationMode. simple water balance model, relatively parameters needed. input information forest data species parameter values can inspected printing input object. Finally, note one can play plant-specific parameters soil water balance (instead using species-level values) using function modifyCohortParams().","code":"fb_x <- spwbInput(fb_forest, fb_soil, SpParamsFB, fb_control)"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"running-the-model","dir":"Articles > Workedexamples","previous_headings":"","what":"Running the model","title":"Soil and plant water balances at Font-Blanche","text":"Function spwb() requires two main objects input: spwbInput object forest soil parameters (fb_x case). data frame daily meteorology study period (fb_meteo case). Now ready call function spwb(): Console output provides water balance totals period considered, may span several years. output function spwb() object class name, actually list: inspect elements, realize several components: example, WaterBalance contains water balance components form data frame days rows:","code":"fb_SWB <- spwb(fb_x, fb_meteo, elevation = 420, latitude = 43.24083) ## Package 'meteoland' [ver. 2.2.2] ## Initial plant water content (mm): 31.8864 ## Initial soil water content (mm): 213.886 ## Initial snowpack content (mm): 0 ## Performing daily simulations ##  ##  [Year 2014]:............ ##  ## Final plant water content (mm): 31.8301 ## Final soil water content (mm): 235.051 ## Final snowpack content (mm): 0 ## Change in plant water content (mm): -0.0562979 ## Plant water balance result (mm): -1.00739e-15 ## Change in soil water content (mm): 21.1654 ## Soil water balance result (mm): 21.1654 ## Change in snowpack water content (mm): 0 ## Snowpack water balance result (mm): 0 ## Water balance components: ##   Precipitation (mm) 1066 Rain (mm) 1066 Snow (mm) 0 ##   Interception (mm) 141 Net rainfall (mm) 925 ##   Infiltration (mm) 833 Infiltration excess (mm) 92 Saturation excess (mm) 272 Capillarity rise (mm) 0 ##   Soil evaporation (mm) 21  Herbaceous transpiration (mm) 0 Woody plant transpiration (mm) 323 ##   Plant extraction from soil (mm) 323  Plant water balance (mm) -0 Hydraulic redistribution (mm) 36 ##   Runoff (mm) 364 Deep drainage (mm) 195 class(fb_SWB) ## [1] \"spwb\" \"list\" names(fb_SWB) ##  [1] \"latitude\"      \"topography\"    \"weather\"       \"spwbInput\"     ##  [5] \"spwbOutput\"    \"WaterBalance\"  \"EnergyBalance\" \"Temperature\"   ##  [9] \"Soil\"          \"Snow\"          \"Stand\"         \"Plants\"        ## [13] \"SunlitLeaves\"  \"ShadeLeaves\"   \"subdaily\" head(fb_SWB$WaterBalance) ##                  PET Precipitation     Rain Snow   NetRain Snowmelt ## 2014-01-01 0.6209989      0.000000 0.000000    0 0.0000000        0 ## 2014-01-02 0.5671238      0.000000 0.000000    0 0.0000000        0 ## 2014-01-03 0.5418115      0.000000 0.000000    0 0.0000000        0 ## 2014-01-04 0.6072565      2.590674 2.590674    0 0.7213133        0 ## 2014-01-05 2.0447148      0.000000 0.000000    0 0.0000000        0 ## 2014-01-06 0.9330456      0.000000 0.000000    0 0.0000000        0 ##            Infiltration InfiltrationExcess SaturationExcess Runoff DeepDrainage ## 2014-01-01    0.0000000                  0                0      0    0.0000000 ## 2014-01-02    0.0000000                  0                0      0    0.0000000 ## 2014-01-03    0.0000000                  0                0      0    0.0000000 ## 2014-01-04    0.7213133                  0                0      0    0.1894753 ## 2014-01-05    0.0000000                  0                0      0    0.0000000 ## 2014-01-06    0.0000000                  0                0      0    0.0000000 ##            CapillarityRise Evapotranspiration Interception SoilEvaporation ## 2014-01-01               0          0.2355919      0.00000       0.2145403 ## 2014-01-02               0          0.1959278      0.00000       0.1959278 ## 2014-01-03               0          0.1977165      0.00000       0.1871830 ## 2014-01-04               0          2.0494889      1.86936       0.1801287 ## 2014-01-05               0          0.9201994      0.00000       0.2943308 ## 2014-01-06               0          0.6254937      0.00000       0.1367723 ##            HerbTranspiration PlantExtraction Transpiration ## 2014-01-01                 0    2.105155e-02    0.02105155 ## 2014-01-02                 0   -1.395910e-18    0.00000000 ## 2014-01-03                 0    1.053355e-02    0.01053355 ## 2014-01-04                 0    1.978669e-18    0.00000000 ## 2014-01-05                 0    6.258686e-01    0.62586859 ## 2014-01-06                 0    4.887214e-01    0.48872136 ##            HydraulicRedistribution ## 2014-01-01             0.000000000 ## 2014-01-02             0.002397269 ## 2014-01-03             0.003376603 ## 2014-01-04             0.004274576 ## 2014-01-05             0.000000000 ## 2014-01-06             0.001334448"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"comparing-results-with-observations","dir":"Articles > Workedexamples","previous_headings":"","what":"Comparing results with observations","title":"Soil and plant water balances at Font-Blanche","text":"examining results model, important compare predictions observed data, available. following observations available experimental forest plot year 2014: Stand total evapotranspiration estimated using Eddy-covariance flux tower. Soil moisture content first 0-30 cm layer. Cohort transpiration estimates derived sapflow measurements Q. ilex P. halepensis. Pre-dawn midday leaf water potentials Q. ilex P. halepensis. first load measured data workspace filter dates used simulation:","code":"fb_observed <- fb$measuredData fb_observed <- fb_observed[fb_observed$dates %in% fb_meteo$dates,] row.names(fb_observed) <- fb_observed$dates head(fb_observed) ##                 dates       SWC SWC.err       ETR E_T2_148 E_T2_148_err ## 2014-01-01 2014-01-01 0.5813407      NA 0.2259528       NA           NA ## 2014-01-02 2014-01-02 0.6507478      NA 0.2337668       NA           NA ## 2014-01-03 2014-01-03 0.6224243      NA 0.5229000       NA           NA ## 2014-01-04 2014-01-04        NA      NA 0.1117191       NA           NA ## 2014-01-05 2014-01-05 0.6285134      NA 0.8132403       NA           NA ## 2014-01-06 2014-01-06 0.6035415      NA 0.6012234       NA           NA ##            E_T3_168 E_T3_168_err PD_T2_148 PD_T2_148_err PD_T3_168 ## 2014-01-01       NA           NA        NA            NA        NA ## 2014-01-02       NA           NA        NA            NA        NA ## 2014-01-03       NA           NA        NA            NA        NA ## 2014-01-04       NA           NA        NA            NA        NA ## 2014-01-05       NA           NA        NA            NA        NA ## 2014-01-06       NA           NA        NA            NA        NA ##            PD_T3_168_err MD_T2_148 MD_T2_148_err MD_T3_168 MD_T3_168_err ## 2014-01-01            NA        NA            NA        NA            NA ## 2014-01-02            NA        NA            NA        NA            NA ## 2014-01-03            NA        NA            NA        NA            NA ## 2014-01-04            NA        NA            NA        NA            NA ## 2014-01-05            NA        NA            NA        NA            NA ## 2014-01-06            NA        NA            NA        NA            NA"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"stand-evapotranspiration","dir":"Articles > Workedexamples","previous_headings":"Comparing results with observations","what":"Stand evapotranspiration","title":"Soil and plant water balances at Font-Blanche","text":"Package medfate contains several functions assist evaluation model results. can first compare observed vs modelled total evapotranspiration. can plot two time series:  easy see rainy days predicted evapotranspiration much higher observed data. repeat comparison excluding intercepted water modeled results:  relationship can shown scatter plot: see reasonably good relationship, model tends underestimate total evapotranspiration seasons low evaporative demand. Function evaluation_stats() allows us generate evaluation statistics:","code":"evaluation_plot(fb_SWB, fb_observed, type = \"ETR\", plotType=\"dynamics\")+   theme(legend.position = c(0.8,0.85)) evaluation_plot(fb_SWB, fb_observed, type = \"SE+TR\", plotType=\"dynamics\")+   theme(legend.position = c(0.8,0.85)) evaluation_plot(fb_SWB, fb_observed, type = \"SE+TR\", plotType=\"scatter\") evaluation_stats(fb_SWB, fb_observed, type = \"SE+TR\") ##             n          Bias      Bias.rel           MAE       MAE.rel  ## 365.000000000  -0.388376779 -29.149141165   0.470809105  35.335997977  ##             r           NSE       NSE.abs  ##   0.691723221  -0.008672744   0.054443424"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"soil-moisture","dir":"Articles > Workedexamples","previous_headings":"Comparing results with observations","what":"Soil moisture","title":"Soil and plant water balances at Font-Blanche","text":"can compare observed vs modelled soil moisture content similar way total evapotranspiration:  , can generate scatter plot:  examine evaluation statistics:","code":"evaluation_plot(fb_SWB, fb_observed, type = \"SWC\", plotType=\"dynamics\") evaluation_plot(fb_SWB, fb_observed, type = \"SWC\", plotType=\"scatter\") evaluation_stats(fb_SWB, fb_observed, type = \"SWC\") ##            n         Bias     Bias.rel          MAE      MAE.rel            r  ## 364.00000000  -0.13291973 -30.98799325   0.13291973  30.98799325   0.94982954  ##          NSE      NSE.abs  ##  -0.09683510  -0.04136969"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"plant-transpiration","dir":"Articles > Workedexamples","previous_headings":"Comparing results with observations","what":"Plant transpiration","title":"Soil and plant water balances at Font-Blanche","text":"following plots display observed predicted transpiration dynamics Pinus halepensis Quercus ilex:  general, agreement quite good, model seems overestimate transpiration P. halepensis early summer first drought period. transpiration Q. ilex seems also overestimated spring autumn. can also inspect evaluation statistics species using:","code":"g1<-evaluation_plot(fb_SWB, fb_observed,                              cohort = \"T2_148\",                             type=\"E\", plotType = \"dynamics\")+   theme(legend.position = c(0.85,0.83)) g2<-evaluation_plot(fb_SWB, fb_observed,                              cohort = \"T3_168\",                             type=\"E\", plotType = \"dynamics\")+   theme(legend.position = c(0.85,0.83)) plot_grid(g1, g2, ncol=1) evaluation_stats(fb_SWB, fb_observed, cohort = \"T2_148\", type=\"E\") ##           n        Bias    Bias.rel         MAE     MAE.rel           r  ## 300.0000000   0.3116644 151.5349140   0.3277715 159.3663779   0.8574025  ##         NSE     NSE.abs  ## -11.6124694  -2.3122992 evaluation_stats(fb_SWB, fb_observed, cohort = \"T3_168\", type=\"E\") ##             n          Bias      Bias.rel           MAE       MAE.rel  ## 309.000000000  -0.005238063  -1.809606982   0.066857290  23.097356763  ##             r           NSE       NSE.abs  ##   0.888623908   0.764435060   0.544515341"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"leaf-water-potentials","dir":"Articles > Workedexamples","previous_headings":"Comparing results with observations","what":"Leaf water potentials","title":"Soil and plant water balances at Font-Blanche","text":"Finally, can compare observed predicted water potentials. case measurements available three dates, include standard deviation several measurements.  model seems underestimate water potentials (.e. predicts negative values observed) drought season.","code":"g1<-evaluation_plot(fb_SWB, fb_observed,                              cohort = \"T2_148\",                             type=\"WP\", plotType = \"dynamics\")+   theme(legend.position = c(0.85,0.23)) g2<-evaluation_plot(fb_SWB, fb_observed,                              cohort = \"T3_168\",                             type=\"WP\", plotType = \"dynamics\")+   theme(legend.position = c(0.85,0.23)) plot_grid(g1, g2, ncol=1)"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"drawing-plots","dir":"Articles > Workedexamples","previous_headings":"","what":"Drawing plots","title":"Soil and plant water balances at Font-Blanche","text":"Package medfate provides simple plot function objects class spwb. use function display seasonal variation predicted model, well variation higher temporal resolution within four different selected 3-day periods define :","code":"d1 = seq(as.Date(\"2014-03-01\"), as.Date(\"2014-03-03\"), by=\"day\") d2 = seq(as.Date(\"2014-06-01\"), as.Date(\"2014-06-03\"), by=\"day\") d3 = seq(as.Date(\"2014-08-01\"), as.Date(\"2014-08-03\"), by=\"day\") d4 = seq(as.Date(\"2014-10-01\"), as.Date(\"2014-10-03\"), by=\"day\")"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"meteorological-input-and-inputoutput-water-flows","dir":"Articles > Workedexamples","previous_headings":"Drawing plots","what":"Meteorological input and input/output water flows","title":"Soil and plant water balances at Font-Blanche","text":"Function plot() can used show meteorological input: apparent climatic drought period april august 2014. impact soil moisture plant stress. interested forest hydrology, can plot amount water model predicts leave forest via surface runoff drainage lower water compartments. expected, water exported forest plot relevant autumn winter periods. Note also model predicts runoff convective storms autumn, whereas winter events occur soil already full, exported water assumed lost via deep drainage. One can also display evapotranspiration flows, following plot also combines two previous:","code":"plot(fb_SWB, type = \"PET_Precipitation\") plot(fb_SWB, type = \"Export\") g1<-plot(fb_SWB)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = \"none\") g2<-plot(fb_SWB, \"Evapotranspiration\")+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.13,0.73)) g3<-plot(fb_SWB, \"Export\")+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.35,0.60)) plot_grid(g1,g2, g3, ncol=1, rel_heights = c(0.4,1,0.6))"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"soil-moisture-dynamics-and-hydraulic-redistribution","dir":"Articles > Workedexamples","previous_headings":"Drawing plots","what":"Soil moisture dynamics and hydraulic redistribution","title":"Soil and plant water balances at Font-Blanche","text":"also useful plot dynamics soil state variables layer, percentage moisture relation field capacity: Note model predicts soil drought occur earlier season first three layers (0-200 cm) whereas bottom layer dries much slowly. point important mention water balance model incorporates. can also display dynamics corresponding soil layer water potentials: draw composite plot including absolute soil water volume:","code":"plot(fb_SWB, type=\"SoilTheta\") plot(fb_SWB, type=\"SoilPsi\") g1<-plot(fb_SWB)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = \"none\") g2<-plot(fb_SWB, \"SoilVol\")+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.08,0.65)) g3<-plot(fb_SWB, \"SoilPsi\")+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.08,0.5)) plot_grid(g1, g2,  g3, rel_heights = c(0.4,0.8,0.8), ncol=1)"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"root-water-uptake-and-hydraulic-redistribution","dir":"Articles > Workedexamples","previous_headings":"Drawing plots","what":"Root water uptake and hydraulic redistribution","title":"Soil and plant water balances at Font-Blanche","text":"following composite plot shows daily root water uptake (release) different soil layers, daily amount water entering soil layers due hydraulic redistribution:  create composite plot including subdaily water uptake/release patterns, can understand redistribution flows created model different periods:","code":"g1<-plot(fb_SWB, \"SoilPsi\")+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = \"none\")+ylab(\"Soil wp (MPa)\") g2<-plot(fb_SWB, \"PlantExtraction\")+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.08,0.68)) g3<-plot(fb_SWB, \"HydraulicRedistribution\")+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.08,0.5)) plot_grid(g1, g2,  g3, rel_heights = c(0.4,0.8,0.8), ncol=1) g0<-plot(fb_SWB, \"PlantExtraction\")+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.08,0.68)) g1<-plot(fb_SWB, \"PlantExtraction\", subdaily = T, dates = d1)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylim(c(-0.05,0.13)) g2<-plot(fb_SWB, \"PlantExtraction\", subdaily = T, dates = d2)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(-0.05,0.13)) g3<-plot(fb_SWB, \"PlantExtraction\", subdaily = T, dates = d3)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(-0.05,0.13)) g4<-plot(fb_SWB, \"PlantExtraction\", subdaily = T, dates = d4)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(-0.05,0.13)) plot_grid(g0,plot_grid(g1, g2, g3, g4, ncol=4),ncol=1)"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"plant-transpiration-1","dir":"Articles > Workedexamples","previous_headings":"Drawing plots","what":"Plant transpiration","title":"Soil and plant water balances at Font-Blanche","text":"can use function plot() display seasonal dynamics cohort-level variables, plant transpiration per leaf area: can observe species transpire others due vertical position within canopy.","code":"par(mar=c(5,5,1,1)) plot(fb_SWB, type=\"TranspirationPerLeaf\", bySpecies = T) g1<-plot(fb_SWB)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = \"none\") g2<-plot(fb_SWB, \"TranspirationPerLeaf\", bySpecies = T)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.1,0.75)) g21<-plot(fb_SWB, \"LeafTranspiration\", subdaily = T, dates = d1)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylim(c(0,0.32)) g22<-plot(fb_SWB, \"LeafTranspiration\", subdaily = T, dates = d2)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(0,0.32)) g23<-plot(fb_SWB, \"LeafTranspiration\", subdaily = T, dates = d3)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(0,0.32)) g24<-plot(fb_SWB, \"LeafTranspiration\", subdaily = T, dates = d4)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(0,0.32)) plot_grid(g1, g2,             plot_grid(g21,g22,g23,g24, ncol=4),            ncol=1, rel_heights = c(0.4,0.8,0.8))"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"plant-stress","dir":"Articles > Workedexamples","previous_headings":"Drawing plots","what":"Plant stress","title":"Soil and plant water balances at Font-Blanche","text":"model, reduction (whole-plant) plant transpiration used define drought stress, depends species identity:  examine impact drought plants, one can inspect whole-plant conductance (stress index derived) stem percent loss conductance derived embolism, following composite plot:","code":"plot(fb_SWB, type=\"PlantStress\", bySpecies = T) g1<-plot(fb_SWB)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = \"none\") g2<-plot(fb_SWB, \"SoilPlantConductance\", bySpecies = T)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+   ylab(expression(paste(\"Soil-plant conductance \",(mmol%.%m^{-2}%.%s^{-1}))))+   theme(legend.position = \"none\") g3<-plot(fb_SWB, \"StemPLC\", bySpecies = T)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.2,0.75)) plot_grid(g1, g2,g3,                                     ncol=1, rel_heights = c(0.4,0.8,0.8))"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"leaf-water-potentials-1","dir":"Articles > Workedexamples","previous_headings":"Drawing plots","what":"Leaf water potentials","title":"Soil and plant water balances at Font-Blanche","text":"","code":"g1<-plot(fb_SWB)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = \"none\") g2<-plot(fb_SWB, \"LeafPsiRange\", bySpecies = T)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.1,0.25)) + ylab(\"Leaf water potential (MPa)\") g21<-plot(fb_SWB, \"LeafPsi\", subdaily = T, dates = d1)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylim(c(-7,0)) g22<-plot(fb_SWB, \"LeafPsi\", subdaily = T, dates = d2)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(-7,0)) g23<-plot(fb_SWB, \"LeafPsi\", subdaily = T, dates = d3)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(-7,0)) g24<-plot(fb_SWB, \"LeafPsi\", subdaily = T, dates = d4)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(-7,0)) plot_grid(g1, g2,                                     plot_grid(g21,g22,g23,g24, ncol=4),            ncol=1, rel_heights = c(0.4,0.8,0.8))"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"stomatal-conductance","dir":"Articles > Workedexamples","previous_headings":"Drawing plots","what":"Stomatal conductance","title":"Soil and plant water balances at Font-Blanche","text":"","code":"g1<-plot(fb_SWB)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = \"none\") g2<-plot(fb_SWB, \"GSWMax_SL\", bySpecies = T)+scale_x_date(date_breaks = \"1 month\", date_labels = \"%m\")+theme(legend.position = c(0.5,0.74))+ylab(\"Sunlit leaf stomatal conductance\")+ylim(c(0,0.3)) g21<-plot(fb_SWB, \"LeafStomatalConductance\", subdaily = T, dates = d1)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylim(c(0,0.2)) g22<-plot(fb_SWB, \"LeafStomatalConductance\", subdaily = T, dates = d2)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(0,0.2)) g23<-plot(fb_SWB, \"LeafStomatalConductance\", subdaily = T, dates = d3)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(0,0.2)) g24<-plot(fb_SWB, \"LeafStomatalConductance\", subdaily = T, dates = d4)+scale_x_datetime(date_breaks = \"1 day\",  date_labels = \"%m/%d\")+theme(legend.position = \"none\")+ylab(\"\")+ylim(c(0,0.2)) plot_grid(g1, g2,           plot_grid(g21,g22,g23,g24, ncol=4),           ncol=1, rel_heights = c(0.4,0.8,0.8))"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"generating-output-summaries","dir":"Articles > Workedexamples","previous_headings":"","what":"Generating output summaries","title":"Soil and plant water balances at Font-Blanche","text":"water balance model operates daily sub-daily steps, users normally interested outputs larger time scales. package provides summary objects class spwb. function can used summarize model’s output different temporal steps (.e. weekly, monthly annual). example, obtain average soil moisture water potentials months one can use: Parameter output used indicate element spwb object desire summaries. Similarly, possible calculate average stress three tree species months: case, summary function aggregates output species using LAI values weights.","code":"summary(fb_SWB, freq=\"months\",FUN=sum, output=\"WaterBalance\") ##                  PET Precipitation      Rain Snow     NetRain Snowmelt ## 2014-01-01  27.03414     205.04814 205.04814    0 182.5767907        0 ## 2014-02-01  37.11592     181.09641 181.09641    0 155.2573002        0 ## 2014-03-01  80.49737      44.61248  44.61248    0  39.8917051        0 ## 2014-04-01 109.24874      15.00000  15.00000    0   7.2713589        0 ## 2014-05-01 147.99639      21.60000  21.60000    0  16.3281633        0 ## 2014-06-01 167.27898      33.60000  33.60000    0  25.8839490        0 ## 2014-07-01 183.99299       0.60000   0.60000    0   0.1428946        0 ## 2014-08-01 159.66330      60.40000  60.40000    0  52.8025568        0 ## 2014-09-01 103.42793     137.60000 137.60000    0 125.8957242        0 ## 2014-10-01  63.53896      50.60000  50.60000    0  41.9066889        0 ## 2014-11-01  30.12083     222.60000 222.60000    0 198.0975096        0 ## 2014-12-01  26.01617      93.00000  93.00000    0  78.7534201        0 ##            Infiltration InfiltrationExcess SaturationExcess     Runoff ## 2014-01-01  182.5767907           0.000000        87.116317  87.116317 ## 2014-02-01  155.2573002           0.000000       122.048901 122.048901 ## 2014-03-01   39.8917051           0.000000         0.000000   0.000000 ## 2014-04-01    7.2713589           0.000000         0.000000   0.000000 ## 2014-05-01   16.3281633           0.000000         0.000000   0.000000 ## 2014-06-01   25.8839490           0.000000         0.000000   0.000000 ## 2014-07-01    0.1428946           0.000000         0.000000   0.000000 ## 2014-08-01   43.9898210           8.812736         0.000000   8.812736 ## 2014-09-01  100.4948078          25.400916         0.000000  25.400916 ## 2014-10-01   32.2992831           9.607406         0.000000   9.607406 ## 2014-11-01  149.6393970          48.458113         8.212942  56.671054 ## 2014-12-01   78.7534201           0.000000        54.503746  54.503746 ##            DeepDrainage CapillarityRise Evapotranspiration Interception ## 2014-01-01    27.432657               0           33.73921   22.4713498 ## 2014-02-01    40.147846               0           40.02366   25.8391081 ## 2014-03-01    44.449401               0           44.39967    4.7207713 ## 2014-04-01     2.867703               0           51.49958    7.7286411 ## 2014-05-01     0.000000               0           55.90473    5.2718367 ## 2014-06-01     0.000000               0           50.53558    7.7160510 ## 2014-07-01     0.000000               0           23.43666    0.4571054 ## 2014-08-01     0.000000               0           39.92677    7.5974432 ## 2014-09-01     0.000000               0           38.71355   11.7042748 ## 2014-10-01     0.000000               0           41.04089    8.6933111 ## 2014-11-01    35.574072               0           38.90302   24.5024904 ## 2014-12-01    44.449401               0           27.38614   14.2465799 ##            SoilEvaporation HerbTranspiration PlantExtraction Transpiration ## 2014-01-01       4.1363186                 0        7.131546      7.131546 ## 2014-02-01       2.8798650                 0       11.304684     11.304684 ## 2014-03-01       2.8217172                 0       36.857178     36.857178 ## 2014-04-01       0.3567898                 0       43.414147     43.414147 ## 2014-05-01       0.2000261                 0       50.432864     50.432864 ## 2014-06-01       0.1569014                 0       42.662627     42.662627 ## 2014-07-01       0.1052998                 0       22.874251     22.874251 ## 2014-08-01       0.2132681                 0       32.116058     32.116058 ## 2014-09-01       0.8481987                 0       26.161078     26.161078 ## 2014-10-01       2.7200330                 0       29.627549     29.627549 ## 2014-11-01       3.8386138                 0       10.561912     10.561912 ## 2014-12-01       3.1294909                 0       10.010071     10.010071 ##            HydraulicRedistribution ## 2014-01-01               0.3412870 ## 2014-02-01               0.3352251 ## 2014-03-01               0.7920407 ## 2014-04-01               1.5267602 ## 2014-05-01               3.8523798 ## 2014-06-01               4.9186083 ## 2014-07-01               2.0445190 ## 2014-08-01               7.9614182 ## 2014-09-01               9.0327593 ## 2014-10-01               4.5164515 ## 2014-11-01               0.5543355 ## 2014-12-01               0.5611216 summary(fb_SWB, freq=\"months\",FUN=mean, output=\"PlantStress\", bySpecies = TRUE) ##            Phillyrea latifolia Pinus halepensis Quercus ilex ## 2014-01-01         0.001135403     0.0001552878  0.007266096 ## 2014-02-01         0.002713689     0.0002222965  0.013319238 ## 2014-03-01         0.009680746     0.0017161233  0.038144092 ## 2014-04-01         0.019488738     0.0061754621  0.066839909 ## 2014-05-01         0.066797427     0.0791564831  0.148879190 ## 2014-06-01         0.240257012     0.3790124215  0.301822540 ## 2014-07-01         0.558094829     0.7417434832  0.519784833 ## 2014-08-01         0.435292021     0.5392242953  0.437623717 ## 2014-09-01         0.278844906     0.3759862958  0.282261945 ## 2014-10-01         0.027977375     0.0086868301  0.036444405 ## 2014-11-01         0.016813401     0.0031442296  0.011306849 ## 2014-12-01         0.011296577     0.0002641486  0.007637967"},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/FontBlanche.html","id":"bibliography","dir":"Articles > Workedexamples","previous_headings":"","what":"Bibliography","title":"Soil and plant water balances at Font-Blanche","text":"De Caceres M, Martin-StPaul N, Turco M, et al (2018) Estimating daily meteorological data downscaling climate models landscapes. Environ Model Softw 108:186–196. https://doi.org/10.1016/j.envsoft.2018.08.003 De Caceres M, Martinez-Vilalta J, Coll L, et al (2015) Coupling water balance model forest inventory data predict drought stress: role forest structural changes vs. climate changes. Agric Meteorol 213:77–90. https://doi.org/10.1016/j.agrformet.2015.06.012 Simioni G, Durand-gillmann M, Huc R, et al (2013) Asymmetric competition increases leaf inclination effect light absorption mixed canopies. Ann Sci 70:123–131. https://doi.org/10.1007/s13595-012-0246-8 Moreno, M., Simioni, G., Cailleret, M., Ruffault, J., Badel, E., Carrière, S., Davi, H., Gavinet, J., Huc, R., Limousin, J.-M., Marloie, O., Martin, L., Rodríguez-Calcerrada, J., Vennetier, M., Martin-StPaul, N., 2021. Consistently lower sap velocity growth nine years rainfall exclusion Mediterranean mixed pine-oak forest. Agric. . Meteorol. 308–309, 108472. https://doi.org/10.1016/j.agrformet.2021.108472","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/PlantWaterPools.html","id":"about-this-vignette","dir":"Articles > Workedexamples","previous_headings":"","what":"About this vignette","title":"Water pools and species interactions","text":"default, simulations medfate assume soil moisture plant cohorts (.e. water sources corresponding vertical soil layers shared among cohorts). Therefore, models neglect spatial variation soil moisture observed mixed forest stands (Schume et al. 2004). Variations soil moisture beneath plant cohorts (, implicitly, horizontal variation soil moisture) can simulated medfate required user (see control parameter rhizosphereOverlap). involves considering given plant cohort perform water uptake water pool surrounding roots, whereas may access water beneath plants. However, can exist degree horizontal overlap water pools exploited different plants. aim vignette illustrate sensitivity advanced water balance model (De Cáceres et al. 2021) consideration independent water pools.","code":""},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/PlantWaterPools.html","id":"simulations","dir":"Articles > Workedexamples","previous_headings":"","what":"Simulations","title":"Water pools and species interactions","text":"target forest stands take five experimental plots whose data already used presenting water balance model De Cáceres et al. (2021). evaluation model performance experimental plots given Stand-level evaluation. plots performed two simulations advanced water balance model (transpirationMode = \"Sperry\"), one using default assumption complete rhizosphere overlap (rhizosphereOverlap = \"total\") assuming complete independence water pools (rhizosphereOverlap = \"none\"). Recovery embolism assumed depend soil moisture (stemCavitationRecovery = \"rate\" leafCavitationRecovery = \"rate\"). performed burn-simulation available weather forest plot (1 3 years, depending plot), soil moisture, plant water potentials xylem percent loss conductance (PLC) equilibrated. burn-period, run model one year , simplify examination results.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/articles/workedexamples/PlantWaterPools.html","id":"bibliography","dir":"Articles > Workedexamples","previous_headings":"","what":"Bibliography","title":"Water pools and species interactions","text":"De Cáceres, M., M. Mencuccini, N. Martin-StPaul, J.-M. Limousin, L. Coll, R. Poyatos, . Cabon, V. Granda, . Forner, F. Valladares, J. Martínez-Vilalta. 2021. Unravelling effect species mixing water use drought stress Mediterranean forests: modelling approach. Agricultural Forest Meteorology 296:108233. Schume, H., G. Jost, H. Hager. 2004. Soil water depletion recharge patterns mixed pure forest stands European beech Norway spruce. Journal Hydrology 289:258–274.","code":""},{"path":"https://emf-creaf.github.io/medfate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miquel De Cáceres. Author, maintainer, copyright holder. Nicolas Martin-StPaul. Author. Víctor Granda. Author. Antoine Cabon. Author. Jordi Martínez-Vilalta. Contributor. Maurizio Mencuccini. Contributor. Julien Ruffault. Contributor. François Pimont. Contributor. Hervé Cochard. Contributor. Aitor Améztegui. Contributor. Shengli Huang. Contributor. Léa Veuillen. Contributor. John Burkardt. Copyright holder.           Copyright holder C++ code 'incgamma.cpp'","code":""},{"path":"https://emf-creaf.github.io/medfate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"De Cáceres M, Martínez-Vilalta J, Coll L, Llorens P, Casals P, Poyatos R, Pausas J, Brotons L (2015). “Coupling water balance model forest inventory data evaluate plant drought stress regional level.” Agricultural Forest Meteorology, 213, 77-90. doi:10.1016/j.agrformet.2015.06.012. De Cáceres M, Mencuccini M, Martin-StPaul N, Limousin J, Coll L, Poyatos R, Cabon , Granda V, Forner , Valladares F, Martínez-Vilalta J (2021). “Unravelling effect species mixing water use drought stress holm oak forests: modelling approach.” Agricultural Forest Meteorology, 296, 108233. doi:10.1016/j.agrformet.2020.108233. Ruffault J, Pimont F, Cochard H, Dupuy J, Nicolas M (2022). “SurEau-Ecos v2.0: trait-based plant hydraulics model simulations plant water status drought-induced mortality.” Geoscientific Model Development, 15, 5593–5626. doi:10.5194/gmd-15-5593-2022. De Cáceres M, Molowny-Horas R, Cabon , Martínez-Vilalta J, Mencuccini M, García-Valdés R, Nadal-Sala D, Sabaté S, Martin-StPaul N, Morin X, D'Adamo F, Batllori E, Ameztegui (2023). “MEDFATE 2.9.3: trait-enabled model simulate Mediterranean forest function dynamics regional scales.” Geoscientific Model Development, 16, 3165-2023. doi:10.5194/gmd-16-3165-2023.","code":"@Article{,   title = {Coupling a water balance model with forest inventory data to evaluate plant drought stress at the regional level},   author = {Miquel {De Cáceres} and Jordi Martínez-Vilalta and Lluís Coll and Pilar Llorens and Pere Casals and Rafael Poyatos and Juli Pausas and Lluís Brotons},   journal = {Agricultural and Forest Meteorology},   year = {2015},   volume = {213},   pages = {77-90},   doi = {10.1016/j.agrformet.2015.06.012}, } @Article{,   title = {Unravelling the effect of species mixing on water use and drought stress in holm oak forests: a modelling approach},   author = {Miquel {De Cáceres} and Maurizio Mencuccini and Nicolas Martin-StPaul and Jean-Marc Limousin and Lluís Coll and Rafael Poyatos and Antoine Cabon and Victor Granda and Alicia Forner and Fernando Valladares and Jordi Martínez-Vilalta},   journal = {Agricultural and Forest Meteorology},   year = {2021},   volume = {296},   pages = {108233},   doi = {10.1016/j.agrformet.2020.108233}, } @Article{,   title = {SurEau-Ecos v2.0: a trait-based plant hydraulics model for simulations of plant water status and drought-induced mortality},   author = {Julien Ruffault and François Pimont and Hervé Cochard and Jean-Luc Dupuy and Martin-StPaul Nicolas},   journal = {Geoscientific Model Development},   year = {2022},   volume = {15},   pages = {5593–5626},   doi = {10.5194/gmd-15-5593-2022}, } @Article{,   title = {MEDFATE 2.9.3: A trait-enabled model to simulate Mediterranean forest function and dynamics at regional scales},   author = {Miquel {De Cáceres} and Roberto Molowny-Horas and Antoine Cabon and Jordi Martínez-Vilalta and Maurizio Mencuccini and Raúl García-Valdés and Daniel Nadal-Sala and Santiago Sabaté and Nicolas Martin-StPaul and Xavier Morin and Francesco D'Adamo and Enric Batllori and Aitor Ameztegui},   journal = {Geoscientific Model Development},   year = {2023},   volume = {16},   pages = {3165-2023},   doi = {10.5194/gmd-16-3165-2023}, }"},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Mediterranean Forest Simulation","text":"Package medfate designed assist forest scientists simulate forest functioning dynamics, using cohort-based description forest stands. package provides functions simulate following processes: Soil water balance (De Cáceres et al. 2015) Plant hydraulics, transpiration photosynthesis (De Cáceres et al. 2021, Ruffault et al. 2022) Carbon balance, plant growth, senescence mortality (De Cáceres et al. 2023) Forest dynamics, including recruitment management (De Cáceres et al. 2023) models parameterized species Mediterranean region (particularly Spain), forests different composition modelled different parameter sets.","code":""},{"path":"https://emf-creaf.github.io/medfate/index.html","id":"package-installation--documentation","dir":"","previous_headings":"","what":"Package installation & documentation","title":"Mediterranean Forest Simulation","text":"Package medfate can found CRAN, updated every months. Installation CRAN can done via: Users can also download install latest stable versions GitHub follows (required package remotes installed/updated first): number vignettes illustrate run simulation models medfate. , additional articles regarding parameter estimation model evaluation can found package website. complete documentation models included package can found medfate’s reference book.","code":"install.packages(\"medfate\") remotes::install_github(\"emf-creaf/medfate\")"},{"path":"https://emf-creaf.github.io/medfate/index.html","id":"companion-r-packages","dir":"","previous_headings":"","what":"Companion R packages","title":"Mediterranean Forest Simulation","text":"development medfate functions originally placed moved specialized packages evolve together medfate: Package medfateland extends medfate allowing simulations performed spatially explicit context. Package traits4models provides functions help creating species parameter inputs medfate medfateland simulation functions. Two packages complete simulation framework, can used many purposes beyond forest modelling: Package meteoland allows generating daily weather input simulation models medfate medfateland. Package meteoland dependency medfate medfateland, can used independently obtain daily weather data. Package forestables allows reading harmonizing forest inventory data common data structure. Initialization workflows medfateland can use data forestables, data structures package can used many studies beyond modelling. relationships five packages illustrated figure , black arrows indicate package dependencies gray arrows indicate model parameter data provision.","code":""},{"path":"https://emf-creaf.github.io/medfate/index.html","id":"authorship","dir":"","previous_headings":"","what":"Authorship","title":"Mediterranean Forest Simulation","text":"Package medfate developed maintained Ecosystem Modelling Facility unit CREAF (Spain), close collaboration researchers URFM-INRAE (France) CTFC (Spain).","code":""},{"path":"https://emf-creaf.github.io/medfate/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Mediterranean Forest Simulation","text":"Fellowship: Ramon y Cajal research fellowship M. De Cáceres. Financial Entity: Ministerio de Economía y Competitividad ( RYC-2012-11109). Duration : 01/01/2013 : 31/12/2018. Research project: Forecasting ecosystem services forests: impacts adaptation extreme climate events (FORESTCAST). Financial Entity: Ministerio de Economia y Competitividad (CGL2014-59742-C2-2-R). Duration : 01/01/2015 : 31/12/2017. PI: Lluís Brotons/Miquel De Cáceres. Research project: Modeling plant water use drought resistance strategies across scales (DRESS). Financial Entity: Ministerio de Economia y Competitividad (CGL2017-89149-C2-2-R). Duration : 01/01/2018 : 31/12/2021. PI: Miquel De Cáceres. Research project: Boosting process-based models project forest dynamics associated ecosystem services stand--regional scales (BOMFORES). Financial Entity: Ministerio de Ciencia e Innovación (PID2021-126679OB-I00). Duration : 01/09/2022 : 31/08/2024. PI: Miquel De Cáceres. Research project: Improving modelling key forest dynamic processes forecast long-term changes Mediterranean forests climate change (IMPROMED). Financial Entity: Ministerio de Ciencia e Innovación (PID2023-152644NB-I00). Duration : 01/09/2024 : 31/08/2025. PI: Miquel De Cáceres/Josep Mª Espelta.","code":""},{"path":"https://emf-creaf.github.io/medfate/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Mediterranean Forest Simulation","text":"De Cáceres M, Martínez-Vilalta J, Coll L, Llorens P, Casals P, Poyatos R, Pausas JG, Brotons L. (2015) Coupling water balance model forest inventory data predict drought stress: role forest structural changes vs. climate changes. Agricultural Forest Meteorology 213: 77-90 (https://doi.org/10.1016/j.agrformet.2015.06.012). De Cáceres M, Mencuccini M, Martin-StPaul N, Limousin JM, Coll L, Poyatos R, Cabon , Granda V, Forner , Valladares F, Martínez-Vilalta J (2021) Unravelling effect species mixing water use drought stress holm oak forests: modelling approach. Agricultural Forest Meteorology 296 (https://doi.org/10.1016/j.agrformet.2020.108233). Ruffault J, Pimont F, Cochard H, Dupuy JL, Martin-StPaul N (2022) SurEau-Ecos v2.0: trait-based plant hydraulics model simulations plant water status drought-induced mortality ecosystem level. Geoscientific Model Development 15, 5593-5626 (https://doi.org/10.5194/gmd-15-5593-2022). De Cáceres M, Molowny-Horas R, Cabon , Martínez-Vilalta J, Mencuccini M, García-Valdés R, Nadal-Sala D, Sabaté S, Martin-StPaul N, Morin X, D’Adamo F, Batllori E, Améztegui (2023) MEDFATE 2.9.3: trait-enabled model simulate Mediterranean forest function dynamics regional scales. Geoscientific Model Development 16, 3165–3201 (https://doi.org/10.5194/gmd-16-3165-2023).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/SFM_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard fuel models (Albini 1976, Scott & Burgan 2005) — SFM_metric","title":"Standard fuel models (Albini 1976, Scott & Burgan 2005) — SFM_metric","text":"Standard fuel models converted metric system. Copied package 'Rothermel' (Giorgio Vacchiano, Davide Ascoli).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/SFM_metric.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard fuel models (Albini 1976, Scott & Burgan 2005) — SFM_metric","text":"data frame including standard fuel models Albini (1976) Scott Burgan (2005), used input fire_Rothermel function. values converted metric format. Fuel_Model_Type factor levels D (dynamic) S (static). Load_1h Loading 1h fuel class [t/ha]. Load_10h Loading 10h fuel class [t/ha]. Load_100h Loading 100h fuel class [t/ha] Load_Live_Herb Loading herbaceous fuels [t/ha] Load_Live_Woody Loading woody fuels [t/ha] SA/V_1h Surface area volume ratio 1h fuel class [m2/m3] SA/V_10h Surface area volume ratio 10h fuel class [m2/m3] SA/V_100h Surface area volume ratio 100h fuel class [m2/m3] SA/V_Live_Herb Surface area volume ratio herbaceous fuels [m2/m3] SA/V_Live_Woody Surface area volume ratio woody fuels [m2/m3] Fuel_Bed_Depth Fuel bed depth [cm] Mx_dead Dead fuel moisture extinction [percent] Heat_1h Heat content 1h fuel class [kJ/kg] Heat_10h Heat content 10h fuel class [kJ/kg] Heat_100h Heat content 100h fuel class [kJ/kg] Heat_Live_Herb Heat content herbaceous fuels [kJ/kg] Heat_Live_Woody Heat content woody fuels [kJ/kg]","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/SFM_metric.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Standard fuel models (Albini 1976, Scott & Burgan 2005) — SFM_metric","text":"Albini, F. . (1976). Computer-based models wildland fire behavior: users' manual. Ogden, UT: US Department Agriculture, Forest Service, Intermountain Forest Range Experiment Station. Scott, J., Burgan, R. E. (2005). new set standard fire behavior fuel models use Rothermel's surface fire spread model. Gen. Tech. Rep. RMRSGTR-153. Fort Collins, CO: US Department Agriculture, Forest Service, Rocky Mountain Research Station.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/SFM_metric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard fuel models (Albini 1976, Scott & Burgan 2005) — SFM_metric","text":"","code":"data(SFM_metric)"},{"path":"https://emf-creaf.github.io/medfate/reference/SpParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Data tables with species parameter definitions and values — SpParams","title":"Data tables with species parameter definitions and values — SpParams","text":"data sets species parameter definition values, latter resulting existing databases, fit empirical data expert-based guesses.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/SpParams.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data tables with species parameter definitions and values — SpParams","text":"Data frame SpParamsDefinition parameters rows columns 'ParameterName', 'ParameterGroup', 'Definition', 'Type' 'Units'. Data frames SpParamsMED species genus rows column names equal parameter names SpParamsDefinition.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/SpParams.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data tables with species parameter definitions and values — SpParams","text":"SpParamsMED official species parameter package versions v.4.0.0, maintained future. Additional species parameter tables different countries distributed via package [traits4models](https://emf-creaf.github.io/traits4models/).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/SpParams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data tables with species parameter definitions and values — SpParams","text":"","code":"data(SpParamsDefinition) data(SpParamsMED)"},{"path":"https://emf-creaf.github.io/medfate/reference/TaxonTraitMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter average values — Parameter means","title":"Parameter average values — Parameter means","text":"Internal data set parameter averages taxonomic families. used input initialization functions provide suitable parameter values missing species parameter tables.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/TaxonTraitMeans.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parameter average values — Parameter means","text":"Data frame trait_family_means taxonomic families rows parameter names columns.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/TaxonTraitMeans.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Parameter average values — Parameter means","text":"sources SpParamsMED","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/TaxonTraitMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter average values — Parameter means","text":"","code":"medfate::trait_family_means #>                    LeafDensity WoodDensity   LeafPI0   LeafEPS LeafAF    Gswmax #> Acanthaceae         0.29590033   0.5684693 -3.395000 23.230000 0.1270 0.2500000 #> Achariaceae         0.25524948   0.6052036        NA        NA     NA        NA #> Acoraceae           0.10000000          NA        NA        NA     NA        NA #> Actinidiaceae       0.44397760   0.4092320        NA        NA     NA        NA #> Adoxaceae           0.39161942   0.5157416 -1.560000 12.790000     NA        NA #> Aextoxicaceae               NA   0.5666667        NA        NA     NA        NA #> Aizoaceae           0.08241249          NA        NA        NA     NA        NA #> Akaniaceae                  NA   0.5547825        NA        NA     NA        NA #> Alismataceae        0.19142078          NA        NA        NA     NA        NA #> Alstroemeriaceae            NA          NA        NA        NA     NA        NA #> Altingiaceae        0.68339710   0.6010948        NA        NA     NA 0.5000000 #> Amaranthaceae       0.20458309   0.6315739 -2.250000        NA     NA 0.0750000 #> Amaryllidaceae      0.12207038          NA        NA        NA     NA        NA #> Amborellaceae               NA          NA        NA        NA     NA        NA #> Amphorogynaceae             NA   0.6097400        NA        NA     NA        NA #> Anacardiaceae       0.45680882   0.5685583 -1.700000 12.760000     NA 0.3148333 #> Anisophylleaceae            NA   0.6734780        NA        NA     NA        NA #> Annonaceae          0.37578113   0.5642062 -2.160000 23.710000     NA        NA #> Aphloiaceae         0.46270602   0.6205200        NA        NA     NA        NA #> Apiaceae            0.28747559   0.2561785        NA        NA     NA        NA #> Apocynaceae         0.29811485   0.5683635 -2.390000 20.940000     NA        NA #> Aptandraceae        0.33184918   0.7076756        NA        NA     NA        NA #> Aquifoliaceae       0.48126262   0.5579305 -2.300000 20.700000 0.4000 0.2600000 #> Araceae             0.16597459          NA        NA        NA     NA        NA #> Araliaceae          0.31188214   0.4142687 -1.528503 11.231462 0.4065        NA #> Araucariaceae       0.34479018   0.4641456        NA        NA     NA        NA #> Arecaceae           0.43935890   0.5913967 -3.400000 73.400000 0.2000        NA #> Aristolochiaceae    0.26814343   0.2900000        NA        NA     NA        NA #> Asparagaceae        0.14250995   0.4254258        NA        NA     NA        NA #> Asphodelaceae       0.55124717   0.3951990        NA        NA     NA        NA #> Aspleniaceae        0.26445566          NA -1.240000 35.300000     NA        NA #> Asteraceae          0.25110926   0.4822337 -1.471389 14.491429 0.2435 0.1275000 #> Asteropeiaceae              NA   0.7554862        NA        NA     NA        NA #> Atherospermataceae  0.24513566   0.4767621 -1.340000  8.380000     NA        NA #> Athyriaceae         0.22706154          NA        NA        NA     NA        NA #> Aulacomniaceae              NA          NA        NA        NA     NA        NA #> Austrobaileyaceae   0.26209917          NA        NA        NA     NA        NA #> Balanopaceae                NA   0.7348976        NA        NA     NA        NA #> Balsaminaceae       0.39480943          NA        NA        NA     NA        NA #> Begoniaceae         0.16267894          NA        NA        NA     NA        NA #> Berberidaceae       0.35994527   0.7028850        NA        NA     NA        NA #> Betulaceae          0.44465276   0.5381493 -1.246984  5.498667     NA 0.3965000 #> Bignoniaceae        0.35725900   0.6256030 -1.990000 17.610000 0.1770        NA #> Bixaceae            0.44000000   0.3546357        NA        NA     NA        NA #> Blechnaceae         0.31479929          NA        NA        NA     NA        NA #> Bonnetiaceae        0.27978289   0.8400000        NA        NA     NA        NA #> Boraginaceae        0.28504624   0.4987559 -1.140000        NA     NA        NA #> Brassicaceae        0.22676049   0.4516377 -1.485000  7.710000 0.2320        NA #> Bromeliaceae        0.16771395          NA        NA        NA     NA        NA #> Brunelliaceae               NA   0.3112500        NA        NA     NA        NA #> Bruniaceae                  NA   0.5636500        NA        NA     NA        NA #> Burseraceae         0.42267872   0.5205008 -1.435000 14.980000     NA        NA #> Butomaceae                  NA          NA        NA        NA     NA        NA #> Buxaceae            0.27062945   0.7314511        NA        NA     NA        NA #> Cabombaceae                 NA          NA        NA        NA     NA        NA #> Cactaceae           0.18193720   0.6187500        NA  8.700000     NA        NA #> Calophyllaceae      0.40650924   0.6067855        NA        NA     NA 0.1350000 #> Calycanthaceae      0.32040734   0.6500550        NA        NA     NA        NA #> Calyceraceae        0.16893665          NA        NA        NA     NA        NA #> Campanulaceae       0.23963177          NA        NA        NA     NA        NA #> Canellaceae                 NA   0.6808255        NA        NA     NA        NA #> Cannabaceae         0.35297198   0.5502170 -1.580000  5.180000     NA 0.3300000 #>                          Gswmin     Nleaf  Nsapwood Nfineroot     WoodC #> Acanthaceae                  NA 27.122403        NA  5.580000 0.4242167 #> Achariaceae                  NA 22.162815        NA        NA        NA #> Acoraceae                    NA 18.000000        NA        NA        NA #> Actinidiaceae                NA 20.183321        NA        NA        NA #> Adoxaceae                    NA 20.566364        NA 11.013750        NA #> Aextoxicaceae                NA  9.621429        NA        NA        NA #> Aizoaceae                    NA 14.800000        NA        NA        NA #> Akaniaceae                   NA        NA        NA        NA        NA #> Alismataceae                 NA 27.287834        NA        NA        NA #> Alstroemeriaceae             NA 19.402857        NA        NA        NA #> Altingiaceae                 NA 15.462547        NA  7.550000 0.4435000 #> Amaranthaceae                NA 23.740694        NA 12.411441 0.4197662 #> Amaryllidaceae     1.804000e-02 28.734076        NA 11.440000 0.4508400 #> Amborellaceae                NA        NA        NA        NA        NA #> Amphorogynaceae              NA 25.236766        NA        NA        NA #> Anacardiaceae      1.222994e-02 17.914439        NA 10.539736 0.4566867 #> Anisophylleaceae             NA        NA        NA        NA        NA #> Annonaceae                   NA 23.593695        NA 23.830391 0.4726000 #> Aphloiaceae                  NA        NA        NA        NA        NA #> Apiaceae           1.587302e-03 24.746891        NA 10.787434 0.4413076 #> Apocynaceae                  NA 21.754119        NA 16.845574 0.4924750 #> Aptandraceae                 NA 28.435524        NA        NA        NA #> Aquifoliaceae      5.740000e-04 14.645818        NA 14.324450 0.4400000 #> Araceae                      NA 22.255347        NA        NA        NA #> Araliaceae         3.902458e-04 18.093569        NA 20.500000 0.4540667 #> Araucariaceae      1.878580e-03 12.622035        NA 13.000000        NA #> Arecaceae          4.500000e-04 18.349681        NA 13.216667 0.4556000 #> Aristolochiaceae   3.589556e-03 31.726525        NA        NA        NA #> Asparagaceae                 NA 22.875870        NA        NA 0.4631000 #> Asphodelaceae                NA 12.352222        NA        NA        NA #> Aspleniaceae       8.200000e-03 28.260000        NA        NA        NA #> Asteraceae         1.052882e-02 22.036543        NA  9.346060 0.4375956 #> Asteropeiaceae               NA        NA        NA        NA        NA #> Atherospermataceae           NA 17.869722        NA 23.200000        NA #> Athyriaceae                  NA 26.901037        NA        NA        NA #> Aulacomniaceae               NA  8.000000        NA        NA        NA #> Austrobaileyaceae            NA        NA        NA        NA        NA #> Balanopaceae                 NA        NA        NA        NA        NA #> Balsaminaceae      1.265730e-02 36.003950        NA        NA        NA #> Begoniaceae                  NA 34.200000        NA        NA        NA #> Berberidaceae      1.650000e-03 17.997372        NA 21.087500        NA #> Betulaceae         2.973057e-03 24.194029 14.505150 13.430951 0.4721962 #> Bignoniaceae                 NA 23.830902  6.575973 19.915047 0.4618077 #> Bixaceae                     NA 25.531043        NA        NA        NA #> Blechnaceae                  NA 11.749051        NA        NA        NA #> Bonnetiaceae                 NA  9.800000        NA        NA        NA #> Boraginaceae       5.740212e-03 23.032555        NA        NA 0.4153500 #> Brassicaceae       1.066000e-02 34.316821        NA 18.501306 0.4274775 #> Bromeliaceae                 NA  9.559591        NA        NA        NA #> Brunelliaceae                NA 21.006960        NA        NA        NA #> Bruniaceae                   NA  7.781667        NA        NA        NA #> Burseraceae                  NA 19.028712        NA 10.964427 0.4548544 #> Butomaceae                   NA 42.600000        NA        NA        NA #> Buxaceae                     NA 22.691830        NA        NA        NA #> Cabombaceae                  NA 19.500000        NA        NA        NA #> Cactaceae          2.433862e-05 16.988641        NA        NA        NA #> Calophyllaceae               NA 12.424790        NA        NA 0.4663000 #> Calycanthaceae               NA 17.400000        NA        NA        NA #> Calyceraceae                 NA 43.000000        NA        NA        NA #> Campanulaceae                NA 27.682767        NA  5.721013 0.4498475 #> Canellaceae                  NA        NA        NA        NA        NA #> Cannabaceae                  NA 28.941055        NA        NA 0.4683583 #>                    Kmax_stemxylem       WUE        P50       Al2As #> Acanthaceae                    NA        NA         NA  3070.43202 #> Achariaceae                    NA  3.662630         NA          NA #> Acoraceae                      NA        NA         NA          NA #> Actinidiaceae                  NA        NA         NA          NA #> Adoxaceae              4.05355750  3.117284 -3.0384833  4889.57295 #> Aextoxicaceae                  NA        NA         NA          NA #> Aizoaceae                      NA        NA         NA          NA #> Akaniaceae                     NA        NA         NA          NA #> Alismataceae                   NA        NA         NA          NA #> Alstroemeriaceae               NA        NA         NA          NA #> Altingiaceae           0.50500000        NA -2.0370147  5129.90090 #> Amaranthaceae          0.08190000 13.478385 -2.4252402   973.13500 #> Amaryllidaceae                 NA 15.949005         NA          NA #> Amborellaceae          0.54000000        NA -3.0000000  4255.31915 #> Amphorogynaceae                NA        NA         NA          NA #> Anacardiaceae          4.07720162  2.339255 -2.6535235 19581.70525 #> Anisophylleaceae               NA        NA         NA          NA #> Annonaceae             5.27066667        NA -2.5276068 10266.65654 #> Aphloiaceae                    NA        NA         NA          NA #> Apiaceae               0.51500000  3.099757 -5.7000000    81.15013 #> Apocynaceae            2.56516667  9.082218 -2.4864334 19766.80134 #> Aptandraceae                   NA        NA         NA          NA #> Aquifoliaceae          0.22557572        NA -3.6437782  4886.36183 #> Araceae                        NA        NA         NA          NA #> Araliaceae             1.68090114        NA -1.6530859  3928.39877 #> Araucariaceae          0.73225000        NA -2.6183226  3846.15385 #> Arecaceae                      NA  3.962648 -1.8100000  5492.53731 #> Aristolochiaceae               NA        NA         NA          NA #> Asparagaceae                   NA 13.248101 -1.6960000          NA #> Asphodelaceae                  NA        NA         NA          NA #> Aspleniaceae                   NA        NA         NA          NA #> Asteraceae             0.49865714  3.724090 -3.2565860  2421.76507 #> Asteropeiaceae                 NA        NA         NA          NA #> Atherospermataceae             NA        NA -3.0063333  2435.95630 #> Athyriaceae                    NA        NA         NA          NA #> Aulacomniaceae                 NA        NA         NA          NA #> Austrobaileyaceae      2.30000000        NA -0.4990000 15384.61538 #> Balanopaceae                   NA        NA         NA          NA #> Balsaminaceae                  NA  2.842391         NA          NA #> Begoniaceae                    NA        NA         NA          NA #> Berberidaceae          0.08733333  4.039735 -4.5000000   570.06271 #> Betulaceae             2.87333740        NA -2.1017591  6158.73417 #> Bignoniaceae           2.10149000        NA -0.8616667 12439.80827 #> Bixaceae                       NA        NA         NA 12274.01424 #> Blechnaceae                    NA        NA         NA          NA #> Bonnetiaceae                   NA        NA         NA          NA #> Boraginaceae                   NA  2.819216 -3.5677066          NA #> Brassicaceae                   NA  3.632075         NA          NA #> Bromeliaceae                   NA        NA         NA          NA #> Brunelliaceae                  NA        NA         NA          NA #> Bruniaceae             0.25150000        NA -3.3883558          NA #> Burseraceae            3.40500000  4.390857 -1.3054970 12218.54705 #> Butomaceae                     NA        NA         NA          NA #> Buxaceae                       NA        NA -8.0000000          NA #> Cabombaceae                    NA        NA         NA          NA #> Cactaceae              1.86880952        NA -1.2875000  2554.61304 #> Calophyllaceae         0.89828571        NA -1.5400000  2662.52127 #> Calycanthaceae                 NA        NA -1.2808475          NA #> Calyceraceae                   NA        NA         NA          NA #> Campanulaceae                  NA  4.790244         NA          NA #> Canellaceae                    NA        NA -0.2320000          NA #> Cannabaceae            4.33961052        NA -1.5325304 29406.04715 #>                    conduit2sapwood #> Acanthaceae              0.6300000 #> Achariaceae                     NA #> Acoraceae                       NA #> Actinidiaceae                   NA #> Adoxaceae                       NA #> Aextoxicaceae                   NA #> Aizoaceae                       NA #> Akaniaceae                      NA #> Alismataceae                    NA #> Alstroemeriaceae                NA #> Altingiaceae             0.8226667 #> Amaranthaceae                   NA #> Amaryllidaceae                  NA #> Amborellaceae                   NA #> Amphorogynaceae                 NA #> Anacardiaceae            0.7155889 #> Anisophylleaceae                NA #> Annonaceae               0.5685000 #> Aphloiaceae                     NA #> Apiaceae                        NA #> Apocynaceae              0.7112500 #> Aptandraceae                    NA #> Aquifoliaceae            0.6528500 #> Araceae                         NA #> Araliaceae               0.7785000 #> Araucariaceae            0.9375000 #> Arecaceae                       NA #> Aristolochiaceae                NA #> Asparagaceae                    NA #> Asphodelaceae                   NA #> Aspleniaceae                    NA #> Asteraceae               0.7219423 #> Asteropeiaceae                  NA #> Atherospermataceae       0.7560000 #> Athyriaceae                     NA #> Aulacomniaceae                  NA #> Austrobaileyaceae               NA #> Balanopaceae                    NA #> Balsaminaceae                   NA #> Begoniaceae                     NA #> Berberidaceae                   NA #> Betulaceae               0.8444000 #> Bignoniaceae             0.6360476 #> Bixaceae                        NA #> Blechnaceae                     NA #> Bonnetiaceae                    NA #> Boraginaceae                    NA #> Brassicaceae                    NA #> Bromeliaceae                    NA #> Brunelliaceae                   NA #> Bruniaceae                      NA #> Burseraceae              0.8204286 #> Butomaceae                      NA #> Buxaceae                 0.8330000 #> Cabombaceae                     NA #> Cactaceae                0.3636905 #> Calophyllaceae           0.7335000 #> Calycanthaceae           0.6535500 #> Calyceraceae                    NA #> Campanulaceae                   NA #> Canellaceae                     NA #> Cannabaceae              0.7598125 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 317 rows ]"},{"path":"https://emf-creaf.github.io/medfate/reference/aspwb.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation in agricultural areas — aspwbInput","title":"Simulation in agricultural areas — aspwbInput","text":"Function aspwb_day performs water balance single day agriculture location. Function aspwb performs water balance multiple days agriculture location.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/aspwb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation in agricultural areas — aspwbInput","text":"","code":"aspwbInput(crop_factor, control, soil)  aspwb_day(   x,   date,   meteovec,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   runon = 0,   lateralFlows = NULL,   waterTableDepth = NA_real_,   modifyInput = TRUE )  aspwb(   x,   meteo,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   waterTableDepth = NA_real_ )"},{"path":"https://emf-creaf.github.io/medfate/reference/aspwb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation in agricultural areas — aspwbInput","text":"crop_factor Agriculture crop factor. control list default control parameters (see defaultControl). soil object class data.frame soil. x object class aspwbInput. date Date string \"yyyy-mm-dd\". meteovec named numerical vector weather data. See variable names parameter meteo spwb. latitude Latitude (degrees). elevation, slope, aspect Elevation sea level (m), slope (degrees) aspect (degrees North). runon Surface water amount running target area upslope (mm). lateralFlows Lateral source/sink terms soil layer (interflow/adjacent locations) mm/day. waterTableDepth Water table depth (mm). missing, capillarity rise allowed lower total soil depth. modifyInput Boolean flag indicate input x object allowed modified simulation. meteo data frame daily meteorological data series (see spwb).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/aspwb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulation in agricultural areas — aspwbInput","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/aspwb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation in agricultural areas — aspwbInput","text":"","code":"control <- defaultControl() examplesoil <- defaultSoilParams(4)  x <- aspwbInput(0.75, control, examplesoil)  # Day to be simulated d <- 100 meteovec <- unlist(examplemeteo[d,-1]) date <- as.character(examplemeteo$dates[d])  #Call simulation function for a single days sd <- aspwb_day(x, date, meteovec,                  latitude = 41.82592, elevation = 100)   #Call simulation function for multiple days S <- aspwb(x, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial soil water content (mm): 287.448 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  [Year 2001]:.................................... #>  #> Final soil water content (mm): 244.902 #> Final snowpack content (mm): 0 #> Change in soil water content (mm): -42.5459 #> Soil water balance result (mm): -42.5459 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): 0 #> Water balance components: #>   Precipitation (mm) 513 #>   Rain (mm) 462 Snow (mm) 51 #>   Infiltration (mm) 507 Infiltration excess (mm) 6 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 4 Transpiration (mm) 446 #>   Runoff (mm) 6 Deep drainage (mm) 100"},{"path":"https://emf-creaf.github.io/medfate/reference/biophysics.html","id":null,"dir":"Reference","previous_headings":"","what":"Physical and biophysical utility functions — biophysics","title":"Physical and biophysical utility functions — biophysics","text":"Internal utility functions calculation biophysical variables.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/biophysics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Physical and biophysical utility functions — biophysics","text":"","code":"biophysics_radiationDiurnalPattern(t, daylength)  biophysics_temperatureDiurnalPattern(   t,   tmin,   tmax,   tminPrev,   tmaxPrev,   tminNext,   daylength )  biophysics_leafTemperature(absRad, airTemperature, u, E, leafWidth = 1)  biophysics_leafTemperature2(   SWRabs,   LWRnet,   airTemperature,   u,   E,   leafWidth = 1 )  biophysics_leafVapourPressure(leafTemp, leafPsi)  biophysics_irradianceToPhotonFlux(I, lambda = 546.6507)  biophysics_waterDynamicViscosity(temp)"},{"path":"https://emf-creaf.github.io/medfate/reference/biophysics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Physical and biophysical utility functions — biophysics","text":"t Time day (seconds). daylength Day length (seconds). tmin, tmax Minimum maximum daily temperature (ºC). tminPrev, tmaxPrev, tminNext Maximum minimum daily temperatures previous following day (ºC). absRad Absorbed long- short-wave radiation (W·m-2). airTemperature Air temperature (ºC). u Wind speed leaf boundary layer (m/s). E Transpiration flow (mmol H20·m-2·s-1) per one sided leaf area basis. leafWidth Leaf width (cm). SWRabs Absorbed short-wave radiation (W·m-2). LWRnet Net long-wave radiation balance (W·m-2). leafTemp Leaf temperature (ºC). leafPsi Leaf water potential (MPa). Irradiance (W*m-2). lambda Wavelength (nm). temp Temperature (ºC).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/biophysics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Physical and biophysical utility functions — biophysics","text":"Values returned function : biophysics_leafTemperature biophysics_leafTemperature2: leaf temperature (ºC) biophysics_leafVapourPressure: leaf vapour pressure (kPa) biophysics_radiationDiurnalPattern: proportion daily radiation corresponding input time seconds sunrise. biophysics_temperatureDiurnalPattern: diurnal pattern temperature. biophysics_waterDynamicViscosity: Water dynamic viscosity relative 20ºC.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/biophysics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Physical and biophysical utility functions — biophysics","text":"Functions biophysics_leafTemperature biophysics_leafTemperature2 calculate leaf temperature according energy balance equation given Campbell Norman (1988). Function biophysics_radiationDiurnalPattern follows equations given Liu Jordan (1960). Function biophysics_temperatureDiurnalPattern determines diurnal temperature pattern assuming sinusoidal pattern T = Tmin sunrise T = (Tmin+Tmax)/2 sunset linear change temperature sunset Tmin day (McMurtrie et al. 1990). Function biophysics_waterDynamicViscosity calculates water dynamic viscosity following Vogel (1921) equation.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/biophysics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Physical and biophysical utility functions — biophysics","text":"Campbell, G. S., J. M. Norman. 1998. introduction environmental biophysics: 2nd edition. (eqns. 14.1 & 14.3) B. Y. H. Liu R. C. Jordan, “interrelationship characteristic distribution direct, diffuse total solar radiation,” Solar Energy, vol. 4, . 3, pp. 1–19, 1960. McMurtrie, R. E., D. . Rook, F. M. Kelliher. 1990. Modelling yield Pinus radiata site limited water nitrogen. Forest Ecology Management 30:381–413. H. Vogel, \"Das Temperaturabhangigkeitsgesetz der Viskositat von Flussigkeiten\", Physikalische Zeitschrift, vol. 22, pp. 645–646, 1921.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/biophysics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Physical and biophysical utility functions — biophysics","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/carbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Carbon-related functions — carbon","title":"Carbon-related functions — carbon","text":"Low-level functions used calculation carbon balance.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/carbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carbon-related functions — carbon","text":"","code":"carbon_sugarStarchDynamicsLeaf(sugarConc, starchConc, eqSugarConc)  carbon_sugarStarchDynamicsStem(sugarConc, starchConc, eqSugarConc)  carbon_osmoticWaterPotential(sugarConc, temp, nonSugarConc)  carbon_sugarConcentration(osmoticWP, temp, nonSugarConc)  carbon_relativeSapViscosity(sugarConc, temp)  carbon_leafStructuralBiomass(LAI, N, SLA)  carbon_leafStarchCapacity(LAI, N, SLA, leafDensity)  carbon_sapwoodStructuralBiomass(SA, H, L, V, woodDensity)  carbon_sapwoodStructuralLivingBiomass(   SA,   H,   L,   V,   woodDensity,   conduit2sapwood )  carbon_sapwoodStarchCapacity(SA, H, L, V, woodDensity, conduit2sapwood)  carbon_carbonCompartments(x, biomassUnits = \"g_m2\")"},{"path":"https://emf-creaf.github.io/medfate/reference/carbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Carbon-related functions — carbon","text":"sugarConc Concentration soluble sugars (mol/l). starchConc Concentration starch (mol/l) eqSugarConc Equilibrium concentration soluble sugars (mol/l). temp Temperature (degrees Celsius). nonSugarConc Concentration inorganic solutes (mol/l). osmoticWP Osmotic water potential (MPa). LAI Leaf area index. N Density (ind·ha-1). SLA Specific leaf area (mm2/mg = m2/kg). leafDensity Density leaf tissue (dry weight volume). SA Sapwood area (cm2). H Plant height (cm). L Coarse root length (mm) soil layer. V Proportion fine roots soil layer. woodDensity Wood density (dry weight volume). conduit2sapwood Proportion sapwood corresponding conducive elements (vessels tracheids) opposed parenchymatic tissue. x object class growthInput. biomassUnits string output biomass units, either \"g_ind\" (g per individual) \"g_m2\" (g per square meter).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/carbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Carbon-related functions — carbon","text":"Values returned function : carbon_leafStarchCapacity: Capacity storing starch leaf compartment (mol gluc/ind.). carbon_leafStructuralBiomass: Leaf structural biomass (g dry/ind.) carbon_sapwoodStarchCapacity: Capacity storing starch sapwood compartment (mol gluc/ind.). carbon_sapwoodStructuralBiomass: Sapwood structural biomass (g dry/ind.) carbon_sapwoodStructuralLivingBiomass: Living sapwood (parenchyma) structural biomass (g dry/ind.) carbon_sugarConcentration: Sugar concentration (mol gluc/l) carbon_osmoticWaterPotential: Osmotic component water potential (MPa) carbon_relativeSapViscosity: Relative viscosity sapwood respect pure water (according Forst et al. (2002)). carbon_sugarStarchDynamicsLeaf: Rate conversion sugar starch leaf (mol gluc/l/s). carbon_sugarStarchDynamicsStem: Rate conversion sugar starch leaf (mol gluc/l/s). carbon_carbonCompartments: data frame size compartments plant cohort, specified units.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/carbon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Carbon-related functions — carbon","text":"Forst P, Wermer F, Delgado (2002). pressure dependence viscosity aqueous sugar solutions. Rheol Acta 41: 369–374 DOI 10.1007/s00397-002-0238-y","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/carbon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Carbon-related functions — carbon","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/communication.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal communication — aspwb_day_inner","title":"Internal communication — aspwb_day_inner","text":"Functions internal communication. called users.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/communication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal communication — aspwb_day_inner","text":"","code":"aspwb_day_inner(   internalCommunication,   x,   date,   meteovec,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   runon = 0,   lateralFlows = NULL,   waterTableDepth = NA_real_,   modifyInput = TRUE )  copy_model_output(internalCommunication, x, model)  general_communication_structures(   numCohorts,   nlayers,   ncanlayers,   ntimesteps,   model )  instance_communication_structures(x, model)  growth_day_inner(   internalCommunication,   x,   date,   meteovec,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   runon = 0,   lateralFlows = NULL,   waterTableDepth = NA_real_,   modifyInput = TRUE )  spwb_day_inner(   internalCommunication,   x,   date,   meteovec,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   runon = 0,   lateralFlows = NULL,   waterTableDepth = NA_real_,   modifyInput = TRUE )"},{"path":"https://emf-creaf.github.io/medfate/reference/communication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal communication — aspwb_day_inner","text":"internalCommunication List internal communication. x object class spwbInput growthInput. date Date string \"yyyy-mm-dd\". meteovec named numerical vector weather data. See variable names parameter meteo spwb. latitude Latitude (degrees). elevation, slope, aspect Elevation sea level (m), slope (degrees) aspect (degrees North). runon Surface water amount running target area upslope (mm). lateralFlows Lateral source/sink terms soil layer (interflow/adjacent locations) mm/day. waterTableDepth Water table depth (mm). missing, capillarity rise allowed lower total soil depth. modifyInput Boolean flag indicate input x object allowed modified simulation. model String model, either \"spwb\" \"growth\".","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultControl.html","id":null,"dir":"Reference","previous_headings":"","what":"Control parameters for simulation models — defaultControl","title":"Control parameters for simulation models — defaultControl","text":"Creates list control parameters default values simulations","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control parameters for simulation models — defaultControl","text":"","code":"defaultControl(transpirationMode = \"Granier\", soilDomains = \"buckets\")"},{"path":"https://emf-creaf.github.io/medfate/reference/defaultControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control parameters for simulation models — defaultControl","text":"transpirationMode Transpiration model (either 'Granier', 'Sperry' 'Sureau'). See spwbInput. soilDomains Soil hydrology model (either 'buckets', 'single' 'dual'). See hydrology_soilWaterBalance.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultControl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control parameters for simulation models — defaultControl","text":"list, following options (default values brackets): General: verbose [= TRUE]: Boolean flag indicate console output calculations. function fordyn verbose always set FALSE. fillMissingRootParams [= TRUE]: Boolean flag indicate initializing functions provide estimates Z50 Z95 missing forest data. Note fillMissingRootParams set FALSE simulations may fail user provide values Z50 Z95 tree shrub data. fillMissingSpParams [= TRUE]: Boolean flag indicate initializing functions provide estimates functional parameters missing species parameter table SpParams. Note fillMissingSpParams set FALSE simulations may fail user provide values required parameters. fillMissingWithGenusParams [=TRUE]: Boolean flag indicate initializing functions provide estimates genus value, species-level values missing species parameter table SpParams genus-level ones . standResults [= TRUE]: Boolean flag keep stand-level results (data frame called 'Stand'). soilResults [= TRUE]: Boolean flag keep soil-level results (list called 'Soil'). snowResults [= TRUE]: Boolean flag keep snow results (data frame called 'Snow'). plantResults [= TRUE]: Boolean flag keep plant-level water/energy/photosynthesis results (list called 'Plants'). labileCarbonBalanceResults [= TRUE]: Boolean flag keep plant-level labile carbon balance results (list called 'LabileCarbonBalance'). plantStructureResults [= TRUE]: Boolean flag keep plant-level structure results (list called 'PlantStructure'). growthMortalityResults [= TRUE]: Boolean flag keep plant-level growth mortality results (list called 'GrowthMortality'). leafResults [= TRUE]: Boolean flag keep leaf-level results (elements called 'SunlitLeaves' 'ShadeLeaves'). temperatureResults [= TRUE]: Boolean flag keep temperature results (elements called 'Temperature' 'TemperatureLayers'). subdailyResults [= FALSE]: Boolean flag force subdaily results stored (list called 'subdaily' spwb_day objects, one simulated date) calls spwb. function fordyn subdailyResults always set FALSE. fireHazardResults [= FALSE]: Boolean flag force calculation daily fire hazard. fireHazardStandardWind [= NA]: Wind speed (m/s) fire-hazard estimation. missing, actual wind-speed used. fireHazardStandardDFMC [= NA]: Dead fuel moisture content fire-hazard estimation. missing, estimation current weather used. Water balance (functions spwb, pwb spwb_day): transpirationMode [= \"Granier\"]: Transpiration model (either 'Granier', 'Sperry' 'Sureau'). See spwbInput. soilFunctions [= \"VG\"]: Soil water retention curve conductivity functions, either 'SX' (Saxton) 'VG' (Van Genuchten).                  transpirationMode 'Sperry' 'Sureau' soilFunctions forced 'VG'.                  simulations 'Granier' allowed use Saxton functions. VG_PTF: String indicating pedotransfer functions van Genuchten parameters (either 'Toth' 'Carsel'). ndailysteps [= 24]: Number steps day divided determination soil water balance, stomatal conductance, transpiration photosynthesis (24 equals 1-hour intervals). max_nsubsteps_soil [= 300]: Maximum number substeps soil water balance solving. defaultWindSpeed [= 2.5]: Default wind speed value (m/s) used missing data. defaultCO2 [= 386]: Default atmospheric (abovecanopy) CO2 concentration (micromol·mol-1 = ppm). value used whenever CO2 concentration specified weather input. defaultRainfallIntensityPerMonth [= c(1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 5.6, 5.6, 5.6, 5.6, 5.6, 1.5)]: vector twelve values indicating rainfall intensity (mm/h) per month.       default synoptic storms (1.5 mm/h) assumed December June, convective storms (5.6 mm/h) assumed July November. leafPhenology [= TRUE]: Boolean flag indicate simulation leaf phenology winter-deciduous species. bareSoilEvaporation [= TRUE]: Boolean flag indicate simulation evaporation bare soil. unlimitedSoilWater [= FALSE]: Boolean flag indicate simulation plant transpiration assuming soil water always field capacity. unfoldingDD [= 300]: Degree-days complete leaf unfolding budburst occurred. interceptionMode [= \"Gash1995\"]: Infiltration model, either \"Gash1995\" \"Liu2001\". infiltrationMode [= \"GreenAmpt1911\"]: Infiltration model, either \"GreenAmpt1911\" \"Boughton1989\". infiltrationCorrection [= 5.0]: Factor correct infiltration amount GreenAmpt1911 model single-domain simulations. soilDomains [= \"buckets\"]: Either 'buckets' (multi-bucket model), 'single' (single-domain Richards model) 'dual' (dual-permeability model). See hydrology_soilWaterBalance. rhizosphereOverlap [= \"total\"]: string indicating degree rhizosphere spatial overlap plant cohorts: \"none\" - overlap (independent water pools). \"partial\" - partial overlap determined coarse root volume. \"total\" - total overlap (plants extract common soil pools). verticalLayerSize [= 100]: Size vertical layers (cm) calculation light extinction (photosynthesis). windMeasurementHeight [= 200]: Height (cm) canopy corresponding wind measurements. segmentedXylemVulnerability [= TRUE/FALSE]: FALSE leaf root vulnerability curves equal stem. default, segmentedXylemVulnerability = TRUE transpirationMode = \"Sperry\" segmentedXylemVulnerability = FALSE transpirationMode = \"Sureau\". leafCavitationEffects, stemCavitationEffects [= FALSE/TRUE]: flag indicating whether cavitation effects conductance leaves stem applied. relevant transpirationMode = \"Sperry\". leafCavitationRecovery, stemCavitationRecovery [= \"annual\"]: string indicating recovery previous cavitation leaf/stem xylem done (relevant functions spwb spwb_day): \"none\" - recovery. \"annual\" - every first day year. \"rate\" - following rate new leaf sapwood formation. \"total\" - instantaneous complete recovery. cavitationRecoveryMaximumRate [= 0.05]: Maximum rate daily refilling embolized conduits sapwood area per leaf area (cm2·m-2·day-1). lfmcComponent [= \"fine\"]: Plant component used estimate LFMC, either \"leaf\" \"fine\" (fine fuel). Water balance (functions spwb, pwb spwb_day traspirationMode = \"Granier\" ): hydraulicRedistributionFraction [= 0.1]: Fraction plant transpiration corresponding hydraulic redistribution. Water balance (functions spwb, pwb spwb_day traspirationMode = \"Sperry\" traspirationMode = \"Sureau\"): nsubsteps_canopy [= 3600]: Number substeps step divided multi-layer canopy energy balance solving. multiLayerBalance [= FALSE]: Flag indicate multiple canopy energy balance. FALSE, canopy considered single layer energy balance. sapFluidityVariation [= TRUE]: Flag indicate temperature affects sap fluidity (indirectly plant conductance). TPhase_gmin [= 37.5]: Temperature transition phase gmin. Q10_1_gmin [= 1.2]: Temperature dependance gmin T less equal TPhase. Q10_2_gmin [= 4.8]: Temperature dependance gmin T greater TPhase. taper [= TRUE]: Whether taper xylem conduits accounted calculating aboveground stem conductance xylem conductivity. thermalCapacityLAI [= 1000000]: Thermal canopy capacitance per LAI unit. rootRadialConductance [= 4]: Radial conductance roots (mmol·s-1·m-2·MPa-1). averageFracRhizosphereResistance [= 0.15]: Fraction total continuum (leaf+stem+root+rhizosphere) resistance corresponds rhizosphere (averaged across soil water potential values). boundaryLayerSize [= 2000]: Size boundary layer (cm) canopy (relevant multi-layer canopy energy balance). Water balance (functions spwb, pwb spwb_day traspirationMode = \"Sperry\" ): numericParams: list following elements: maxNsteps [= 400]: Maximum number steps supply function. ntrial [= 200]: Number iteration trials finding root equation system. psiTol [= 0.0001]: Tolerance value water potential. ETol [= 0.0001]: Tolerance value flow. Water balance (functions spwb, pwb spwb_day traspirationMode = \"Sureau\" ): plantCapacitance [= TRUE]: Whether effect (symplasmic) plant water compartments considered simulations. cavitationFlux [= TRUE]: Whether effect water flux generated cavitation apoplasmic tissues considered simulations. soilDisconnection [= FALSE]: Whether ability plants physically disconnect root system soil considered simulations. leafCuticularTranspiration [= TRUE]: Whether effect leaf cuticular transpiration considered simulations. stemCuticularTranspiration [= FALSE]: Whether effect stem cuticular transpiration considered simulations. C_SApoInit [= 2.0e-5]: Maximum capacitance stem apoplasm (mmol·m-2). C_LApoInit [= 1.0e-5]: Maximum capacitance leaf apoplasm (mmol·m-2). k_SSym [= 0.26]: Conductance stem apoplasm stem symplasm (mmol·s-1·m-2·MPa-1). fractionLeafSymplasm [= 0.5]: Fraction leaf resistance leaf apoplasm leaf symplasm ([0-1]). gs_NightFrac [= 0.05]: Stomatal conductance night fraction maximum stomatal conductance ([0-1]). stomatalSubmodel [= \"Baldocchi\"]: Stomatal regulation sub-model, either \"Jarvis\" \"Baldocchi\". JarvisPAR [= 0.003]: Parameter regulating response stomatal conductance light (PAR) Jarvis model. fTRBToLeaf [= 0.8]: Fraction surface bark exposed air per leaf area. Forest growth (functions growth growth_day): subdailyCarbonBalance [= FALSE]: Boolean flag indicate labile carbon balance conducted sub-daily steps (applies transpirationMode = \"Sperry\"). allowDessication [= TRUE]: Boolean flag indicate mortality dessication allowed. allowStarvation [= TRUE]: Boolean flag indicate mortality starvation allowed. sinkLimitation [= TRUE]: Boolean flag indicate temperature turgor limitations growth applied. shrubDynamics [= TRUE]: Boolean flag allow application demographic processes shrubs. herbDynamics [= TRUE]: Boolean flag allow dynamic herb leaf area function shading due leaf area woody cohorts. allocationStrategy [= \"Al2As\"]: Strategy allocation (either \"Plant_kmax\", constant maximum plant conductance, \"Al2As\" constant Huber value). phloemConductanceFactor [= 0.2]): Factor transform stem xylem conductance stem phloem conductance (transpirationMode = \"Sperry\"). nonSugarConcentration [= 0.25]: Non-sugar (inorganic) solute concentration  (mol·l-1) cells. equilibriumOsmoticConcentration [=  c(leaf = 0.8, sapwood = 0.6)]: Equilibrium osmotic concentrations (mol·l-1) leaf sapwood cells. difference leaf sapwood values helps maintaining phloem transport. equilibrium sugar concentration equilibriumOsmoticConcentration - nonSugarConcentration defaults [= c(leaf = 0.55, sapwood = 0.35)]. minimumRelativeStarchForGrowth [= 0.50]: Default minimum concentration storage carbon (starch), relative maximum storage capacity, sapwood growth occur, specified via SpParams (RSSG). constructionCosts [= c(leaf = 1.5, sapwood = 1.47, fineroot = 1.30)]: Default construction costs, including respiration structural carbon, per dry weight new tissue (g gluc · g dry -1) specified via SpParams (CCleaf, CCsapwood CCfineroot). senescenceRates [= c(sapwood = 0.0001261398, fineroot = 0.001897231)]: Default senescence rates (day-1) sapwood fineroots specified via SpParams (SRsapwood SRfineroot). Defaults equivalent 9%, 5% 50% annual turnover gymnosperm sapwood, angiosperm sapwood fine roots, respectively. maximumRelativeGrowthRates [=   c(leaf = 0.09, cambium = 0.005, sapwood = 0.002, fineroot = 0.1)]: Default maximum relative growth rates leaves (m2 leaf ·cm-2 sapwood· day-1), tree sapwood (cm2 sapwood· cm-1 cambium · day-1), shrub sapwood (cm2 sapwood ·cm-2 sapwood· day-1) fine roots (g dw · g dw -1 · day -1) specified via SpParams (RGRleafmax, RGRcambiummax , RGRsapwoodmax RGRfinerootmax, respectively). mortalityMode [= \"density/deterministic\"]: String describing mortality applied. Current accepted values combinations \"cohort\" vs \"density\" (whole-cohort mortality vs reduction stem density) \"deterministic\" vs. \"stochastic\". mortalityBaselineRate [= 0.0015]: Default deterministic proportion probability specifying baseline reduction cohort's density occurring year (mortalityMode = \"density/deterministic\" \"density/stochastic\"). mortalityRelativeSugarThreshold [= 0.4]: Threshold stem sugar concentration relative equilibrium sugar concentration, resulting increased starvation mortality rate/probability whenever levels . mortalityRWCThreshold [= 0.4]: Threshold stem relative water content resulting increased mortality rate/probability whenever levels . recrTreeDBH [= 1]: Default DBH (cm) recruited trees  (species parameter RecrTreeDBH missing). recrTreeDensity [= 3000]: Default density (ind·ha-1) recruited trees  (species parameter RecrTreeDensity missing). ingrowthTreeDBH [= 7.5]: Default DBH (cm) ingrowth trees  (species parameter RecrTreeDBH missing). ingrowthTreeDensity [= 127]: Default density (ind·ha-1) ingrowth trees  (species parameter RecrTreeDensity missing). Forest dynamics (function fordyn): allowSeedBankDynamics [= TRUE]: Boolean flag indicate seed production seed bank dynamics simulated. allowRecruitment [= TRUE]: Boolean flag indicate recruitment seeds allowed. allowResprouting [= TRUE]: Boolean flag indicate resprouting allowed. recruitmentMode [= \"stochastic\"]: String describing recruitment seeds applied. Current accepted values \"deterministic\" \"stochastic\". removeEmptyCohorts [= TRUE]: Boolean flag indicate removal cohorts whose density low. minimumTreeCohortDensity [= 1]: Threshold tree density resulting cohort removal. minimumShrubCohortCover [= 0.01]: Threshold shrub cover resulting cohort removal. dynamicallyMergeCohorts [= TRUE]: Boolean flag indicate cohorts merged possible. option speeds calculations results loss cohort identity reinitialization many state variables. keepCohortsWithID [= TRUE]: Boolean flag indicate cohorts non-missing value column \"ID\" (present) merged removed. seedRain [= NULL]: Vector species names whose seed rain added seed bank, regardless local seed production. seedProductionTreeHeight [= 300]: Default minimum tree height producing seeds (species parameter SeedProductionHeight missing). seedProductionShrubHeight [= 30]: Default minimum shrub height producing seeds (species parameter SeedProductionHeight missing). probRecr [= 0.05]: Default annual probability seed-recruitment (species parameter ProbRecr missing). minTempRecr [= 0]: Default threshold minimum average temperature coldest month necessary recruiting seeds (species parameter MinTempRecr missing). minMoistureRecr [= 0.3]: Default threshold minimum moisture index (annual precipitation annual ETP) necessary seed-recruiting (species parameter MinMoistureRecr missing). minFPARRecr [= 10]: Default threshold minimum fraction PAR (%)  reaching ground necessary recruiting (species parameter MinFPARRecr missing). recrTreeHeight [= 620]: Default height (cm) recruited trees  (species parameter RecrTreeHeight missing). recrShrubCover [= 1]: Default cover (%) shrubs recruited seed  (species parameter RecrShrubCover missing). recrShrubHeight [= 25]: Default height (cm) recruited shrubs  (species parameter RecrShrubHeight missing). recrTreeZ50 [= 100]: Default value Z50 (mm) seed-recruited trees  (species parameter RecrZ50 missing). recrShrubZ50 [= 50]: Default value Z50 (mm) seed-recruited shrubs  (species parameter RecrZ50 missing). recrTreeZ95 [= 1000]: Default value Z95 (mm) seed-recruited trees  (species parameter RecrZ50 missing). recrShrubZ50 [= 500]: Default value Z95 (mm) seed-recruited shrubs  (species parameter RecrZ50 missing).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultControl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control parameters for simulation models — defaultControl","text":"function returns list default parameters. Users can change defaults need set values use list input model functions. relevant parameters different model function.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/defaultControl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Control parameters for simulation models — defaultControl","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultManagementFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Default forest management actions — defaultManagementFunction","title":"Default forest management actions — defaultManagementFunction","text":"Function defaultManagementFunction implements actions 'regular' 'irregular' management models monospecific mixed stands, whereas function defaultManagementArguments returns list default values parameters regulating management. functions meant used simulations fordyn.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultManagementFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default forest management actions — defaultManagementFunction","text":"","code":"defaultManagementFunction(x, args, verbose = FALSE)  defaultManagementArguments()"},{"path":"https://emf-creaf.github.io/medfate/reference/defaultManagementFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default forest management actions — defaultManagementFunction","text":"x object class forest args list arguments regulating management actions, e.g. list returned defaultManagementArguments verbose logical flag enabling console printing","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultManagementFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default forest management actions — defaultManagementFunction","text":"Function defaultManagementFunction returns list following items: \"action\": string identifying action performed (e.g. \"thinning\"). \"N_tree_cut\": vector density trees removed. \"Cover_shrub_cut\": vector cover shrubs removed. \"planted_forest\": object class forest new plant cohorts resulting tree/shrub planting. \"management_args\": list management arguments used next call management function. Function defaultManagementArguments returns list default arguments: \"type\": Management model, either 'regular' 'irregular'. \"targetTreeSpecies\": Either \"\" unspecific cuttings numeric vector target tree species selected cutting operations. \"thinning\": Kind thinning applied irregular models regular models final cuts. Options '', '', 'systematic', '-systematic', '-systematic' string proportion cuts applied different diameter sizes (see details). \"thinningMetric\": stand-level metric used decide whether thinning applied, either 'BA' (basal area), 'N' (density) 'HB' (Hart-Becking index). \"thinningThreshold\": threshold value stand-level metric causing thinning decision. \"thinningPerc\": Percentage stand's basal area removed thinning operations. \"minThinningInterval\": Minimum number years thinning operations. \"yearsSinceThinning\": State variable count years since last thinning ocurred. \"finalMeanDBH\": Mean DBH threshold start final cuts. \"finalPerc\": String percentages basal area removed final cuts, separated '-' (e.g. \"40-60-100\"). \"finalPreviousStage\": Integer state variable store stage final cuts ('0' starting final cuts). \"finalYearsBetweenCuts\": Number years separating final cuts. \"finalYearsToCut\": State variable count years passed new final cut applied. \"plantingSpecies\": Species code planted. missing, planting occur natural regeneration allowed. \"plantingDBH\": Initial DBH (cm) planted species. \"plantingHeight\": Initial height (cm) planted species. \"plantingDensity\": Initial density (ind./ha) planted species. \"understoryMaximumCover\": Percentage overall shrub cover left silvicultural intervention.    missing, shrub cover left unmodified.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultManagementFunction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default forest management actions — defaultManagementFunction","text":"function implements silvicultural actions following either 'regular' 'irregular' management models. Irregular models implemented executing thinning operations , whereas regular models include thinning set final cuts. Thinning occurs anytime stand-level metric (e.g. basal area) crosses given threshold, different kinds thinning operations allowed. Unrealistic high frequency thinning can avoided setting minimum number years happen thinning operations. Final cuts start whenever mean DBH exceeds given threshold, may include different cuts separated number years. function can applied target management specific taxa (instead assuming monospecific stand), thresholds determine thinning operations apply stand-level metrics. Mean DBH calculated target species . Planting allowed regular management models, applied last final cut. Understory clearings assumed occur anytime intervention trees, residual shrub cover left. Thinning types: : Extract largest trees (according DBH) thinning objective met. : Extract smallest trees (according DBH) thinning objective met. systematic: Extract equally size classes thinning objective met. -systematic: Extract half objective systematic thinning hald thinning. -systematic: Extract half objective systematic thinning hald thinning. free string: string specifying proportion tree cuts size classes, size classes separated \"/\" one composed number specifying upper limit number indicating proportion, separated \"-\" (e.g. \"10-50/40-30/60-20\").","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/defaultManagementFunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default forest management actions — defaultManagementFunction","text":"Miquel De Cáceres Ainsa, CREAF Aitor Améztegui, UdL Jose-Ramon Gonzalez Olabarria, CTFC","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultManagementFunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default forest management actions — defaultManagementFunction","text":"","code":"# Load example forest object data(exampleforest)    # Define arguments args = defaultManagementArguments()    # Call management function f = defaultManagementFunction(exampleforest, args)    #list names names(f) #> [1] \"action\"          \"N_tree_cut\"      \"Cover_shrub_cut\" \"planted_forest\"  #> [5] \"management_args\"    # Action performed f$action #> [1] \"thinning\"    # Number of trees cut for each cohort f$N_tree_cut #> [1]   9.76362 384.00000    # Percent cover of shrubs removed f$Cover_shrub_cut #> [1] 0.75"},{"path":"https://emf-creaf.github.io/medfate/reference/defaultSoilParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Default soil parameters — defaultSoilParams","title":"Default soil parameters — defaultSoilParams","text":"Creates data frame default soil physical description model functions","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultSoilParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default soil parameters — defaultSoilParams","text":"","code":"defaultSoilParams(n = 4)"},{"path":"https://emf-creaf.github.io/medfate/reference/defaultSoilParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default soil parameters — defaultSoilParams","text":"n integer number soil layers (two five).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultSoilParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default soil parameters — defaultSoilParams","text":"data frame layers rows following columns (default values): widths (= c(300,700,1000,2000): Width soil layers (mm). clay (= 25): Clay percentage layer (%). sand (= 25): Sand percentage layer (%). om (= NA): Organic matter percentage layer (%) (optional). nitrogen (= NA): Sum total nitrogen (ammonia, organic reduced nitrogen) layer (g/kg) (optional). bd (= 1.5): Bulk density layer (g/cm3). rfc (= c(20,40,60,85)): Percentage rock fragment content (volume basis) layer.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultSoilParams.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default soil parameters — defaultSoilParams","text":"function returns data frame default physical soil description, soil layers rows. Users can change need set values use list input function soil.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultSoilParams.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Default soil parameters — defaultSoilParams","text":"function limited five soil layers, user defined data frames can discretize soils using unlimited number soil layers.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/defaultSoilParams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default soil parameters — defaultSoilParams","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/defaultSoilParams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default soil parameters — defaultSoilParams","text":"","code":"defaultSoilParams(4) #>   widths clay sand om nitrogen  bd rfc #> 1    300   25   25 NA       NA 1.5  25 #> 2    700   25   25 NA       NA 1.5  45 #> 3   1000   25   25 NA       NA 1.5  75 #> 4   2000   25   25 NA       NA 1.5  95"},{"path":"https://emf-creaf.github.io/medfate/reference/droughtStress.html","id":null,"dir":"Reference","previous_headings":"","what":"Drought stress indicators — droughtStress","title":"Drought stress indicators — droughtStress","text":"Calculates plant drought stress indices, different temporal scales, simulation results.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/droughtStress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drought stress indicators — droughtStress","text":"","code":"droughtStress(x, index = \"NDD\", freq = \"years\", bySpecies = FALSE, draw = TRUE)"},{"path":"https://emf-creaf.github.io/medfate/reference/droughtStress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drought stress indicators — droughtStress","text":"x object class spwb, pwb, growth fordyn. index string index calculated, either \"DI\", \"NDD\", \"ADS\", \"MDS\" \"WSI\" (see details). freq Frequency stress statistics (see cut.Date). Normally, either \"years\" \"months\" yearly-based monthly-based indices. bySpecies Allows aggregating output species. draw boolean flag indicate plot returned.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/droughtStress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drought stress indicators — droughtStress","text":"data frame periods (e.g., years months) rows plant cohorts (species) columns. Values calculated stress index. draw=TRUE ggplot returned instead.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/droughtStress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drought stress indicators — droughtStress","text":"currently available drought stress indices : \"ADS\": Average daily drought stress values period considered. \"MDS\": Maximum daily drought stress period considered. \"DI\": Drought intensity, defined De Cáceres et al. (2015). \"NDD\": Number drought days, defined De Cáceres et al. (2015). \"WSI\": Water stress integral, defined Myers (1988).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/droughtStress.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Drought stress indicators — droughtStress","text":"De Cáceres M, Martínez-Vilalta J, Coll L, Llorens P, Casals P, Poyatos R, Pausas JG, Brotons L. (2015) Coupling water balance model forest inventory data predict drought stress: role forest structural changes vs. climate changes. Agricultural Forest Meteorology 213: 77-90 (doi:10.1016/j.agrformet.2015.06.012). Myers BJ (1988) Water stress integral - link short-term stress long-term growth. Tree Physiology 4: 315–323 (doi: 10.1093/treephys/4.4.315)","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/droughtStress.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Drought stress indicators — droughtStress","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/emptyforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Creation of an empty forest — emptyforest","title":"Creation of an empty forest — emptyforest","text":"Creates empty forest object.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/emptyforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creation of an empty forest — emptyforest","text":"","code":"emptyforest(ntree = 0, nshrub = 0, nseed = 0)"},{"path":"https://emf-creaf.github.io/medfate/reference/emptyforest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creation of an empty forest — emptyforest","text":"ntree, nshrub Number tree shrub cohorts, respectively. nseed Number species seed bank.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/emptyforest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creation of an empty forest — emptyforest","text":"empty forest object.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/emptyforest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creation of an empty forest — emptyforest","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/emptyforest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creation of an empty forest — emptyforest","text":"","code":"# Initializes forest with 2 tree cohorts and 1 shrub cohort emptyforest(ntree = 2, nshrub = 1) #> $treeData #>   Species DBH Height  N Z50 Z95 #> 1    <NA>  NA     NA NA  NA  NA #> 2    <NA>  NA     NA NA  NA  NA #>  #> $shrubData #>   Species Height Cover Z50 Z95 #> 1    <NA>     NA    NA  NA  NA #>  #> $herbCover #> [1] NA #>  #> $herbHeight #> [1] NA #>  #> $seedBank #> [1] Species Percent #> <0 rows> (or 0-length row.names) #>  #> attr(,\"class\") #> [1] \"forest\" \"list\""},{"path":"https://emf-creaf.github.io/medfate/reference/evaluation.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of simulations results — evaluation","title":"Evaluation of simulations results — evaluation","text":"Functions compare model predictions observed values.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/evaluation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of simulations results — evaluation","text":"","code":"evaluation_table(   out,   measuredData,   type = \"SWC\",   cohort = NULL,   temporalResolution = \"day\" )  evaluation_stats(   out,   measuredData,   type = \"SWC\",   cohort = NULL,   temporalResolution = \"day\" )  evaluation_plot(   out,   measuredData,   type = \"SWC\",   cohort = NULL,   temporalResolution = \"day\",   plotType = \"dynamics\" )  evaluation_metric(   out,   measuredData,   type = \"SWC\",   cohort = NULL,   temporalResolution = \"day\",   metric = \"loglikelihood\" )"},{"path":"https://emf-creaf.github.io/medfate/reference/evaluation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of simulations results — evaluation","text":"object class spwb, growth pwb. measuredData data frame observed/measured values. Dates row names, whereas columns named according type output evaluated (see details). type string kind model output evaluated. Accepted values : \"SWC\": Soil water content (percent volume). See details specific soil layers. \"RWC\": Relative water content (relative field capacity). See details specific soil layers. \"REW\": Relative extractable water. See details specific soil layers. \"ETR\": Total evapotranspiration. \"SE+TR\": Modelled soil evaporation + plant transpiration observed total evapotranspiration \"E\": Transpiration per leaf area \"LE\": Latent heat (vaporisation) turbulent flux \"H\": Canopy sensible heat turbulent flux \"GPP\": Stand-level gross primary productivity \"LFMC\": Live fuel moisture content \"WP\": Plant water potentials \"BAI\": Basal area increment \"DI\": Diameter increment \"DBH\": Diameter breast height \"Height\": Plant height cohort string cohort compared (e.g. \"T1_68\"). NULL results first cohort evaluated. temporalResolution string indicate temporal resolution model evaluation, can \"day\", \"week\", \"month\" \"year\". Observed modelled values aggregated temporally (using either means sums) comparison. plotType Plot type draw, either \"dynamics\" \"scatter\". metric evaluation metric: \"MAE\": Mean absolute error. \"MAE.rel\": Mean absolute error relative terms. \"r\": Pearson's linear correlation coefficient. \"NSE\": Nash-Sutcliffe model efficiency coefficient. \"NSE.abs\": Modified Nash-Sutcliffe model efficiency coefficient (L1 norm) (Legates & McCabe 1999). \"loglikelihood\": Logarithm likelihood observing data given model predictions, assuming independent Gaussian errors.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/evaluation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of simulations results — evaluation","text":"Function evaluation_table returns data frame dates, observed predicted values. Function evaluation_stats returns evaluation statistics (vector data frame depending type): Bias: Mean deviation (positive values correspond model overestimations). Bias.rel: Bias relative terms (%). MAE: Mean absolute error. MAE.rel: Mean absolute error relative terms (%). r: Pearson's linear correlation coefficient. NSE: Nash-Sutcliffe model efficiency coefficient. NSE.abs: Modified Nash-Sutcliffe model efficiency coefficient (L1 norm) (Legates & McCabe 1999). Function evaluation_plot returns ggplot object. Function evaluation_metric returns scalar desired metric.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/evaluation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluation of simulations results — evaluation","text":"Users provide appropriate columns measuredData, depending type output evaluated: \"SWC\", \"RWC\", \"REW\": column name present. default, first soil layer compared. Evaluation can done specific soil layers, example using \"RWC.2\" relative water content second layer. \"ETR\" \"SE+TR\": column named \"ETR\" present, containing stand's evapotranspiration mm/day (mm/week, mm/month, etc, depending temporal resolution). type=\"ETR\" observed values compared modelled evapotranspiration (.e. sum transpiration, soil evaporation interception loss), whereas type= \"SE+TR\" observed values compared sum transpiration soil evaporation . \"LE\": column named \"LE\" present containing daily latent heat turbulent flux MJ/m2. \"H\": column named \"H\" present containing daily sensible heat turbulent flux MJ/m2. \"E\": plant cohort whose transpiration evaluated, column starting \"E_\" continuing cohort name (e.g. \"E_T1_68\") transpiration L/m2/day leaf area basis (L/m2/week, L/m2/month, etc, depending temporal resolution). \"GPP\": column named \"GPP\" present containing daily gross primary productivity gC/m2. \"LFMC\": plant cohort whose transpiration evaluated, column starting \"FCM_\" continuing cohort name (e.g. \"FMC_T1_68\") fuel moisture content percent dry weight. \"WP\": plant cohort whose transpiration evaluated, two columns, one starting \"PD_\" (pre-dawn) \"MD_\" (midday), continuing cohort name (e.g. \"PD_T1_68\"). contain leaf water potential values MPa. compared sunlit water potentials. \"BAI\": plant cohort whose growth evaluated, column starting \"BAI_\" continuing cohort name (e.g. \"BAI_T1_68\") basal area increment cm2/day, cm2/week, cm2/month cm2/year, depending temporal resolution. \"DI\": plant cohort whose growth evaluated, column starting \"DI_\" continuing cohort name (e.g. \"DI_T1_68\") basal area increment cm/day, cm/week, cm/month cm/year, depending temporal resolution. \"DBH\": plant cohort whose growth evaluated, column starting \"DBH_\" continuing cohort name (e.g. \"DBH_T1_68\") DBH values cm. \"Height\": plant cohort whose growth evaluated, column starting \"Height_\" continuing cohort name (e.g. \"Height_T1_68\") Height values cm. Additional columns may exist standard error measured quantities. named referred quantity, followed \"_err\" (e.g. \"PD_T1_68_err\"), used draw confidence intervals around observations. Row names measuredData indicate date measurement (case days). Alternatively, column called \"dates\" can contain measurement dates. measurements refer months years, row names also \"year-month-day\" format, although \"01\" days /months (e.g. \"2001-02-01\" february 2001, \"2001-01-01\" year 2001).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/evaluation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Evaluation of simulations results — evaluation","text":"Legates, D.R., McCabe, G.J., 1999. Evaluating use “goodness--fit” measures hydrologic hydroclimatic model validation. Water Resour. Res. 35, 233–241.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/evaluation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Evaluation of simulations results — evaluation","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/evaluation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of simulations results — evaluation","text":"","code":"# \\donttest{ #Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Initialize input x1 <- spwbInput(exampleforest, examplesoil, SpParamsMED, control)  #Call simulation function S1 <- spwb(x1, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant water content (mm): 4.73001 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  [Year 2001]:............ #>  #> Final plant water content (mm): 4.7285 #> Final soil water content (mm): 274.723 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): -0.00151775 #> Plant water balance result (mm): -0.00151775 #> Change in soil water content (mm): -16.1521 #> Soil water balance result (mm): -16.1521 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): -7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 370 #>   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 26  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 249 #>   Plant extraction from soil (mm) 249  Plant water balance (mm) -0 Hydraulic redistribution (mm) 5 #>   Runoff (mm) 21 Deep drainage (mm) 128  #Load observed data (in this case the same simulation results with some added error)   data(exampleobs)  #Evaluation statistics for soil water content evaluation_stats(S1, exampleobs) #>             n          Bias      Bias.rel           MAE       MAE.rel  #>  3.650000e+02 -5.419844e-04 -1.954972e-01  5.002766e-03  1.804529e+00  #>             r           NSE       NSE.abs  #>  9.683900e-01  9.372955e-01  7.378057e-01   #NSE only evaluation_metric(S1, exampleobs, metric=\"NSE\") #> [1] 0.9372955  #Comparison of temporal dynamics evaluation_plot(S1, exampleobs)   #Loglikelihood value evaluation_metric(S1, exampleobs) #> [1] 998.5705 # }"},{"path":"https://emf-creaf.github.io/medfate/reference/examplemeteo.html","id":null,"dir":"Reference","previous_headings":"","what":"Example daily meteorology data — examplemeteo","title":"Example daily meteorology data — examplemeteo","text":"Example data set meteorological input.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/examplemeteo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example daily meteorology data — examplemeteo","text":"data frame containing daily meteorology location Catalonia (Spain) year 2001: dates Vector Date objects. MinTemperature Minimum daily temperature (degrees Celsius). MaxTemperature Maximum daily temperature (degrees Celsius). Precipitation Daily precipitation (mm water). MinRelativeHumidity Minimum daily relative humidity (percent). MaxRelativeHumidity Maximum daily relative humidity (percent). Radiation Incoming radiation (MJ/m2). WindSpeed Wind speed (m/s).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/examplemeteo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example daily meteorology data — examplemeteo","text":"Interpolated weather station data (Spanish Catalan meteorology agencies) using package 'meteoland'.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/examplemeteo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example daily meteorology data — examplemeteo","text":"","code":"data(examplemeteo)"},{"path":"https://emf-creaf.github.io/medfate/reference/exampleobs.html","id":null,"dir":"Reference","previous_headings":"","what":"Example observed data — exampleobs","title":"Example observed data — exampleobs","text":"Example (fake) data set variables measured plot.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/exampleobs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example observed data — exampleobs","text":"data frame containing daily 'observed' values year 2001: dates Measurement dates. SWC Soil moisture content (m3/m3). ETR Total evapotranspiration (mm). E_T1_148 Transpiration Pinus halepensis cohort 'T1_148' (L/m2 leaf area). E_T2_168 Transpiration Quercus ilex cohort 'T2_168' (L/m2 leaf area). FMC_T1_148 Fuel moisture content Pinus halepensis cohort 'T1_148'  (percent). FMC_T2_168 Fuel moisture content Quercus ilex cohort 'T2_168' (percent). BAI_T1_148 Basal area increment Pinus halepensis cohort 'T1_148'  (cm2). BAI_T2_168 Basal area increment Quercus ilex cohort 'T2_168' (cm2). DI_T1_148 Diameter increment Pinus halepensis cohort 'T1_148'  (cm). DI_T2_168 Diameter increment Quercus ilex cohort 'T2_168' (cm).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/exampleobs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example observed data — exampleobs","text":"data set actually created running simulation adding gaussian error outputs.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/exampleobs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example observed data — exampleobs","text":"","code":"data(exampleobs)"},{"path":"https://emf-creaf.github.io/medfate/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts model outputs — extract","title":"Extracts model outputs — extract","text":"Function extract() extracts daily subdaily output returns tidy data frame.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts model outputs — extract","text":"","code":"extract(   x,   level = \"forest\",   output = NULL,   vars = NULL,   dates = NULL,   subdaily = FALSE )"},{"path":"https://emf-creaf.github.io/medfate/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts model outputs — extract","text":"x object returned simulation functions spwb, pwb growth. level Level simulation output, either \"forest\" (stand-level results), \"soillayer\" (soil layer-level results), \"cohort\" (cohort-level results), \"sunlitleaf\" \"shadeleaf\" (leaf-level results) output Section model output explored. See details. vars Variables extracted (default, ). dates date vector indicating subset simulated days output desired. subdaily flag indicate subdaily values desired (see details).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts model outputs — extract","text":"Function extract() returns data frame: level = \"forest\", columns \"date\" variable names. level = \"soillayer\", columns \"date\", \"soillayer\" variable names. level = \"cohort\", level = \"sunlitleaf\" level = \"shadeleaf\", columns \"date\", \"cohorts\", \"species\" variable names. subdaily = TRUE, columns \"datetime\", \"cohorts\", \"species\" variable names.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts model outputs — extract","text":"subdaily = FALSE, parameter output used restrict section x variables located. example output = \"Plants\" correspond variables \"LAI\", \"LAIlive\", \"Transpiration\", \"StemPLC\",... returned call names(x$Plants). Option subdaily = TRUE works simulations carried using control option 'subdailyResults = TRUE' (see defaultControl). using subdaily = TRUE, parameter output taken account, options parameter vars following: Variables level = \"forest\" level = \"soillayer\": allowed. error raised. Variables level = \"cohort\": \"E\",\"Ag\",\"\",\"dEdP\",\"RootPsi\",\"StemPsi\",\"LeafPsi\",\"StemPLC\",\"StemRWC\",\"LeafRWC\",\"StemSympRWC\",\"LeafSympRWC\",\"PWB\". Variables level = \"shadeleaf\" level=\"sunlitleaf\": \"Abs_SWR\",\"Abs_PAR\",\"Net_LWR\",\"E\",\"Ag\",\"\",\"Ci\",\"Gsw\",\"VPD\",\"Temp\",\"Psi\",\"iWUE\".","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracts model outputs — extract","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts model outputs — extract","text":"","code":"#Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Initialize input x <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  #Call simulation function (ten days) S1<-spwb(x, examplemeteo[1:10, ], latitude = 41.82592, elevation = 100) #> Initial plant water content (mm): 4.73001 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  [Year 2001]: #>  #> Final plant water content (mm): 4.72995 #> Final soil water content (mm): 294.61 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): -6.09432e-05 #> Plant water balance result (mm): -6.09432e-05 #> Change in soil water content (mm): 3.73471 #> Soil water balance result (mm): 3.73471 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): 0 #> Water balance components: #>   Precipitation (mm) 39 Rain (mm) 34 Snow (mm) 5 #>   Interception (mm) 9 Net rainfall (mm) 25 #>   Infiltration (mm) 30 Infiltration excess (mm) 0 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 3  Herbaceous transpiration (mm) 0 Woody plant transpiration (mm) 3 #>   Plant extraction from soil (mm) 3  Plant water balance (mm) -0 Hydraulic redistribution (mm) 0 #>   Runoff (mm) 0 Deep drainage (mm) 21  #Extracts daily forest-level output as a data frame extract(S1, level = \"forest\") #>          date       PET Precipitation      Rain   Snow    NetRain Snowmelt #> 1  2001-01-01 0.8828475      4.869109  4.869109 0.0000  3.4241795   0.0000 #> 2  2001-01-02 1.6375337      2.498292  2.498292 0.0000  1.0717469   0.0000 #> 3  2001-01-03 1.3017026      0.000000  0.000000 0.0000  0.0000000   0.0000 #> 4  2001-01-04 0.5690790      5.796973  5.796973 0.0000  4.3625616   0.0000 #> 5  2001-01-05 1.6760567      1.884401  1.884401 0.0000  0.7539027   0.0000 #> 6  2001-01-06 1.2077028     13.359801 13.359801 0.0000 11.7240275   0.0000 #> 7  2001-01-07 0.6368075      5.377400  0.000000 5.3774  0.0000000   0.0000 #> 8  2001-01-08 0.8318207      0.000000  0.000000 0.0000  0.0000000   0.0000 #> 9  2001-01-09 1.9823797      0.000000  0.000000 0.0000  0.0000000   0.0000 #> 10 2001-01-10 0.8286873      5.117768  5.117768 0.0000  3.6727363   5.3774 #>    Infiltration InfiltrationExcess SaturationExcess Runoff DeepDrainage #> 1     3.4241795                  0                0      0   2.76172073 #> 2     1.0717469                  0                0      0   0.18953238 #> 3     0.0000000                  0                0      0   0.00000000 #> 4     4.3625616                  0                0      0   3.24803369 #> 5     0.7539027                  0                0      0   0.09976167 #> 6    11.7240275                  0                0      0   4.12141379 #> 7     0.0000000                  0                0      0   4.12141379 #> 8     0.0000000                  0                0      0   2.58912158 #> 9     0.0000000                  0                0      0   0.00000000 #> 10    9.0501360                  0                0      0   4.12141379 #>    CapillarityRise Evapotranspiration Interception SoilEvaporation #> 1                0          2.1073881     1.444929       0.4478948 #> 2                0          2.3245249     1.426545       0.5000000 #> 3                0          0.8008422     0.000000       0.4844828 #> 4                0          1.7323314     1.434411       0.1596478 #> 5                0          2.0378414     1.130499       0.5000000 #> 6                0          2.2365181     1.635773       0.3072545 #> 7                0          0.1547711     0.000000       0.0000000 #> 8                0          0.2021576     0.000000       0.0000000 #> 9                0          0.4817475     0.000000       0.0000000 #> 10               0          1.8385016     1.445031       0.1921102 #>    HerbTranspiration PlantExtraction Transpiration HydraulicRedistribution #> 1        0.011023432       0.2035406     0.2035406             0.000000000 #> 2        0.020446613       0.3775336     0.3775336             0.000000000 #> 3        0.016253339       0.3001060     0.3001060             0.000000000 #> 4        0.007105403       0.1311669     0.1311669             0.000000000 #> 5        0.020927620       0.3864150     0.3864150             0.000000000 #> 6        0.015079467       0.2784110     0.2784110             0.000000000 #> 7        0.007951321       0.1468197     0.1468197             0.001668074 #> 8        0.010386248       0.1917713     0.1917713             0.001890159 #> 9        0.024752147       0.4569954     0.4569954             0.000000000 #> 10       0.010346897       0.1910131     0.1910131             0.000000000 #>         LAI   LAIherb  LAIlive LAIexpanded LAIdead       Cm LgroundPAR #> 1  1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #> 2  1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #> 3  1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #> 4  1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #> 5  1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #> 6  1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #> 7  1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #> 8  1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #> 9  1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #> 10 1.758585 0.1736369 1.584948    1.584948       0 1.390485   40.00754 #>    LgroundSWR    SWE #> 1    50.73297 0.0000 #> 2    50.73297 0.0000 #> 3    50.73297 0.0000 #> 4    50.73297 0.0000 #> 5    50.73297 0.0000 #> 6    50.73297 0.0000 #> 7    50.73297 5.3774 #> 8    50.73297 5.3774 #> 9    50.73297 5.3774 #> 10   50.73297 0.0000  #Extracts daily soil layer-level output as a data frame extract(S1, level = \"soillayer\") #>          date soillayer       SWC       RWC       REW        ML         Psi #> 1  2001-01-01         1 0.3029947 1.0000000 1.0000000  68.17381 -0.03300000 #> 2  2001-01-02         1 0.3029247 0.9997687 0.9996532  68.15805 -0.03303618 #> 3  2001-01-03         1 0.2998696 0.9896859 0.9845318  67.47066 -0.03465236 #> 4  2001-01-04         1 0.3029947 1.0000000 1.0000000  68.17381 -0.03300000 #> 5  2001-01-05         1 0.3018694 0.9962859 0.9944299  67.92061 -0.03358578 #> 6  2001-01-06         1 0.3029947 1.0000000 1.0000000  68.17381 -0.03300000 #> 7  2001-01-07         1 0.3025199 0.9984330 0.9976499  68.06699 -0.03324590 #> 8  2001-01-08         1 0.3018945 0.9963689 0.9945543  67.92627 -0.03357259 #> 9  2001-01-09         1 0.3005298 0.9918647 0.9877993  67.61920 -0.03429657 #> 10 2001-01-10         1 0.3029947 1.0000000 1.0000000  68.17381 -0.03300000 #> 11 2001-01-01         2 0.3029947 1.0000000 1.0000000 116.65297 -0.03300000 #> 12 2001-01-02         2 0.3029947 1.0000000 1.0000000 116.65297 -0.03300000 #> 13 2001-01-03         2 0.3027769 0.9992811 0.9989219 116.56911 -0.03311258 #> 14 2001-01-04         2 0.3029947 1.0000000 1.0000000 116.65297 -0.03300000 #> 15 2001-01-05         2 0.3029947 1.0000000 1.0000000 116.65297 -0.03300000 #> 16 2001-01-06         2 0.3029947 1.0000000 1.0000000 116.65297 -0.03300000 #> 17 2001-01-07         2 0.3029161 0.9997404 0.9996107 116.62269 -0.03304061 #> 18 2001-01-08         2 0.3028097 0.9993892 0.9990840 116.58172 -0.03309563 #> 19 2001-01-09         2 0.3024919 0.9983404 0.9975111 116.45937 -0.03326049 #> 20 2001-01-10         2 0.3029947 1.0000000 1.0000000 116.65297 -0.03300000 #> 21 2001-01-01         3 0.3029947 1.0000000 1.0000000  75.74868 -0.03300000 #> 22 2001-01-02         3 0.3029947 1.0000000 1.0000000  75.74868 -0.03300000 #> 23 2001-01-03         3 0.3029241 0.9997668 0.9996503  75.73102 -0.03303648 #> 24 2001-01-04         3 0.3029947 1.0000000 1.0000000  75.74868 -0.03300000 #> 25 2001-01-05         3 0.3029947 1.0000000 1.0000000  75.74868 -0.03300000 #> 26 2001-01-06         3 0.3029947 1.0000000 1.0000000  75.74868 -0.03300000 #> 27 2001-01-07         3 0.3029947 1.0000000 1.0000000  75.74868 -0.03300000 #> 28 2001-01-08         3 0.3029947 1.0000000 1.0000000  75.74868 -0.03300000 #> 29 2001-01-09         3 0.3028723 0.9995959 0.9993939  75.71807 -0.03306325 #> 30 2001-01-10         3 0.3029947 1.0000000 1.0000000  75.74868 -0.03300000 #> 31 2001-01-01         4 0.3029947 1.0000000 1.0000000  30.29947 -0.03300000 #> 32 2001-01-02         4 0.3029947 1.0000000 1.0000000  30.29947 -0.03300000 #> 33 2001-01-03         4 0.3028754 0.9996060 0.9994092  30.28754 -0.03306165 #> 34 2001-01-04         4 0.3029947 1.0000000 1.0000000  30.29947 -0.03300000 #> 35 2001-01-05         4 0.3029947 1.0000000 1.0000000  30.29947 -0.03300000 #> 36 2001-01-06         4 0.3704814 1.2227322 1.3340364  37.04814 -0.01035855 #> 37 2001-01-07         4 0.3290906 1.0861266 1.1291660  32.90906 -0.02182896 #> 38 2001-01-08         4 0.3029947 1.0000000 1.0000000  30.29947 -0.03300000 #> 39 2001-01-09         4 0.3027775 0.9992831 0.9989249  30.27775 -0.03311227 #> 40 2001-01-10         4 0.3403418 1.1232598 1.1848555  34.03418 -0.01812652 #> 41 2001-01-01   Overall 0.3029947 1.0000000 1.0000000 290.87494 -0.03300000 #> 42 2001-01-02   Overall 0.3029783 0.9999458 0.9999187 290.85917 -0.03300848 #> 43 2001-01-03   Overall 0.3021441 0.9971926 0.9957897 290.05833 -0.03344835 #> 44 2001-01-04   Overall 0.3029947 1.0000000 1.0000000 290.87494 -0.03300000 #> 45 2001-01-05   Overall 0.3027310 0.9991295 0.9986945 290.62174 -0.03313729 #> 46 2001-01-06   Overall 0.3100246 1.0232013 1.0347955 297.62361 -0.03064152 #> 47 2001-01-07   Overall 0.3055702 1.0085002 1.0127479 293.34742 -0.03191027 #> 48 2001-01-08   Overall 0.3026626 0.9989040 0.9983563 290.55614 -0.03317255 #> 49 2001-01-09   Overall 0.3021608 0.9972478 0.9958725 290.07440 -0.03343652 #> 50 2001-01-10   Overall 0.3068850 1.0128396 1.0192558 294.60965 -0.03145068 #>        PlantExt HydraulicInput #> 1   0.147990816    0.000000000 #> 2   0.274498074    0.000000000 #> 3   0.188090723    0.000000000 #> 4   0.080374764    0.000000000 #> 5   0.280955644    0.000000000 #> 6   0.173076324    0.000000000 #> 7   0.099582722    0.000000000 #> 8   0.131256011    0.000000000 #> 9   0.284509817    0.000000000 #> 10  0.117915754    0.000000000 #> 11  0.049247162    0.000000000 #> 12  0.091345203    0.000000000 #> 13  0.082703478    0.000000000 #> 14  0.037242235    0.000000000 #> 15  0.093494100    0.000000000 #> 16  0.077972621    0.000000000 #> 17  0.029714327    0.000000000 #> 18  0.040231132    0.000000000 #> 19  0.120588842    0.000000000 #> 20  0.051601030    0.000000000 #> 21  0.005050851    0.000000000 #> 22  0.009368479    0.000000000 #> 23  0.017460130    0.000000000 #> 24  0.008219694    0.000000000 #> 25  0.009588873    0.000000000 #> 26  0.016331634    0.000000000 #> 27 -0.001342148    0.001668074 #> 28 -0.001224115    0.001890159 #> 29  0.030304934    0.000000000 #> 30  0.013163094    0.000000000 #> 31  0.001251763    0.000000000 #> 32  0.002321810    0.000000000 #> 33  0.011851680    0.000000000 #> 34  0.005330219    0.000000000 #> 35  0.002376431    0.000000000 #> 36  0.011030386    0.000000000 #> 37  0.018864847    0.000000000 #> 38  0.021508294    0.000000000 #> 39  0.021591796    0.000000000 #> 40  0.008333191    0.000000000 #> 41  0.203540592    0.000000000 #> 42  0.377533566    0.000000000 #> 43  0.300106010    0.000000000 #> 44  0.131166911    0.000000000 #> 45  0.386415047    0.000000000 #> 46  0.278410965    0.000000000 #> 47  0.146819749    0.000000000 #> 48  0.191771323    0.000000000 #> 49  0.456995389    0.000000000 #> 50  0.191013069    0.000000000  #Extracts daily cohort-level output as a data frame extract(S1, level = \"cohort\") #>          date cohort           species        LAI    LAIlive     FPAR #> 1  2001-01-01 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 2  2001-01-02 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 3  2001-01-03 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 4  2001-01-04 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 5  2001-01-05 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 6  2001-01-06 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 7  2001-01-07 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 8  2001-01-08 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 9  2001-01-09 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 10 2001-01-10 T1_148  Pinus halepensis 0.84874773 0.84874773 92.18285 #> 11 2001-01-01 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 12 2001-01-02 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 13 2001-01-03 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 14 2001-01-04 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 15 2001-01-05 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 16 2001-01-06 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 17 2001-01-07 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 18 2001-01-08 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 19 2001-01-09 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 20 2001-01-10 T2_168      Quercus ilex 0.70557382 0.70557382 72.36365 #> 21 2001-01-01 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #> 22 2001-01-02 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #> 23 2001-01-03 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #> 24 2001-01-04 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #> 25 2001-01-05 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #> 26 2001-01-06 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #> 27 2001-01-07 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #> 28 2001-01-08 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #> 29 2001-01-09 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #> 30 2001-01-10 S1_165 Quercus coccifera 0.03062604 0.03062604 44.32407 #>    AbsorbedSWRFraction Transpiration GrossPhotosynthesis    PlantPsi #> 1            35.076344   0.125013855          1.21341578 -0.03300000 #> 2            35.076344   0.231879677          2.10407515 -0.03300000 #> 3            35.076344   0.184323778          1.77446227 -0.03303113 #> 4            35.076344   0.080558589          0.81331597 -0.03443824 #> 5            35.076344   0.237334648          2.18426681 -0.03300000 #> 6            35.076344   0.170996083          1.79117760 -0.03350436 #> 7            35.076344   0.090175546          1.02775410 -0.03291029 #> 8            35.076344   0.117784164          1.21743091 -0.03316636 #> 9            35.076344   0.280680932          2.08924520 -0.03350435 #> 10           35.076344   0.117315922          1.16086617 -0.03414931 #> 11           30.444383   0.072474080          0.87313959 -0.03300000 #> 12           30.444383   0.134427230          1.59468338 -0.03300000 #> 13           30.444383   0.106858002          1.28490448 -0.03301812 #> 14           30.444383   0.046707364          0.56803278 -0.03388161 #> 15           30.444383   0.137589632          1.63739954 -0.03300000 #> 16           30.444383   0.099135474          1.21662135 -0.03329360 #> 17           30.444383   0.052278246          0.65566870 -0.03283339 #> 18           30.444383   0.068284381          0.83523580 -0.03305607 #> 19           30.444383   0.162724279          1.85134435 -0.03333002 #> 20           30.444383   0.068016470          0.82319293 -0.03377086 #> 21            2.366131   0.006052657          0.05005525 -0.03300000 #> 22            2.366131   0.011226660          0.08984642 -0.03300000 #> 23            2.366131   0.008924231          0.07350392 -0.03302460 #> 24            2.366131   0.003900958          0.03290279 -0.03415864 #> 25            2.366131   0.011490767          0.09258764 -0.03300000 #> 26            2.366131   0.008279408          0.07115823 -0.03339865 #> 27            2.366131   0.004365957          0.03922422 -0.03279123 #> 28            2.366131   0.005702778          0.04867873 -0.03306716 #> 29            2.366131   0.013590177          0.09935012 -0.03341577 #> 30            2.366131   0.005680677          0.04743233 -0.03395749 #>         LeafPLC      StemPLC PlantWaterBalance   LeafRWC   StemRWC      LFMC #> 1  0.000000e+00 0.000000e+00      0.000000e+00 0.9979679 0.9998350 125.89003 #> 2  0.000000e+00 0.000000e+00      0.000000e+00 0.9979679 0.9998350 125.89003 #> 3  0.000000e+00 0.000000e+00     -1.405221e-06 0.9979660 0.9998348 125.88990 #> 4  0.000000e+00 0.000000e+00     -6.351485e-05 0.9978794 0.9998278 125.88391 #> 5  0.000000e+00 0.000000e+00      6.492007e-05 0.9979679 0.9998350 125.89003 #> 6  0.000000e+00 0.000000e+00     -2.276642e-05 0.9979369 0.9998324 125.88789 #> 7  0.000000e+00 0.000000e+00      2.681584e-05 0.9979734 0.9998354 125.89042 #> 8  0.000000e+00 0.000000e+00     -1.155893e-05 0.9979577 0.9998341 125.88933 #> 9  0.000000e+00 0.000000e+00     -1.525615e-05 0.9979369 0.9998324 125.88789 #> 10 0.000000e+00 0.000000e+00     -2.911272e-05 0.9978972 0.9998292 125.88514 #> 11 2.905929e-03 3.681226e-09      0.000000e+00 0.9986797 0.9997500  93.07454 #> 12 2.905929e-03 3.681226e-09      0.000000e+00 0.9986797 0.9997500  93.07454 #> 13 2.908064e-03 3.688428e-09     -1.912943e-07 0.9986790 0.9997498  93.07450 #> 14 3.010220e-03 4.043476e-09     -9.115197e-06 0.9986445 0.9997433  93.07245 #> 15 3.010220e-03 4.043476e-09      9.306491e-06 0.9986797 0.9997500  93.07454 #> 16 3.010220e-03 4.043476e-09     -3.099276e-06 0.9986680 0.9997477  93.07384 #> 17 3.010220e-03 4.043476e-09      4.858057e-06 0.9986864 0.9997512  93.07494 #> 18 3.010220e-03 4.043476e-09     -2.350635e-06 0.9986775 0.9997495  93.07441 #> 19 3.010220e-03 4.043476e-09     -2.891961e-06 0.9986665 0.9997475  93.07376 #> 20 3.010220e-03 4.043476e-09     -4.653597e-06 0.9986489 0.9997441  93.07271 #> 21 3.473351e-05 4.394058e-08      0.000000e+00 0.9987207 0.9983684  96.39176 #> 22 3.473351e-05 4.394058e-08      0.000000e+00 0.9987207 0.9983684  96.39176 #> 23 3.479192e-05 4.404206e-08     -2.382859e-08 0.9987197 0.9983672  96.39166 #> 24 3.754418e-05 4.889404e-08     -1.098417e-06 0.9986757 0.9983112  96.38676 #> 25 3.754418e-05 4.889404e-08      1.122246e-06 0.9987207 0.9983684  96.39176 #> 26 3.754418e-05 4.889404e-08     -3.861356e-07 0.9987052 0.9983487  96.39004 #> 27 3.754418e-05 4.889404e-08      5.883507e-07 0.9987288 0.9983787  96.39266 #> 28 3.754418e-05 4.889404e-08     -2.672712e-07 0.9987181 0.9983651  96.39147 #> 29 3.754418e-05 4.889404e-08     -3.376583e-07 0.9987045 0.9983479  96.38997 #> 30 3.754418e-05 4.889404e-08     -5.247081e-07 0.9986835 0.9983211  96.38763 #>    PlantStress #> 1  0.004613739 #> 2  0.004613739 #> 3  0.004620274 #> 4  0.004918823 #> 5  0.004613739 #> 6  0.004719988 #> 7  0.004594925 #> 8  0.004648697 #> 9  0.004719985 #> 10 0.004857016 #> 11 0.006282261 #> 12 0.006282261 #> 13 0.006286213 #> 14 0.006474864 #> 15 0.006282261 #> 16 0.006346322 #> 17 0.006245943 #> 18 0.006294488 #> 19 0.006354276 #> 20 0.006450630 #> 21 0.003088161 #> 22 0.003088161 #> 23 0.003091150 #> 24 0.003229622 #> 25 0.003088161 #> 26 0.003136670 #> 27 0.003062826 #> 28 0.003096322 #> 29 0.003138757 #> 30 0.003204961  #Select the output tables/variables to be extracted extract(S1, level =\"cohort\", output=\"Plants\", vars = c(\"PlantStress\", \"StemPLC\")) #>          date cohort           species PlantStress      StemPLC #> 1  2001-01-01 T1_148  Pinus halepensis 0.004613739 0.000000e+00 #> 2  2001-01-02 T1_148  Pinus halepensis 0.004613739 0.000000e+00 #> 3  2001-01-03 T1_148  Pinus halepensis 0.004620274 0.000000e+00 #> 4  2001-01-04 T1_148  Pinus halepensis 0.004918823 0.000000e+00 #> 5  2001-01-05 T1_148  Pinus halepensis 0.004613739 0.000000e+00 #> 6  2001-01-06 T1_148  Pinus halepensis 0.004719988 0.000000e+00 #> 7  2001-01-07 T1_148  Pinus halepensis 0.004594925 0.000000e+00 #> 8  2001-01-08 T1_148  Pinus halepensis 0.004648697 0.000000e+00 #> 9  2001-01-09 T1_148  Pinus halepensis 0.004719985 0.000000e+00 #> 10 2001-01-10 T1_148  Pinus halepensis 0.004857016 0.000000e+00 #> 11 2001-01-01 T2_168      Quercus ilex 0.006282261 3.681226e-09 #> 12 2001-01-02 T2_168      Quercus ilex 0.006282261 3.681226e-09 #> 13 2001-01-03 T2_168      Quercus ilex 0.006286213 3.688428e-09 #> 14 2001-01-04 T2_168      Quercus ilex 0.006474864 4.043476e-09 #> 15 2001-01-05 T2_168      Quercus ilex 0.006282261 4.043476e-09 #> 16 2001-01-06 T2_168      Quercus ilex 0.006346322 4.043476e-09 #> 17 2001-01-07 T2_168      Quercus ilex 0.006245943 4.043476e-09 #> 18 2001-01-08 T2_168      Quercus ilex 0.006294488 4.043476e-09 #> 19 2001-01-09 T2_168      Quercus ilex 0.006354276 4.043476e-09 #> 20 2001-01-10 T2_168      Quercus ilex 0.006450630 4.043476e-09 #> 21 2001-01-01 S1_165 Quercus coccifera 0.003088161 4.394058e-08 #> 22 2001-01-02 S1_165 Quercus coccifera 0.003088161 4.394058e-08 #> 23 2001-01-03 S1_165 Quercus coccifera 0.003091150 4.404206e-08 #> 24 2001-01-04 S1_165 Quercus coccifera 0.003229622 4.889404e-08 #> 25 2001-01-05 S1_165 Quercus coccifera 0.003088161 4.889404e-08 #> 26 2001-01-06 S1_165 Quercus coccifera 0.003136670 4.889404e-08 #> 27 2001-01-07 S1_165 Quercus coccifera 0.003062826 4.889404e-08 #> 28 2001-01-08 S1_165 Quercus coccifera 0.003096322 4.889404e-08 #> 29 2001-01-09 S1_165 Quercus coccifera 0.003138757 4.889404e-08 #> 30 2001-01-10 S1_165 Quercus coccifera 0.003204961 4.889404e-08"},{"path":"https://emf-creaf.github.io/medfate/reference/fireHazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Fire hazard — fireHazard","title":"Fire hazard — fireHazard","text":"Estimates potential fire behaviour daily step simulation","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fireHazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fire hazard — fireHazard","text":"","code":"fireHazard(   x,   SpParams,   forest = NULL,   standardConditions = FALSE,   freq = \"days\",   fun = \"max\" )"},{"path":"https://emf-creaf.github.io/medfate/reference/fireHazard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fire hazard — fireHazard","text":"x object class spwb, spwb_day, pwb, growth, growth_day fordyn. SpParams data frame species parameters (see SpParamsDefinition SpParamsMED). forest object class forest (needed x class fordyn). standardConditions logical flag indicate standard fire weather conditions used (instead deriving fuel moisture windspeed x). freq Frequency summary statistics (see cut.Date). fun Summary function (default, maximum values).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fireHazard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fire hazard — fireHazard","text":"matrix fire behaviour variables (columns) simulated day (rows) coarser time steps summaries requested.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fireHazard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fire hazard — fireHazard","text":"Live fuel moisture shrub canopy layers estimated plant water status. Dead fuel moisture estimated following Resco-de-Dios et al. (2015).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fireHazard.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fire hazard — fireHazard","text":"Resco de Dios, V., . W. Fellows, R. H. Nolan, M. M. Boer, R. . Bradstock, F. Domingo, M. L. Goulden. 2015. semi-mechanistic model predicting moisture content fine litter. Agricultural Forest Meteorology 203:64–73. Ruffault J, Limousin JM, Pimont F, Dupuy JL, De Cáceres M, Cochard H, Mouillot F, Blackman C, Torres-Ruiz JM, Parsons R, Moreno M, Delzon S, Jansen S, Olioso , Choat B, Martin-StPaul N. 2023. Plant hydraulic modelling leaf canopy fuel moisture content reveals increasing vulnerability Mediterranean forest wildfires extreme drought. New Phytologist. (10.1111/nph.18614).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/fireHazard.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fire hazard — fireHazard","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fireHazard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fire hazard — fireHazard","text":"","code":"# \\donttest{ #Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Initialize input x1 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  #Call simulation function S1 <- spwb(x1, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant water content (mm): 4.73001 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  [Year 2001]:............ #>  #> Final plant water content (mm): 4.7285 #> Final soil water content (mm): 274.723 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): -0.00151775 #> Plant water balance result (mm): -0.00151775 #> Change in soil water content (mm): -16.1521 #> Soil water balance result (mm): -16.1521 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): -7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 370 #>   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 26  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 249 #>   Plant extraction from soil (mm) 249  Plant water balance (mm) -0 Hydraulic redistribution (mm) 5 #>   Runoff (mm) 21 Deep drainage (mm) 128  #Evaluate fire hazard F1 <- fireHazard(S1, SpParamsMED, exampleforest) # }"},{"path":"https://emf-creaf.github.io/medfate/reference/fire_behaviour.html","id":null,"dir":"Reference","previous_headings":"","what":"Fire behaviour functions — fire_behaviour","title":"Fire behaviour functions — fire_behaviour","text":"Function fire_FCCS() implements modification fire behavior models described Fuel Characteristics Classification System (FCCS) Prichard et al. (2013). Function fire_Rothermel() implements Rothermel's (1972) fire behaviour model (modified package 'Rothermel' (Giorgio Vacchiano, Davide Ascoli)).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fire_behaviour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fire behaviour functions — fire_behaviour","text":"","code":"fire_FCCS(   FCCSpropsSI,   MliveSI = as.numeric(c(90, 90, 60)),   MdeadSI = as.numeric(c(6, 6, 6, 6, 6)),   slope = 0,   windSpeedSI = 11 )  fire_Rothermel(   modeltype,   wSI,   sSI,   delta,   mx_dead,   hSI,   mSI,   u,   windDir,   slope,   aspect )"},{"path":"https://emf-creaf.github.io/medfate/reference/fire_behaviour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fire behaviour functions — fire_behaviour","text":"FCCSpropsSI data frame describing properties five fuel strata (canopy, shrub, herbs, dead woody litter) returned fuel_FCCS. MliveSI Moisture live fuels (percent dry weight) canopy, shrub, herb strata. Live moisture values drawn column ActFCM FCCSpropsSI available (see fuel_FCCS). Otherwise, moisture values supplied MliveSI used. MdeadSI Moisture dead fuels (percent dry weight) canopy, shrub, herb, woody litter strata. slope Slope (degrees). windSpeedSI Wind speed (m/s) 20 ft (6 m) vegetation (default 11 m/s = 40 km/h) modeltype 'S'(tatic) 'D'(ynamic) wSI vector fuel load (t/ha) five fuel classes. sSI vector surface--volume ratio (m2/m3) five fuel classes. delta value fuel bed depth (cm). mx_dead value dead fuel moisture extinction (percent). hSI vector heat content (kJ/kg) five fuel classes. mSI vector percent moisture dry weight basis (percent) five fuel classes. u value windspeed (m/s) midflame height. windDir Wind direction (degrees north). North means blowing north south. aspect Aspect (degrees north).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fire_behaviour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fire behaviour functions — fire_behaviour","text":"functions return list fire behavior variables. case fire_FCCS, function returns variables three blocks (lists SurfaceFire, CrownFire FirePotentials), values : SurfaceFire$`midflame_WindSpeed [m/s]`: Midflame wind speed surface fire. SurfaceFire$phi_wind: Spread rate modifier due wind. SurfaceFire$phi_slope: Spread rate modifier due slope. SurfaceFire$`I_R_surf [kJ/m2/min]`: Intensity surface fire reaction. SurfaceFire$`I_R_litter [kJ/m2/min]`: Intensity litter fire reaction. SurfaceFire$`q_surf [kJ/m2]`: Heat sink surface fire. SurfaceFire$`q_litter [kJ/m2]`: Heat sink litter fire. SurfaceFire$xi_surf: Propagating flux ratio surface fire. SurfaceFire$xi_litter: Propagating flux ratio litter fire. SurfaceFire$`ROS_surf [m/min]`: Spread rate surface fire(without accounting faster spread litter layer). SurfaceFire$`ROS_litter [m/min]`: Spread rate litter fire. SurfaceFire$`ROS_windslopecap [m/min]`: Maximum surface fire spread rate according wind speed. SurfaceFire$`ROS [m/min]`: Final spread rate surface fire. SurfaceFire$`I_b [kW/m]`: Fireline intensity surface fire. SurfaceFire$`FL [m]`: Flame length surface fire. CrownFire$`I_R_canopy [kJ/m2/min]`: Intensity canopy fire reaction. CrownFire$`I_R_crown [kJ/m2/min]`: Intensity crown fire reaction (adding surface canopy reactions). CrownFire$`q_canopy [kJ/m2]`: Heat sink canopy fire. CrownFire$`q_crown [kJ/m2]`: Heat sink crown fire (adding surface canopy heat sinks). CrownFire$xi_surf: Propagating flux ratio crown fire. CrownFire$`canopy_WindSpeed [m/s]`: Wind speed canopy fire (canopy top wind speed). CrownFire$WAF: Wind speed adjustment factor crown fires. CrownFire$`ROS [m/min]`: Spread rate crown fire. CrownFire$Ic_ratio: Crown initiation ratio. CrownFire$`I_b [kW/m]`: Fireline intensity crown fire. CrownFire$`FL [m]`: Flame length crown fire. FirePotentials$RP: Surface fire reaction potential ([0-9]). FirePotentials$SP: Surface fire spread rate potential ([0-9]). FirePotentials$FP: Surface fire flame length potential ([0-9]). FirePotentials$SFP: Surface fire potential ([0-9]). FirePotentials$IC: Crown initiation potential ([0-9]). FirePotentials$TC: Crown--crown transmission potential ([0-9]). FirePotentials$RC: Crown fire spread rate potential ([0-9]). FirePotentials$CFC: Crown fire potential ([0-9]).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fire_behaviour.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fire behaviour functions — fire_behaviour","text":"Default moisture, slope windspeed values benchmark conditions used calculate fire potentials (Sandberg et al. 2007) map vulnerability fire.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fire_behaviour.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fire behaviour functions — fire_behaviour","text":"Default moisture, slope windspeed values benchmark conditions used calculate fire potentials (Sandberg et al. 2007) map vulnerability fire.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fire_behaviour.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fire behaviour functions — fire_behaviour","text":"Albini, F. . (1976). Computer-based models wildland fire behavior: users' manual. Ogden, UT: US Department Agriculture, Forest Service, Intermountain Forest Range Experiment Station. Rothermel, R. C. 1972. mathematical model predicting fire spread wildland fuels. USDA Forest Service Research Paper INT USA. Prichard, S. J., D. V Sandberg, R. D. Ottmar, E. Eberhardt, . Andreu, P. Eagle, K. Swedin. 2013. Classification System Version 3.0: Technical Documentation.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/fire_behaviour.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fire behaviour functions — fire_behaviour","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fire_behaviour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fire behaviour functions — fire_behaviour","text":"","code":"#Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Calculate fuel properties according to FCCS fccs <- fuel_FCCS(exampleforest, SpParamsMED) fccs #>                 w  cover hbc htc habc hatc       delta        rhob     rhop #> canopy 0.52550038 100.00 2.7 7.1  2.6  7.9 4.791658510  0.10966983 592.0044 #> shrub  0.01407945   3.75 0.0 0.1  0.1  0.8 0.642625347  0.02190927 412.0091 #> herb   0.01929299  10.00 0.0  NA  0.0   NA 0.200000000  0.09646495 400.0000 #> woody  0.16542073     NA 0.0  NA  0.0   NA 0.006258824 26.43000000 438.9106 #> litter 0.23060466     NA 0.0  NA  0.0   NA 0.011699765 19.71019565 370.9679 #>                  PV         beta   betarel etabetarel     sigma        pDead #> canopy 9.181138e-04 1.916067e-04 0.1276082  0.3053187  5284.915 0.0004081897 #> shrub  3.417267e-05 5.317666e-05 0.2856939  0.5836066  4141.000 0.1448400000 #> herb   4.823248e-05 2.411624e-04 0.6924824  0.9418071 11483.000 0.0000000000 #> woody  3.768894e-04 6.021728e-02 0.6924824  0.9418071  1601.050 1.0000000000 #> litter 6.216297e-04 5.313181e-02 9.1968815  0.1441747  7401.336 1.0000000000 #>              FAI        h           RV   MinFMC    MaxFMC ActFMC #> canopy 5.0076821 21059.75 8.876630e-04 75.21455 113.45355     NA #> shrub  0.1415090 20117.67 3.417267e-05 63.64891  96.53441     NA #> herb   0.5538535 18608.00 4.823248e-05       NA        NA     NA #> woody  0.6034187 18608.00 3.768894e-04       NA        NA     NA #> litter 4.6008905 18608.00 6.216297e-04       NA        NA     NA    #Calculate fire behavior according to FCCS fire_FCCS(fccs) #> $SurfaceFire #> $SurfaceFire$`midflame_WindSpeed [m/s]` #> [1] 2.232265 #>  #> $SurfaceFire$phi_wind #> [1] 17.58488 #>  #> $SurfaceFire$phi_slope #> [1] 0 #>  #> $SurfaceFire$`I_R_surf [kJ/m2/min]` #> [1] 15797.37 #>  #> $SurfaceFire$`I_R_litter [kJ/m2/min]` #> [1] 2431.865 #>  #> $SurfaceFire$`q_surf [kJ/m2]` #> [1] 16391 #>  #> $SurfaceFire$`q_litter [kJ/m2]` #> [1] 1652.455 #>  #> $SurfaceFire$xi_surf #> [1] 0.1008317 #>  #> $SurfaceFire$xi_litter #> [1] 0.1628295 #>  #> $SurfaceFire$`ROS_surf [m/min]` #> [1] 1.80737 #>  #> $SurfaceFire$`ROS_litter [m/min]` #> [1] 4.456703 #>  #> $SurfaceFire$`ROS_windslopecap [m/min]` #> [1] 133.9359 #>  #> $SurfaceFire$`ROS [m/min]` #> [1] 4.456703 #>  #> $SurfaceFire$`I_b [kW/m]` #> [1] 385.2773 #>  #> $SurfaceFire$`t_r [s]` #> [1] 19.68641 #>  #> $SurfaceFire$`FL [m]` #> [1] 1.19846 #>  #>  #> $CrownFire #> $CrownFire$`I_R_canopy [kJ/m2/min]` #> [1] 21279.7 #>  #> $CrownFire$`I_R_crown [kJ/m2/min]` #> [1] 37077.07 #>  #> $CrownFire$`q_canopy [kJ/m2]` #> [1] 341.4614 #>  #> $CrownFire$`q_crown [kJ/m2]` #> [1] 16732.46 #>  #> $CrownFire$xi_crown #> [1] 0.07654697 #>  #> $CrownFire$`canopy_WindSpeed [m/s]` #> [1] 5.006563 #>  #> $CrownFire$WAF #> [1] 2.027292 #>  #> $CrownFire$`ROS_crown [m/min]` #> [1] 16.86238 #>  #> $CrownFire$`I_b_crown [kW/m]` #> [1] 2485.778 #>  #> $CrownFire$`t_r_crown [s]` #> [1] 14.30308 #>  #> $CrownFire$Ic_ratio #> [1] 0.6232663 #>  #> $CrownFire$`FL_crown [m]` #> [1] 6.375402 #>  #>  #> $FirePotentials #> $FirePotentials$RP #> [1] 2.984799 #>  #> $FirePotentials$SP #> [1] 9 #>  #> $FirePotentials$FP #> [1] 4.957289 #>  #> $FirePotentials$SFP #> [1] 9 #>  #> $FirePotentials$IC #> [1] 3.639106 #>  #> $FirePotentials$TC #> [1] 9 #>  #> $FirePotentials$RC #> [1] 7.437928 #>  #> $FirePotentials$CFP #> [1] 5.202635 #>  #>"},{"path":"https://emf-creaf.github.io/medfate/reference/fire_severity.html","id":null,"dir":"Reference","previous_headings":"","what":"Fire severity functions — fire_severity","title":"Fire severity functions — fire_severity","text":"Functions estimate fire effects foliage, buds cambium, based model Michaletz & Johnson (2008)","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fire_severity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fire severity functions — fire_severity","text":"","code":"fire_plumeTemperature(Ib_surf, z, T_air = 25, rho_air = 1.169)  fire_barkThermalDiffusivity(fmc_bark, rho_bark = 500, T_air = 25)  fire_radialBoleNecrosis(   Ib_surf,   t_res,   bark_diffusivity,   T_air = 25,   rho_air = 1.169,   T_necrosis = 60 )  fire_leafThermalFactor(SLA, h = 130, c = 2500)  fire_necrosisCriticalTemperature(   t_res,   thermal_factor,   T_air = 25,   T_necrosis = 60 )  fire_necrosisHeight(   Ib_surf,   t_res,   thermal_factor,   T_air = 25,   rho_air = 1.169,   T_necrosis = 60 )"},{"path":"https://emf-creaf.github.io/medfate/reference/fire_severity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fire severity functions — fire_severity","text":"Ib_surf Surface fireline intensity (kW/m). z height (m). T_air Air temperature (degrees Celsius). rho_air Air density (kg/m3). fmc_bark Bark moisture content (% dry weight). rho_bark Bark density (kg/m3). t_res fire residence time (seconds). bark_diffusivity Bark thermal diffusivity (m2/s). T_necrosis Temperature tissue necrosis (degrees Celsius). SLA Specific leaf area (m2/kg). h Heat transfer coefficient c Specific heat capacity thermal_factor Tissue thermal factor.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fire_severity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fire severity functions — fire_severity","text":"Function fire_plumeTemperature returns plume temperature given height. Function fire_barkThermalDiffusivity returns bark thermal diffusivity given bark moisture value. Function fire_radialBoleNecrosis returns depth radial bole necrosis cm. Function fire_leafThermalFactor returns thermal factor leaves function specific leaf area. Function fire_necrosisCriticalTemperature returns (plume) temperature yielding necrosis given residence time tissue thermal factor. Function fire_necrosisHeight returns height (m) necrosis tissues given thermal factor.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fire_severity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fire severity functions — fire_severity","text":"Michaletz, S.T., Johnson, E.. 2006. heat transfer model crown scorch forest fires. Can. J. . Res. 36: 2839–2851. doi:10.1139/X06-158. Michaletz ST, Johnson EA. 2008. biophysical process model tree mortality surface fires. Canadian Journal Forest Research 38: 2013–2029.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fordyn.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest dynamics — fordyn","title":"Forest dynamics — fordyn","text":"Function fordyn implements forest dynamics model simulates growth, mortality, recruitment (optionally) management actions given forest stand period specified input climatic data.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fordyn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest dynamics — fordyn","text":"","code":"fordyn(   forest,   soil,   SpParams,   meteo,   control,   latitude,   elevation = NA,   slope = NA,   aspect = NA,   CO2ByYear = numeric(0),   management_function = NULL,   management_args = NULL )"},{"path":"https://emf-creaf.github.io/medfate/reference/fordyn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forest dynamics — fordyn","text":"forest object class forest. Alternatively, output previous run, continuing previous simulation. soil object class data.frame soil. SpParams data frame species parameters (see SpParamsMED SpParamsDefinition). meteo data frame daily weather data series (see spwb). control list default control parameters (see defaultControl). latitude Latitude (degrees). elevation, slope, aspect Elevation sea level (m), slope (degrees) aspect (degrees North). CO2ByYear named numeric vector years names atmospheric CO2 concentration (ppm) values. Used specify annual changes CO2 concentration along simulation (alternative specifying daily values meteo). management_function function implements forest management actions (see details). management_args list additional arguments passed management_function.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fordyn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forest dynamics — fordyn","text":"list class 'fordyn' following elements: \"StandSummary\": data frame stand-level summaries (tree basal area, tree density, shrub cover, etc.) beginning simulation simulated year. \"SpeciesSummary\": data frame species-level summaries (tree basal area, tree density, shrub cover, etc.) beginning simulation simulated year. \"CohortSummary\": data frame cohort-level summaries (tree basal area, tree density, shrub cover, etc.) beginning simulation simulated year. \"TreeTable\": data frame tree-cohort data (species, density, diameter, height, etc.) beginning simulation () simulated year. \"DeadTreeTable\": data frame dead tree-cohort data (species, density, diameter, height, etc.) beginning simulation simulated year. \"CutTreeTable\": data frame cut tree data (species, density, diameter, height, etc.) simulated year. \"ShrubTable\": data frame shrub-cohort data (species, density, cover, height, etc.) beginning simulation simulated year. \"DeadShrubTable\": data frame dead shrub-cohort data (species, density, cover, height, etc.) beginning simulation () simulated year. \"CutShrubTable\": data frame cut shrub data (species, density, cover, height, etc.) simulated year. \"ForestStructures\": list forest object stand beginning simulation simulated year. \"GrowthResults\": list results calling function growth simulated year. \"ManagementArgs\": list management arguments used another call fordyn. \"NextInputObject\": object class growthInput used subsequent simulation. \"NextForestObject\": object class forest used subsequent simulation.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fordyn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forest dynamics — fordyn","text":"Function fordyn simulates forest dynamics annual time steps, building simulation functions. simulated year, function performs following steps: Calls function growth simulate daily water/carbon balance, growth mortality processes update forest object. required, calls function management_function, using parameters forest object management_args, may result density reduction existing plant cohorts /set new planted cohorts. Simulate natural recruitment (species present stand given seed rain input). Prepares input function growth next annual time step. Store forest status, management arguments, summaries. enable forest management, user needs provide function implements , passed fordyn via argument management_function. function  following arguments: \"x\": forest object representing stand managed. \"args\": list parameters regulating behavior management function. \"verbose\": logical flag enable console output execution management function. return list following elements: \"action\": string identifying action performed (e.g. \"thinning\"). \"N_tree_cut\": vector density trees removed. \"Cover_shrub_cut\": vector cover shrubs removed. \"planted_forest\": object class forest new plant cohorts resulting tree/shrub planting. \"management_args\": list management arguments used next call management function. example management function provided defaultManagementFunction.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fordyn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Forest dynamics — fordyn","text":"De Cáceres M, Molowny-Horas R, Cabon , Martínez-Vilalta J, Mencuccini M, García-Valdés R, Nadal-Sala D, Sabaté S, Martin-StPaul N, Morin X, D'Adamo F, Batllori E, Améztegui (2023) MEDFATE 2.9.3: trait-enabled model simulate Mediterranean forest function dynamics regional scales. Geoscientific Model Development 16: 3165-3201 (https://doi.org/10.5194/gmd-16-3165-2023).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/fordyn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forest dynamics — fordyn","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fordyn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forest dynamics — fordyn","text":"","code":"# \\donttest{ #Load example daily meteorological data data(examplemeteo) #Prepare a two-year meteorological data with half precipitation during  #the second year meteo2001 <- examplemeteo meteo2002 <- examplemeteo meteo2002$Precipitation <- meteo2002$Precipitation/2 meteo2002$dates <- seq(as.Date(\"2002-01-01\"),                             as.Date(\"2002-12-31\"), by=\"day\") meteo_01_02 <- rbind(meteo2001, meteo2002)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Call simulation function fd<-fordyn(exampleforest, examplesoil,             SpParamsMED, meteo_01_02, control,            latitude = 41.82592, elevation = 100) #> Simulating year 2001 (1/2):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1 #> Simulating year 2002 (2/2):  (a) Growth/mortality, (b) Regeneration nT = 2 nS = 1  #Stand-level summaries fd$StandSummary #>   Step NumTreeSpecies NumTreeCohorts NumShrubSpecies NumShrubCohorts #> 1    0              2              2               1               1 #> 2    1              2              2               1               1 #> 3    2              2              2               1               1 #>   TreeDensityLive TreeBasalAreaLive DominantTreeHeight DominantTreeDiameter #> 1        552.0000          25.03330           800.0000             37.55000 #> 2        551.3663          25.20814           806.2122             37.66571 #> 3        550.7272          25.36317           811.8206             37.77070 #>   QuadraticMeanTreeDiameter HartBeckingIndex ShrubCoverLive BasalAreaDead #> 1                  24.02949         53.20353       3.750000    0.00000000 #> 2                  24.12711         52.82391       3.092051    0.03917375 #> 3                  24.21523         52.48941       3.133367    0.03979292 #>   ShrubCoverDead BasalAreaCut ShrubCoverCut #> 1    0.000000000            0             0 #> 2    0.005308898            0             0 #> 3    0.004781110            0             0  #Tree table by annual steps fd$TreeTable #>   Step Year Cohort          Species      DBH   Height        N Z50  Z95 ObsID #> 1    0   NA T1_148 Pinus halepensis 37.55000 800.0000 168.0000 100  600  <NA> #> 2    0   NA T2_168     Quercus ilex 14.60000 660.0000 384.0000 300 1000  <NA> #> 3    1 2001 T1_148 Pinus halepensis 37.66571 806.2122 167.6992 100  600  <NA> #> 4    1 2001 T2_168     Quercus ilex 14.71218 663.4915 383.6671 300 1000  <NA> #> 5    2 2002 T1_148 Pinus halepensis 37.77070 811.8206 167.3957 100  600  <NA> #> 6    2 2002 T2_168     Quercus ilex 14.81392 666.6497 383.3315 300 1000  <NA>  #Dead tree table by annual steps fd$DeadTreeTable #>   Step Year Cohort          Species      DBH   Height         N N_starvation #> 1    1 2001 T1_148 Pinus halepensis 37.66571 806.2122 0.3007828            0 #> 2    1 2001 T2_168     Quercus ilex 14.71218 663.4915 0.3328893            0 #> 3    2 2002 T1_148 Pinus halepensis 37.77070 811.8206 0.3035177            0 #> 4    2 2002 T2_168     Quercus ilex 14.81392 666.6497 0.3356219            0 #>   N_dessication N_burnt Z50  Z95 ObsID #> 1             0       0 100  600  <NA> #> 2             0       0 300 1000  <NA> #> 3             0       0 100  600  <NA> #> 4             0       0 300 1000  <NA> # }"},{"path":"https://emf-creaf.github.io/medfate/reference/forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of a forest stand. — forest","title":"Description of a forest stand. — forest","text":"exampleforest example forest stand description, whereas exampleforest2 alternative forest description leaf area index crown ratio supplied instead structural (density, DBH cover) parameters.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Description of a forest stand. — forest","text":"object class forest contains description woody (tree shrub) cohorts herb layer forest patch. following structure (see details): treeData: data frame tree cohorts (rows) following columns: Species: String species (taxon) name non-negative integer tree species identity (.e., 0,1,2,...) matching SpParams. Height: Total tree height (cm). DBH: Tree diameter breast height (cm). N: Density (number individuals/hectare) measured tree represents. Z50: Depth (mm) corresponding 50% fine roots. Z95: Depth (mm) corresponding 95% fine roots. shrubData: data frame shrub cohorts (rows) following columns: Species: String species (taxon) name non-negative integer shrub species identity (.e., 0,1,2,...) matching SpParams. Height: Average total height plants (cm). Cover: Percent cover. Z50: Depth (mm) corresponding 50% fine roots. Z95: Depth (mm) corresponding 95% fine roots. herbCover: Percent cover herb layer (optional). herbHeight: Mean height (cm) herb layer (optional). seedBank: data frame containing seed bank information following columns: Species: String species (taxon) name non-negative integer tree species identity (.e., 0,1,2,...) matching SpParams. Percent: Amount seeds relation full seed bank (%).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Description of a forest stand. — forest","text":"DGCN (2005). Tercer Inventario Forestal Nacional (1997-2007): Catalunya. Dirección General de Conservación de la Naturaleza, Ministerio de Medio Ambiente, Madrid.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Description of a forest stand. — forest","text":"structure presented forest objects corresponds required data elements. forest object can contain additional information available. Data frames treeData shrubData can contain additional columns: LAI: Leaf area index (m2/m2) FoliarBiomass: Standing dry biomass leaves (kg/m2) FuelLoading: Fine fuel loading (kg/m2) CrownRatio: ratio crown length total height (0 1) Z100: Depth (mm) corresponding 100% fine roots (specify truncated root distribution). ObsID: string identifying plant cohorts stage forest sampling. Used track fate particular plant cohorts simulations.   fordyn, use identifiers can combined control option keepCohortsWithObsID cohorts merged   removed simulations. Similarly, one can define forest list elements herbLAI, herbFoliarBiomass herbFuelLoading. values used override allometry-based estimates variables initializing inputs functions spwb spwb_day. Note leaf area index, foliar biomass fuel loading related entities, treated medfate. Therefore, users expected supply one , time.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of a forest stand. — forest","text":"","code":"data(exampleforest) data(exampleforest2)"},{"path":"https://emf-creaf.github.io/medfate/reference/forest2aboveground.html","id":null,"dir":"Reference","previous_headings":"","what":"Input for simulation models (deprecated) — forest2aboveground","title":"Input for simulation models (deprecated) — forest2aboveground","text":"Functions forest2spwbInput() forest2growthInput() take object class forest soil data input create input objects simulation functions spwb (pwb) growth, respectively. Function forest2aboveground() calculates aboveground variables leaf area index. Function forest2belowground() calculates belowground variables fine root distribution.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest2aboveground.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input for simulation models (deprecated) — forest2aboveground","text":"","code":"forest2aboveground(x, SpParams, gdd = NA_real_, loading = FALSE)  forest2belowground(x, soil, SpParams)  forest2spwbInput(x, soil, SpParams, control)  forest2growthInput(x, soil, SpParams, control)"},{"path":"https://emf-creaf.github.io/medfate/reference/forest2aboveground.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input for simulation models (deprecated) — forest2aboveground","text":"x object class forest. SpParams data frame species parameters (see SpParamsDefinition SpParamsMED). gdd Growth degree days account leaf phenology effects (Celsius). left NA applications. loading logical flag indicate fuel loading included (fire hazard calculations). soil object class data.frame soil, containing soil parameters per soil layer. control list default control parameters (see defaultControl).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest2aboveground.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Input for simulation models (deprecated) — forest2aboveground","text":"Function forest2aboveground() returns data frame following columns (rows identified specified function plant_ID): SP: Species identity (integer) (first species 0). N: Cohort density (ind/ha) (see function plant_density). DBH: Tree diameter breast height (cm). H: Plant total height (cm). CR: Crown ratio (crown length total height) (0 1). LAI_live: Live leaf area index (m2/m2) (one-side leaf area relative plot area), includes leaves winter dormant buds. LAI_expanded: Leaf area index expanded leaves (m2/m2) (one-side leaf area relative plot area). LAI_dead: Dead leaf area index (m2/m2) (one-side leaf area relative plot area). Loading: Fine fuel loading (kg/m2), loading = TRUE.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest2aboveground.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Input for simulation models (deprecated) — forest2aboveground","text":"Function forest2aboveground() extracts height species identity plant cohorts x, calculate leaf area index crown ratio. IMPORTANT NOTE: Function names forest2spwbInput() forest2growthInput() now internal deprecated, can still used back-compatibility. correspond functions spwbInput growthInput","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/forest2aboveground.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Input for simulation models (deprecated) — forest2aboveground","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest2aboveground.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input for simulation models (deprecated) — forest2aboveground","text":"","code":"#Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  # Aboveground parameters forest2aboveground(exampleforest, SpParamsMED) #>         SP        N   DBH Cover   H        CR   LAI_live LAI_expanded LAI_dead #> T1_148 148 168.0000 37.55    NA 800 0.6605196 0.84874773   0.84874773        0 #> T2_168 168 384.0000 14.60    NA 660 0.6055642 0.70557382   0.70557382        0 #> S1_165 165 749.4923    NA  3.75  80 0.8032817 0.03062604   0.03062604        0 #>        LAI_nocomp ObsID #> T1_148 1.29720268  <NA> #> T2_168 1.01943205  <NA> #> S1_165 0.04412896  <NA>  # Example of aboveground parameters taken from a forest # described using LAI and crown ratio data(exampleforest2) forest2aboveground(exampleforest2, SpParamsMED) #>         SP  N DBH Cover   H   CR LAI_live LAI_expanded LAI_dead LAI_nocomp #> T1_148 148 NA  NA    NA 800 0.66     0.80         0.80        0       0.80 #> T2_168 168 NA  NA    NA 660 0.60     0.50         0.50        0       0.50 #> S1_165 165 NA  NA    NA  80 0.80     0.03         0.03        0       0.03 #>        ObsID #> T1_148  <NA> #> T2_168  <NA> #> S1_165  <NA>  # Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  # Bewowground parameters (distribution of fine roots) forest2belowground(exampleforest, examplesoil, SpParamsMED) #>                1         2          3           4 #> T1_148 0.8604899 0.1194556 0.01511005 0.004944476 #> T2_168 0.5008953 0.4505941 0.04064831 0.007862284 #> S1_165 0.6799879 0.2737911 0.03567632 0.010544678"},{"path":"https://emf-creaf.github.io/medfate/reference/forest_mapWoodyTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Map forest plot data — forest_mapWoodyTables","title":"Map forest plot data — forest_mapWoodyTables","text":"Mapping functions facilitate building forest objects forest plot data","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest_mapWoodyTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map forest plot data — forest_mapWoodyTables","text":"","code":"forest_mapTreeTable(x, mapping_x, SpParams, plot_size_x = NULL)  forest_mapShrubTable(y, mapping_y, SpParams, plot_size_y = NULL)  forest_mapWoodyTables(   x = NULL,   y = NULL,   mapping_x = NULL,   mapping_y = NULL,   SpParams,   plot_size_x = NULL,   plot_size_y = NULL )"},{"path":"https://emf-creaf.github.io/medfate/reference/forest_mapWoodyTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map forest plot data — forest_mapWoodyTables","text":"x data frame tree records rows attributes columns. Tree records can correspond individual trees groups trees associated density. mapping_x named character vector specify mappings columns x attributes treeData data frames. Accepted names (corresponding specifications columns x : SpParams data frame species parameters (see SpParamsMED) valid species names drawn. plot_size_x size tree plot sampled area (m2). Alternatively, 'plot_size_x' can column x specified mapping_x indicate trees measured different subplots , therefore, represent different densities per hectare. y data frame shrub records rows attributes columns. Records can correspond individual shrubs (crown dimensions height) groups shrubs associated cover estimate. mapping_y named character vector specify mappings columns y attributes shrubData data frames. Accepted names (corresponding specifications columns y) : \"Species\": Species code (follow codes SpParams). \"Species.name\": Species name. case, species code drawn matching names species names SpParams. \"N\": Tree density (ind./ha). \"Cover\": Shrub cover (%). \"D1\": Shrub largest crown diameter (cm). \"D2\": Shrub crown diameter orthogonal largest one (cm). \"plot.size\": Plot size (m2) record refers . used calculate tree density (stems per hectare) supplied shrub cover shrub data given individual level. \"DBH\": Diameter breast height (cm). \"Height\": Tree shrub height (cm). \"Z50\": Depth (mm) corresponding 50% fine roots. \"Z95\": Depth (mm) corresponding 95% fine roots. plot_size_y size shrub plot sampled area (m2). Alternatively, 'plot_size_y' can column y specified mapping_y indicate shrubs measured different subplots , therefore, represent different cover values.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest_mapWoodyTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map forest plot data — forest_mapWoodyTables","text":"Functions forest_mapTreeTable forest_mapShrubTable return data frame structure treeData shrubData forest objects. Function forest_mapWoodyTable returns directly forest object.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/forest_mapWoodyTables.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Map forest plot data — forest_mapWoodyTables","text":"Miquel De Cáceres Ainsa, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest_mapWoodyTables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map forest plot data — forest_mapWoodyTables","text":"","code":"# Load species parameters data(SpParamsMED)  # Create an empty forest object f <- emptyforest()  # (1) Mapping tree data # Load Poblet tree data data(poblet_trees)  # Subset control plot x <- subset(poblet_trees, Plot.Code==\"POBL_CTL\")  # Estimate sampled area (15-m radius plot) sampled_area <- pi*15^2  # Define mapping mapping_x <- c(\"Species.name\" = \"Species\", \"DBH\" = \"Diameter.cm\")  # Map tree data for plot 'POBL_CTL' f$treeData <- forest_mapTreeTable(x,                     mapping_x = mapping_x, SpParams = SpParamsMED,                     plot_size_x = sampled_area)  # (2) Mapping shrub individual data # # Create the individual shrub data frame species <- c(\"Erica arborea\",\"Cistus albidus\", \"Erica arborea\", \"Cistus albidus\", \"Cistus albidus\") H <- c(200,50,100,40,30) D1 <- c(140,40,100, 35,30) D2 <- D1 y <- data.frame(species, H, D1, D2)  # Define mapping (D1 and D2 map to variables with the same name) mapping_y <- c(\"Species.name\"= \"species\", \"Height\" =\"H\", \"D1\", \"D2\")  # Map individual shrub data to cover data (here each individual becomes a cohort) # assuming that the sampled area was 4 m2 f$shrubData <- forest_mapShrubTable(y,                      mapping_y = mapping_y, SpParams = SpParamsMED,                      plot_size_y = 4)  # (3) Print forest attributes summary(f, SpParamsMED) #> Tree BA (m2/ha): 42.6957047  adult trees: 42.6957047  saplings: 0  #> Density (ind/ha) adult trees: 3777.277316  saplings: 0  shrubs (estimated): 19051.5105038  #> Cover (%) adult trees: 100  saplings: 0  shrubs: 65.4334845  herbs: 0  #> LAI (m2/m2) total: 6.0900572  adult trees: 5.6770407  saplings: 0  shrubs: 0.4130165  herbs: 0  #> Fuel loading (kg/m2) total: 1.5959112  adult trees: 1.493419  saplings: 0  shrubs: 0.1024922  herbs: 0  #> PAR ground (%): NA  SWR ground (%): NA   # (4) Forest initialization in a single step f <- forest_mapWoodyTables(x, y,                            mapping_x = mapping_x, mapping_y = mapping_y,                            SpParams = SpParamsMED,                            plot_size_x = sampled_area, plot_size_y = 4) summary(f, SpParamsMED) #> Tree BA (m2/ha): 42.6957047  adult trees: 42.6957047  saplings: 0  #> Density (ind/ha) adult trees: 3777.277316  saplings: 0  shrubs (estimated): 19051.5105038  #> Cover (%) adult trees: 100  saplings: 0  shrubs: 65.4334845  herbs: 0  #> LAI (m2/m2) total: 6.0900572  adult trees: 5.6770407  saplings: 0  shrubs: 0.4130165  herbs: 0  #> Fuel loading (kg/m2) total: 1.5959112  adult trees: 1.493419  saplings: 0  shrubs: 0.1024922  herbs: 0  #> PAR ground (%): NA  SWR ground (%): NA"},{"path":"https://emf-creaf.github.io/medfate/reference/forest_simplification.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest complexity reduction — forest_simplification","title":"Forest complexity reduction — forest_simplification","text":"Functions forest_mergeTrees forest_mergeShrubs merge cohorts forest object. Function forest_reduceToDominant performs strongest simplification plant cohorts (see details).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest_simplification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest complexity reduction — forest_simplification","text":"","code":"forest_mergeTrees(x, byDBHclass = TRUE, keepCohortsWithObsID = FALSE)  forest_mergeShrubs(x, byHeightclass = TRUE, keepCohortsWithObsID = FALSE)  forest_reduceToDominant(x, SpParams)"},{"path":"https://emf-creaf.github.io/medfate/reference/forest_simplification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forest complexity reduction — forest_simplification","text":"x object class forest. byDBHclass Logical flag indicate 5-cm tree DBH classes kept separated. keepCohortsWithObsID Logical flag indicate cohorts non-missin ObsID spared merging. byHeightclass Boolean flag indicate 10-cm shrub height classes kept separated. SpParams data frame species parameters (see SpParamsDefinition SpParamsMED).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest_simplification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forest complexity reduction — forest_simplification","text":"Another forest object simplified structure/composition, depending function.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest_simplification.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forest complexity reduction — forest_simplification","text":"Tree DBH classes defined 5-cm intervals, whereas shrub height classes defined 10-cm intervals. Tree DBH shrub height classes defined specific size (.e. larger plants merged) corresponding 52.5 cm 90 cm, respectively. Function forest_reduceToDominant simplifies input forest tree cohort highest LAI, among tree species highest LAI. leaf area index whole tree layer attributed chosen cohort. performed shrub layer.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/forest_simplification.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forest complexity reduction — forest_simplification","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/forest_simplification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forest complexity reduction — forest_simplification","text":"","code":"# Example forest data data(\"exampleforest\")  # Reduce to dominant tree and dominant shrub reduced <- forest_reduceToDominant(exampleforest, SpParamsMED)  # Check that overall LAI does not change stand_LAI(exampleforest, SpParamsMED) #> [1] 1.758585 stand_LAI(reduced, SpParamsMED) #> [1] 1.758585"},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuel stratification and fuel characteristics — fuel_properties","title":"Fuel stratification and fuel characteristics — fuel_properties","text":"Function fuel_stratification provides stratification stand understory canopy strata. Function fuel_FCCS calculates fuel characteristics forest object following adaptation protocols described Fuel Characteristics Classification System (Prichard et al. 2013).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuel stratification and fuel characteristics — fuel_properties","text":"","code":"fuel_stratification(   object,   SpParams,   gdd = NA_real_,   heightProfileStep = 10,   maxHeightProfile = 5000,   bulkDensityThreshold = 0.05 )  fuel_FCCS(   object,   SpParams,   cohortFMC = as.numeric(c()),   loadingOffset = as.numeric(c(0, 0, 0, 0, 0)),   gdd = NA_real_,   heightProfileStep = 10,   maxHeightProfile = 5000,   bulkDensityThreshold = 0.05,   depthMode = \"crownaverage\" )"},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuel stratification and fuel characteristics — fuel_properties","text":"object object class forest SpParams data frame species parameters (see SpParamsMED). gdd Growth degree-days. heightProfileStep Precision fuel bulk density profile. maxHeightProfile Maximum height fuel bulk density profile. bulkDensityThreshold Minimum fuel bulk density delimit fuel strata. cohortFMC numeric vector (actual) fuel moisture content cohort. loadingOffset vector length five fine fuel loading values (canopy, shrub, herb, woody litter) added loading estimations forest. depthMode Specifies fuel depth (therefore canopy understory bulk density) estimated: \"crownaverage\": weighed average crown lengths using loadings weights. \"profile\": difference base top heights bulk density profiles. \"absoluteprofile\": difference absolute base absolute top heights bulk density profiles.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuel stratification and fuel characteristics — fuel_properties","text":"Function fuel_FCCS returns data frame five rows corresponding  fuel layers: canopy, shrub, herb, woody litter. Columns correspond fuel properties: w: Fine fuel loading (kg/m2). cover: Percent cover. hbc: Height base crowns (m). htc: Height top crowns (m). delta: Fuel depth (m). rhob: Fuel bulk density (kg/m3). rhop: Fuel particle density (kg/m3). PV: Particle volume (m3/m2). beta: Packing ratio (unitless). betarel: Relative packing ratio (unitless). etabetarel: Reaction efficiency (unitless). sigma: Surface area--volume ratio (m2/m3). pDead: Proportion dead fuels. FAI: Fuel area index (unitless). h: High heat content (kJ/kg). RV: Reactive volume (m3/m2). MinFMC: Minimum fuel moisture content (percent dry weight). MaxFMC: Maximum fuel moisture content (percent dry weight). ActFMC: Actual fuel moisture content (percent dry weight). set NA parameter cohortFMC empty. Function fuel_stratification returns list following items: surfaceLayerBaseHeight: Base height crowns shrubs surface layer (cm). surfaceLayerTopHeight: Top height crowns shrubs surface layer (cm). understoryLAI: Cumulated LAI understory layer (.e. leaf area comprised surface layer base top heights). canopyBaseHeight: Base height tree crowns canopy (cm). canopyTopHeight: Top height tree crowns canopy (cm). canopyLAI: Cumulated LAI canopy (.e. leaf area comprised canopy base top heights).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_properties.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuel stratification and fuel characteristics — fuel_properties","text":"Prichard, S. J., D. V Sandberg, R. D. Ottmar, E. Eberhardt, . Andreu, P. Eagle, K. Swedin. 2013. Classification System Version 3.0: Technical Documentation. Reinhardt, E., D. Lutes, J. Scott. 2006. FuelCalc: method estimating fuel characteristics. Pages 273–282.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_properties.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fuel stratification and fuel characteristics — fuel_properties","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuel stratification and fuel characteristics — fuel_properties","text":"","code":"#Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Show stratification of fuels fuel_stratification(exampleforest, SpParamsMED) #> $surfaceLayerBaseHeight #> [1] 0 #>  #> $surfaceLayerTopHeight #> [1] 10 #>  #> $surfaceLayerAbsoluteBaseHeight #> [1] 10 #>  #> $surfaceLayerAbsoluteTopHeight #> [1] 80 #>  #> $understoryLAI #> [1] 0 #>  #> $canopyBaseHeight #> [1] 270 #>  #> $canopyTopHeight #> [1] 710 #>  #> $canopyAbsoluteBaseHeight #> [1] 260 #>  #> $canopyAbsoluteTopHeight #> [1] 790 #>  #> $canopyLAI #> [1] 1.453648 #>     #Calculate fuel properties according to FCCS fccs <- fuel_FCCS(exampleforest, SpParamsMED) fccs #>                 w  cover hbc htc habc hatc       delta        rhob     rhop #> canopy 0.52550038 100.00 2.7 7.1  2.6  7.9 4.791658510  0.10966983 592.0044 #> shrub  0.01407945   3.75 0.0 0.1  0.1  0.8 0.642625347  0.02190927 412.0091 #> herb   0.01929299  10.00 0.0  NA  0.0   NA 0.200000000  0.09646495 400.0000 #> woody  0.16542073     NA 0.0  NA  0.0   NA 0.006258824 26.43000000 438.9106 #> litter 0.23060466     NA 0.0  NA  0.0   NA 0.011699765 19.71019565 370.9679 #>                  PV         beta   betarel etabetarel     sigma        pDead #> canopy 9.181138e-04 1.916067e-04 0.1276082  0.3053187  5284.915 0.0004081897 #> shrub  3.417267e-05 5.317666e-05 0.2856939  0.5836066  4141.000 0.1448400000 #> herb   4.823248e-05 2.411624e-04 0.6924824  0.9418071 11483.000 0.0000000000 #> woody  3.768894e-04 6.021728e-02 0.6924824  0.9418071  1601.050 1.0000000000 #> litter 6.216297e-04 5.313181e-02 9.1968815  0.1441747  7401.336 1.0000000000 #>              FAI        h           RV   MinFMC    MaxFMC ActFMC #> canopy 5.0076821 21059.75 8.876630e-04 75.21455 113.45355     NA #> shrub  0.1415090 20117.67 3.417267e-05 63.64891  96.53441     NA #> herb   0.5538535 18608.00 4.823248e-05       NA        NA     NA #> woody  0.6034187 18608.00 3.768894e-04       NA        NA     NA #> litter 4.6008905 18608.00 6.216297e-04       NA        NA     NA"},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_windAdjustmentFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Wind adjustment factor for Rothermel's model — fuel_windAdjustmentFactor","title":"Wind adjustment factor for Rothermel's model — fuel_windAdjustmentFactor","text":"Function fuel_windAdjustmentFactor determines adjustment factor wind surface fires, according Andrews (2012).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_windAdjustmentFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wind adjustment factor for Rothermel's model — fuel_windAdjustmentFactor","text":"","code":"fuel_windAdjustmentFactor(   topShrubHeight,   bottomCanopyHeight,   topCanopyHeight,   canopyCover )"},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_windAdjustmentFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wind adjustment factor for Rothermel's model — fuel_windAdjustmentFactor","text":"topShrubHeight Shrub stratum top height (m). bottomCanopyHeight Canopy base height (m). topCanopyHeight Canopy top height (m). canopyCover Canopy percent cover.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_windAdjustmentFactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wind adjustment factor for Rothermel's model — fuel_windAdjustmentFactor","text":"scalar value 0 1","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_windAdjustmentFactor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wind adjustment factor for Rothermel's model — fuel_windAdjustmentFactor","text":"Andrews, P. L. 2012. Modeling wind adjustment factor midflame wind speed Rothermel’s surface fire spread model. USDA Forest Service - General Technical Report RMRS-GTR:1–39.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/fuel_windAdjustmentFactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wind adjustment factor for Rothermel's model — fuel_windAdjustmentFactor","text":"","code":"#Load example plot plant data  data(exampleforest)    #Default species parameterization data(SpParamsMED)  #Calculate fuel properties according to FCCS fccs <- fuel_FCCS(exampleforest, SpParamsMED)  # Estimate wind adjustment factor fuel_windAdjustmentFactor(fccs$htc[2], fccs$hbc[1], fccs$htc[1], fccs$cover[1]) #> [1] 0.2029332"},{"path":"https://emf-creaf.github.io/medfate/reference/growth.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest growth — growth","title":"Forest growth — growth","text":"Function growth process-based model performs energy, water carbon balances; determines changes water/carbon pools, functional variables (leaf area, sapwood area, root area) structural ones (tree diameter, tree height, shrub cover) woody plant cohorts given forest stand period specified input climatic data.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/growth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest growth — growth","text":"","code":"growth(   x,   meteo,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   CO2ByYear = numeric(0),   waterTableDepth = NA_real_ )"},{"path":"https://emf-creaf.github.io/medfate/reference/growth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forest growth — growth","text":"x object class growthInput. meteo data frame daily meteorological data series (see spwb). latitude Latitude (degrees). elevation, slope, aspect Elevation sea level (m), slope (degrees) aspect (degrees North). CO2ByYear named numeric vector years names atmospheric CO2 concentration (ppm) values. Used specify annual changes CO2 concentration along simulation (alternative specifying daily values meteo). waterTableDepth Water table depth (mm). missing, capillarity rise allowed lower total soil depth.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/growth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forest growth — growth","text":"list class 'growth' following elements: \"latitude\": Latitude (degrees) given input. \"topography\": Vector elevation, slope aspect given input. \"weather\": copy input weather data frame. \"growthInput\": copy object x class growthInput given input. \"growthOutput\": copy final state object x class growthInput. \"WaterBalance\": data frame different water balance variables (see spwb). \"EnergyBalance\": data frame daily values energy balance components soil canopy (transpirationMode = \"Sperry\" transpirationMode = \"Sureau\"; see spwb). \"CarbonBalance\": data frame different stand-level carbon balance components (gross primary production, maintenance respiration, synthesis respiration net primary production), g C · m-2. \"BiomassBalance\": data frame daily values stand biomass balance components (g dry · m-2. \"Temperature\": data frame daily values minimum/mean/maximum temperatures atmosphere (input), canopy soil (transpirationMode = \"Sperry\" transpirationMode = \"Sureau\"; see spwb). \"Soil\": data frame different soil variables  (see spwb). \"Stand\": data frame different stand-level variables (see spwb). \"Plants\": list daily results plant cohorts (see spwb). \"SunlitLeaves\" \"ShadeLeaves\": list daily results sunlit shade leaves (transpirationMode = \"Sperry\" transpirationMode = \"Sureau\"; see spwb). \"LabileCarbonBalance\": list daily labile carbon balance results plant cohorts, elements: \"GrossPhotosynthesis\": Daily gross photosynthesis per dry weight living biomass (g gluc · g dry-1). \"MaintentanceRespiration\": Daily maintenance respiration per dry weight living biomass (g gluc · g dry-1). \"GrowthCosts\": Daily growth costs per dry weight living biomass (g gluc · g dry-1). \"RootExudation\": Root exudation per dry weight living biomass (g gluc · g dry-1). \"LabileCarbonBalance\": Daily labile carbon balance (photosynthesis - maintenance respiration - growth costs - root exudation) per dry weight living biomass (g gluc · g dry-1). \"SugarLeaf\": Sugar concentration (mol·l-1) leaves. \"StarchLeaf\": Starch concentration (mol·l-1) leaves. \"SugarSapwood\": Sugar concentration (mol·l-1) sapwood. \"StarchSapwood\": Starch concentration (mol·l-1) sapwood. \"SugarTransport\":  Average instantaneous rate carbon transferred leaves stem compartments via floem (mol gluc·s-1). \"PlantBiomassBalance\": list daily plant biomass balance results plant cohorts, elements: \"StructuralBiomassBalance\": Daily structural biomass balance (g dry · m-2). \"LabileBiomassBalance\": Daily labile biomass balance (g dry · m-2). \"PlantBiomassBalance\": Daily plant biomass balance, .e. labile change + structural change (g dry · m-2). \"MortalityBiomassLoss\": Biomass loss due mortality (g dry · m-2). \"CohortBiomassBalance\": Daily cohort biomass balance (including mortality) (g dry · m-2). \"PlantStructure\": list daily area biomass values compartments plant cohorts, elements: \"LeafBiomass\": Daily amount leaf structural biomass (g dry) average individual plant cohort. \"SapwoodBiomass\": Daily amount sapwood structural biomass (g dry) average individual plant cohort. \"FineRootBiomass\": Daily amount fine root biomass (g dry) average individual plant cohort. \"LeafArea\": Daily amount leaf area (m2) average individual plant cohort. \"SapwoodArea\": Daily amount sapwood area (cm2) average individual plant cohort. \"FineRootArea\": Daily amount fine root area (m2) average individual plant cohort. \"HuberValue\": ratio sapwood area (target) leaf area (cm2/m2). \"RootAreaLeafArea\": ratio fine root area (target) leaf area (m2/m2). \"DBH\": Diameter breast height (cm) average individual plant cohort. \"Height\": Height (cm) average individual plant cohort. \"GrowthMortality\": list daily growth mortality rates plant cohorts, elements: \"LAgrowth\": Leaf area growth (m2·day-1) average individual plant cohort. \"SAgrowth\": Sapwood area growth rate (cm2·day-1) average individual plant cohort. \"FRAgrowth\": Fine root area growth (m2·day-1) average individual plant cohort. \"StarvationRate\": Daily mortality rate starvation (ind/d-1). \"DessicationRate\": Daily mortality rate dessication (ind/d-1). \"MortalityRate\": Daily mortality rate (cause) (ind/d-1). \"subdaily\": list objects class growth_day, one per day simulated (required control parameters, see defaultControl).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/growth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forest growth — growth","text":"Detailed model description available medfate book. Simulations using 'Sperry' 'Sureau' transpiration modes computationally much expensive using 'Granier' transpiration mode.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/growth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Forest growth — growth","text":"De Cáceres M, Molowny-Horas R, Cabon , Martínez-Vilalta J, Mencuccini M, García-Valdés R, Nadal-Sala D, Sabaté S, Martin-StPaul N, Morin X, D'Adamo F, Batllori E, Améztegui (2023) MEDFATE 2.9.3: trait-enabled model simulate Mediterranean forest function dynamics regional scales. Geoscientific Model Development 16: 3165-3201 (https://doi.org/10.5194/gmd-16-3165-2023).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/growth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forest growth — growth","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/growth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forest growth — growth","text":"","code":"# \\donttest{ #Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)    #Initialize control parameters control <- defaultControl(\"Granier\")    #Initialize soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize model input x1 <- growthInput(exampleforest, examplesoil, SpParamsMED, control)  #Call simulation function G1 <- growth(x1, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant cohort biomass (g/m2): 5068.34 #> Initial plant water content (mm): 4.73001 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  Year 2001:............ #>  #> Final plant biomass (g/m2): 5256.53 #> Change in plant biomass (g/m2): 188.193 #> Plant biomass balance result (g/m2): 188.193 #> Plant biomass balance components: #>   Structural balance (g/m2) 104 Labile balance (g/m2) 92 #>   Plant individual balance (g/m2) 196 Mortality loss (g/m2) 8 #> Final plant water content (mm): 4.73794 #> Final soil water content (mm): 274.787 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): 0.00793033 #> Plant water balance result (mm): -0.00116903 #> Change in soil water content (mm): -16.0878 #> Soil water balance result (mm): -16.0878 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): 7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 370 #>   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 26  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 248 #>   Plant extraction from soil (mm) 248  Plant water balance (mm) -0 Hydraulic redistribution (mm) 4 #>   Runoff (mm) 21 Deep drainage (mm) 128   #Switch to 'Sperry' transpiration mode control <- defaultControl(\"Sperry\")  #Initialize model input x2 <- growthInput(exampleforest,examplesoil, SpParamsMED, control)  #Call simulation function G2 <-growth(x2, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant cohort biomass (g/m2): 6245.67 #> Initial plant water content (mm): 6.78662 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  Year 2001:............ #>  #> Final plant biomass (g/m2): 6385.76 #> Change in plant biomass (g/m2): 140.096 #> Plant biomass balance result (g/m2): 140.096 #> Plant biomass balance components: #>   Structural balance (g/m2) 54 Labile balance (g/m2) 96 #>   Plant individual balance (g/m2) 150 Mortality loss (g/m2) 10 #> Final plant water content (mm): 6.79935 #> Final soil water content (mm): 274 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): 0.0127255 #> Plant water balance result (mm): 8.31176e-17 #> Change in soil water content (mm): -16.8753 #> Soil water balance result (mm): -16.8753 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): -7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 370 #>   Infiltration (mm) 402 Infiltration excess (mm) 19 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 23  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 240 #>   Plant extraction from soil (mm) 240  Plant water balance (mm) 0 Hydraulic redistribution (mm) 4 #>   Runoff (mm) 19 Deep drainage (mm) 142  #Switch to 'Sureau' transpiration mode control <- defaultControl(\"Sureau\")  #Initialize model input x3 <- growthInput(exampleforest,examplesoil, SpParamsMED, control)  #Call simulation function G3 <-growth(x3, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant cohort biomass (g/m2): 7826.12 #> Initial plant water content (mm): 6.78662 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  Year 2001:............ #>  #> Final plant biomass (g/m2): 7692.38 #> Change in plant biomass (g/m2): -133.738 #> Plant biomass balance result (g/m2): -135.039 #> Plant biomass balance components: #>   Structural balance (g/m2) 27 Labile balance (g/m2) -66 #>   Plant individual balance (g/m2) -38 Mortality loss (g/m2) 97 #> Final plant water content (mm): 6.7274 #> Final soil water content (mm): 278.433 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): -0.0592237 #> Plant water balance result (mm): -0.117603 #> Change in soil water content (mm): -12.4419 #> Soil water balance result (mm): -12.4419 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): 7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 371 #>   Infiltration (mm) 401 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 31  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 184 #>   Plant extraction from soil (mm) 184  Plant water balance (mm) -0 Hydraulic redistribution (mm) 0 #>   Runoff (mm) 21 Deep drainage (mm) 185 # }"},{"path":"https://emf-creaf.github.io/medfate/reference/herb_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Herbaceous description functions — herb_values","title":"Herbaceous description functions — herb_values","text":"Functions calculate attributes herbaceous component forest object","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/herb_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Herbaceous description functions — herb_values","text":"","code":"herb_foliarBiomass(x, SpParams)  herb_fuelLoading(x, SpParams)  herb_LAI(x, SpParams)"},{"path":"https://emf-creaf.github.io/medfate/reference/herb_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Herbaceous description functions — herb_values","text":"x object class forest. SpParams data frame species parameters (see SpParamsMED).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/herb_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Herbaceous description functions — herb_values","text":"single scalar: herb_foliarBiomass: Herbaceous biomass leaves (kg/m2). herb_fuelLoading: Herbaceous fine fuel loading (kg/m2). herb_LAI: Herbaceous leaf area index (m2/m2).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/herb_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Herbaceous description functions — herb_values","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_conductancefunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Hydraulic confuctance functions — hydraulics_conductancefunctions","title":"Hydraulic confuctance functions — hydraulics_conductancefunctions","text":"Set functions used calculation soil plant hydraulic conductance.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_conductancefunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hydraulic confuctance functions — hydraulics_conductancefunctions","text":"","code":"hydraulics_psi2K(psi, psi_extract, exp_extract = 3)  hydraulics_K2Psi(K, psi_extract, exp_extract = 3)  hydraulics_averagePsi(psi, v, exp_extract, psi_extract)  hydraulics_xylemConductance(psi, kxylemmax, c, d)  hydraulics_xylemConductanceSigmoid(psi, kxylemmax, P50, slope)  hydraulics_xylemPsi(kxylem, kxylemmax, c, d)  hydraulics_psiCrit(c, d, pCrit = 0.001)  hydraulics_vanGenuchtenConductance(psi, krhizomax, n, alpha)  hydraulics_correctConductanceForViscosity(kxylem, temp)  hydraulics_psi2Weibull(psi50, psi88 = NA_real_, psi12 = NA_real_)  hydraulics_vulnerabilityCurvePlot(   x,   soil = NULL,   type = \"leaf\",   vulnerabilityFunction = \"Weibull\",   psiVec = seq(-0.1, -8, by = -0.01),   relative = FALSE,   speciesNames = FALSE,   draw = TRUE,   ylim = NULL,   xlab = NULL,   ylab = NULL )"},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_conductancefunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hydraulic confuctance functions — hydraulics_conductancefunctions","text":"psi scalar (vector, depending function) water potential (MPa). psi_extract Soil water potential (MPa) corresponding 50% whole-plant relative transpiration. exp_extract Exponent whole-plant relative transpiration Weibull function. K Whole-plant relative conductance (0-1). v Proportion fine roots within soil layer. kxylemmax Maximum xylem hydraulic conductance (defined flow per leaf surface unit per pressure drop). c, d Parameters Weibull function (generic xylem vulnerability curve). kxylem Xylem hydraulic conductance (defined flow per surface unit per pressure drop). pCrit Proportion maximum conductance considered critical hydraulic functioning. krhizomax Maximum rhizosphere hydraulic conductance (defined flow per leaf surface unit per pressure drop). n, alpha Parameters Van Genuchten function (rhizosphere vulnerability curve). temp Temperature (degrees Celsius). psi50, psi88, psi12 Water potentials (MPa) corresponding 50%, 88% 12% percent conductance loss. x object class spwbInput. soil list containing description soil (see soil). type Plot type hydraulics_vulnerabilityCurvePlot, either \"leaf\", \"stem\", \"root\" \"rhizosphere\"). vulnerabilityFunction String indicating function used represent vulnerability plant segments, either \"Weibull\" \"Sigmoid\". psiVec Vector water potential values evaluate vulnerability curve. relative flag relativize vulnerability curves [0-1] interval. speciesNames flag indicate use species names instead cohort names plots. draw flag indicate whether vulnerability curve drawn just returned. ylim, xlab, ylab Graphical parameters override function defaults.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_conductancefunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hydraulic confuctance functions — hydraulics_conductancefunctions","text":"Values returned function : hydraulics_psi2K: Whole-plant relative conductance (0-1). hydraulics_K2Psi: Soil water potential (MPa) corresponding given whole-plant relative conductance value (inverse hydraulics_psi2K()). hydraulics_averagePsi: average water potential (MPa) across soil layers. hydraulics_vanGenuchtenConductance: Rhizosphere conductance corresponding input water potential (soil vulnerability curve). hydraulics_xylemConductance: Xylem conductance (flow rate per pressure drop) corresponding input water potential (plant vulnerability curve). hydraulics_xylemPsi: Xylem water potential (MPa) corresponding input xylem conductance (flow rate per pressure drop). hydraulics_psi2Weibull: Parameters Weibull vulnerability curve goes supplied psi50 psi88 values.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_conductancefunctions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hydraulic confuctance functions — hydraulics_conductancefunctions","text":"Details plant hydraulic models given medfate book. Function hydraulics_vulnerabilityCurvePlot draws plot vulnerability curves given soil object network properties plant cohort x.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_conductancefunctions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hydraulic confuctance functions — hydraulics_conductancefunctions","text":"Sperry, J. S., F. R. Adler, G. S. Campbell, J. P. Comstock. 1998. Limitation plant water use rhizosphere xylem conductance: results model. Plant, Cell Environment 21:347–359. Sperry, J. S., D. M. Love. 2015. plant hydraulics can tell us responses climate-change droughts. New Phytologist 207:14–27.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_conductancefunctions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hydraulic confuctance functions — hydraulics_conductancefunctions","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_conductancefunctions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hydraulic confuctance functions — hydraulics_conductancefunctions","text":"","code":"#Manual display of vulnerability curve kstemmax = 4 # in mmol·m-2·s-1·MPa-1 stemc = 3  stemd = -4 # in MPa psiVec = seq(-0.1, -7.0, by =-0.01) kstem = unlist(lapply(psiVec, hydraulics_xylemConductance, kstemmax, stemc, stemd)) plot(-psiVec, kstem, type=\"l\",ylab=\"Xylem conductance (mmol·m-2·s-1·MPa-1)\",       xlab=\"Canopy pressure (-MPa)\", lwd=1.5,ylim=c(0,kstemmax))   #Load example dataset data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Initialize soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Switch to 'Sperry' transpiration mode control <- defaultControl(\"Sperry\")  #Initialize input x <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  #Leaf vulnerability curves hydraulics_vulnerabilityCurvePlot(x, type=\"leaf\")   #Stem vulnerability curves hydraulics_vulnerabilityCurvePlot(x, type=\"stem\")"},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_defoliation.html","id":null,"dir":"Reference","previous_headings":"","what":"Hydraulic-related defoliation — hydraulics_defoliation","title":"Hydraulic-related defoliation — hydraulics_defoliation","text":"Functions calculate proportion crown defoliation due hydraulic disconnection.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_defoliation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hydraulic-related defoliation — hydraulics_defoliation","text":"","code":"hydraulics_proportionDefoliationSigmoid(   psiLeaf,   P50,   slope,   PLC_crit = 0.88,   P50_cv = 10 )  hydraulics_proportionDefoliationWeibull(   psiLeaf,   c,   d,   PLC_crit = 0.88,   P50_cv = 10 )"},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_defoliation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hydraulic-related defoliation — hydraulics_defoliation","text":"psiLeaf Leaf water potential (MPa). P50, slope Parameters Sigmoid function. PLC_crit Critical leaf PLC corresponding defoliation P50_cv Coefficient variation (percent) leaf P50, describe variability hydraulic vulnerability across crown leaves. c, d Parameters Weibull function.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_defoliation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hydraulic-related defoliation — hydraulics_defoliation","text":"proportion crown defoliation.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_defoliation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hydraulic-related defoliation — hydraulics_defoliation","text":"functions assume crowns made population leaves whose hydraulic vulnerability (.e. water potential corresponding 50 follows Gaussian distribution centered input P50 known coefficient variation (P50_cv). slope parameter (c exponent case Weibull function) considered constant. Leaves hydraulically disconnected, shedded, embolism rate exceeds critical value (PLC_crit).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_defoliation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hydraulic-related defoliation — hydraulics_defoliation","text":"Hervé Cochard, INRAE Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_scalingconductance.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaling from conductivity to conductance — hydraulics_scalingconductance","title":"Scaling from conductivity to conductance — hydraulics_scalingconductance","text":"Functions used scale tissue conductivity conductance different elements continuum.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_scalingconductance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaling from conductivity to conductance — hydraulics_scalingconductance","text":"","code":"hydraulics_maximumSoilPlantConductance(krhizomax, krootmax, kstemmax, kleafmax)  hydraulics_soilPlantResistancesSigmoid(   psiSoil,   psiRhizo,   psiStem,   PLCstem,   psiLeaf,   PLCleaf,   krhizomax,   n,   alpha,   krootmax,   root_P50,   root_slope,   kstemmax,   stem_P50,   stem_slope,   kleafmax,   leaf_P50,   leaf_slope )  hydraulics_soilPlantResistancesWeibull(   psiSoil,   psiRhizo,   psiStem,   PLCstem,   psiLeaf,   PLCleaf,   krhizomax,   n,   alpha,   krootmax,   rootc,   rootd,   kstemmax,   stemc,   stemd,   kleafmax,   leafc,   leafd )  hydraulics_averageRhizosphereResistancePercent(   krhizomax,   n,   alpha,   krootmax,   rootc,   rootd,   kstemmax,   stemc,   stemd,   kleafmax,   leafc,   leafd,   psiStep = -0.01 )  hydraulics_findRhizosphereMaximumConductance(   averageResistancePercent,   n,   alpha,   krootmax,   rootc,   rootd,   kstemmax,   stemc,   stemd,   kleafmax,   leafc,   leafd,   initialValue = 0 )  hydraulics_taperFactorSavage(height)  hydraulics_terminalConduitRadius(height)  hydraulics_referenceConductivityHeightFactor(refheight, height)  hydraulics_maximumStemHydraulicConductance(   xylemConductivity,   refheight,   Al2As,   height,   taper = FALSE )  hydraulics_rootxylemConductanceProportions(L, V)"},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_scalingconductance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scaling from conductivity to conductance — hydraulics_scalingconductance","text":"krhizomax Maximum rhizosphere hydraulic conductance (defined flow per leaf surface unit per pressure drop). krootmax Maximum root xylem hydraulic conductance (defined flow per leaf surface unit per pressure drop). kstemmax Maximum stem xylem hydraulic conductance (defined flow per leaf surface unit per pressure drop). kleafmax Maximum leaf hydraulic conductance (defined flow per leaf surface unit per pressure drop). psiSoil Soil water potential (MPa). scalar vector depending function. psiRhizo Water potential (MPa) rhizosphere (root surface). psiStem Water potential (MPa) stem. PLCstem Percent loss conductance (%) stem. psiLeaf Water potential (MPa) leaf. n, alpha Parameters Van Genuchten function (rhizosphere vulnerability curve). root_P50, root_slope Parameters Sigmoid function roots (root xylem vulnerability curve). stem_P50, stem_slope Parameters Sigmoid function stems (stem xylem vulnerability curve). leaf_P50, leaf_slope Parameters Sigmoid function leaves (leaf vulnerability curve). rootc, rootd Parameters Weibull function roots (root xylem vulnerability curve). stemc, stemd Parameters Weibull function stems (stem xylem vulnerability curve). leafc, leafd Parameters Weibull function leaves (leaf vulnerability curve). psiStep Water potential precision (MPa). averageResistancePercent Average (across water potential values) resistance percent rhizosphere, respect total resistance (rhizosphere + root xylem + stem xylem). initialValue Initial value rhizosphere conductance. height Plant height (cm). refheight Reference plant height measurement xylem conductivity (cm). xylemConductivity Xylem conductivity flow per length conduit pressure drop (kg·m-1·s-1·MPa-1). Al2As Leaf area sapwood area (m2·m-2). taper boolean flag indicate correction taper xylem conduits (Christoffersen et al. 2017). L Vector length coarse roots (mm) soil layer. V Vector proportion [0-1] fine roots within soil layer.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_scalingconductance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scaling from conductivity to conductance — hydraulics_scalingconductance","text":"Values returned function : hydraulics_maximumSoilPlantConductance: maximum soil-plant conductance, units input segment conductances. hydraulics_averageRhizosphereResistancePercent: average percentage resistance due rhizosphere, calculated across water potential values. hydraulics_findRhizosphereMaximumConductance: maximum rhizosphere conductance value given average rhizosphere resistance vulnerability curves rhizosphere, root stem elements. hydraulics_taperFactorSavage: Taper factor according Savage et al. (2010).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_scalingconductance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scaling from conductivity to conductance — hydraulics_scalingconductance","text":"Details hydraulic model given medfate book","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_scalingconductance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Scaling from conductivity to conductance — hydraulics_scalingconductance","text":"Christoffersen, B. O., M. Gloor, S. Fauset, N. M. Fyllas, D. R. Galbraith, T. R. Baker, L. Rowland, R. . Fisher, O. J. Binks, S. . Sevanto, C. Xu, S. Jansen, B. Choat, M. Mencuccini, N. G. McDowell, P. Meir. 2016. Linking hydraulic traits tropical forest function size-structured trait-driven model (TFS v.1-Hydro). Geoscientific Model Development Discussions 9: 4227–4255. Savage, V. M., L. P. Bentley, B. J. Enquist, J. S. Sperry, D. D. Smith, P. B. Reich, E. . von Allmen. 2010. Hydraulic trade-offs space filling enable better predictions vascular structure function plants. Proceedings National Academy Sciences United States America 107:22722–7. Olson, M.E., Anfodillo, T., Rosell, J.., Petit, G., Crivellaro, ., Isnard, S., León-Gómez, C., Alvarado-Cárdenas, L.O., Castorena, M. 2014. Universal hydraulics flowering plants: Vessel diameter scales stem length across angiosperm lineages, habits climates. Ecology Letters 17: 988–997.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_scalingconductance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scaling from conductivity to conductance — hydraulics_scalingconductance","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_supplyfunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Hydraulic supply functions — hydraulics_supplyfunctions","title":"Hydraulic supply functions — hydraulics_supplyfunctions","text":"Set functions used implementation hydraulic supply functions (Sperry Love 2015).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_supplyfunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hydraulic supply functions — hydraulics_supplyfunctions","text":"","code":"hydraulics_EXylem(   psiPlant,   psiUpstream,   kxylemmax,   c,   d,   allowNegativeFlux = TRUE,   psiCav = 0 )  hydraulics_E2psiXylem(E, psiUpstream, kxylemmax, c, d, psiCav = 0)  hydraulics_E2psiXylemUp(E, psiDownstream, kxylemmax, c, d, psiCav = 0)  hydraulics_EVanGenuchten(psiRhizo, psiSoil, krhizomax, n, alpha, l = 0.5)  hydraulics_ECrit(psiUpstream, kxylemmax, c, d, pCrit = 0.001)  hydraulics_E2psiVanGenuchten(   E,   psiSoil,   krhizomax,   n,   alpha,   psiStep = -1e-04,   psiMax = -10 )  hydraulics_E2psiTwoElements(   E,   psiSoil,   krhizomax,   kxylemmax,   n,   alpha,   c,   d,   psiCav = 0,   psiStep = -1e-04,   psiMax = -10 )  hydraulics_E2psiBelowground(E, hydraulicNetwork, psiIni = as.numeric(c(0)))  hydraulics_E2psiAboveground(E, psiRootCrown, hydraulicNetwork)  hydraulics_E2psiNetwork(E, hydraulicNetwork, psiIni = as.numeric(c(0)))  hydraulics_supplyFunctionOneXylem(   psiSoil,   v,   kstemmax,   stemc,   stemd,   psiCav = 0,   maxNsteps = 200L,   dE = 0.01 )  hydraulics_supplyFunctionTwoElements(   Emax,   psiSoil,   krhizomax,   kxylemmax,   n,   alpha,   c,   d,   psiCav = 0,   dE = 0.1,   psiMax = -10 )  hydraulics_supplyFunctionThreeElements(   Emax,   psiSoil,   krhizomax,   kxylemmax,   kleafmax,   n,   alpha,   stemc,   stemd,   leafc,   leafd,   psiCav = 0,   dE = 0.1,   psiMax = -10 )  hydraulics_supplyFunctionBelowground(   hydraulicNetwork,   minFlow = 0,   pCrit = 0.001 )  hydraulics_supplyFunctionAboveground(   Erootcrown,   psiRootCrown,   hydraulicNetwork )  hydraulics_supplyFunctionNetwork(hydraulicNetwork, minFlow = 0, pCrit = 0.001)  hydraulics_regulatedPsiXylem(E, psiUpstream, kxylemmax, c, d, psiStep = -0.01)  hydraulics_regulatedPsiTwoElements(   Emax,   psiSoil,   krhizomax,   kxylemmax,   n,   alpha,   c,   d,   dE = 0.1,   psiMax = -10 )  hydraulics_initSperryNetworks(x)  hydraulics_supplyFunctionPlot(   x,   draw = TRUE,   type = \"E\",   speciesNames = FALSE,   ylim = NULL )"},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_supplyfunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hydraulic supply functions — hydraulics_supplyfunctions","text":"psiPlant Plant water potential (MPa). psiUpstream Water potential upstream (MPa). one-component model corresponds soil potential. two-component model corresponds potential inside roots. kxylemmax Maximum xylem hydraulic conductance (defined flow per leaf surface unit per pressure drop). c, d Parameters Weibull function (generic xylem vulnerability curve). allowNegativeFlux boolean indicate whether negative flux (.e. plant soil) allowed. psiCav Minimum water potential (MPa) experienced (irreversible cavitation). E Flow per surface unit. psiDownstream Water potential upstream (MPa). psiRhizo Soil water potential (MPa) rhizosphere (root surface). psiSoil Soil water potential (MPa). scalar vector depending function. krhizomax Maximum rhizosphere hydraulic conductance (defined flow per leaf surface unit per pressure drop). n, alpha, l Parameters Van Genuchten function (rhizosphere vulnerability curve). pCrit Critical water potential (MPa). psiStep Water potential precision (MPa). psiMax Minimum (maximum absolute value) water potential considered (MPa). hydraulicNetwork List hydraulic characteristics nodes hydraulic network. psiIni Vector initial water potential values (MPa). psiRootCrown Soil water potential (MPa) root crown. v Proportion fine roots within soil layer. kstemmax Maximum stem xylem hydraulic conductance (defined flow per leaf surface unit per pressure drop). stemc, stemd Parameters Weibull function stems (stem xylem vulnerability curve). maxNsteps Maximum number steps construction supply functions. dE Increment flow per surface unit. Emax Maximum flow per surface unit. kleafmax Maximum leaf hydraulic conductance (defined flow per leaf surface unit per pressure drop). leafc, leafd Parameters Weibull function leaves (leaf vulnerability curve). minFlow Minimum flow supply function. Erootcrown Flow per surface unit root crown. x object class spwbInput. draw flag indicate whether supply function drawn just returned. type Plot type hydraulics_supplyFunctionPlot, either \"E\", \"ERhizo\", \"StemPsi\", \"RootPsi\" \"dEdP\"). speciesNames flag indicate use species names instead cohort names plots. ylim Graphical parameter override function defaults.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_supplyfunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hydraulic supply functions — hydraulics_supplyfunctions","text":"Values returned function : hydraulics_E2psiXylem: plant (leaf) water potential (MPa) corresponding input flow, according xylem supply function given upstream (soil root) water potential. hydraulics_E2psiVanGenuchten: root water potential (MPa) corresponding input flow, according rhizosphere supply function given soil water potential. hydraulics_E2psiTwoElements: plant (leaf) water potential (MPa) corresponding input flow, according rhizosphere plant supply functions given input soil water potential. hydraulics_E2psiNetwork: rhizosphere, root crown plant (leaf water potential (MPa) corresponding input flow, according vulnerability curves rhizosphere, root stem elements network. hydraulics_Ecrit: critical flow according xylem supply function given input soil water potential. hydraulics_EVanGenuchten: flow (integral vulnerability curve) according rhizosphere supply function given input drop water potential (soil rhizosphere). hydraulics_EXylem: flow (integral vulnerability curve) according xylem supply function given input drop water potential (rhizosphere plant). hydraulics_supplyFunctionOneXylem, hydraulics_supplyFunctionTwoElements     hydraulics_supplyFunctionNetwork: list different numeric vectors information two-element supply function: E: Flow values (supply values). FittedE: Fitted flow values (hydraulics_supplyFunctionTwoElements). Elayers: Flow values across roots soil layer (hydraulics_supplyFunctionNetwork). PsiRhizo: Water potential values root surface (hydraulics_supplyFunctionNetwork). PsiRoot: Water potential values inside root crown (hydraulics_supplyFunctionOneXylem). PsiPlant: Water potential values canopy (leaf). dEdP: Derivatives supply function. hydraulics_supplyFunctionPlot: draw = FALSE list result calling hydraulics_supplyFunctionNetwork cohort. hydraulics_regulatedPsiXylem: Plant water potential regulation (one-element loss function) given input water potential. hydraulics_regulatedPsiTwoElements: Plant water potential regulation (two-element loss function) given input soil water potential.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_supplyfunctions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hydraulic supply functions — hydraulics_supplyfunctions","text":"Function hydraulics_supplyFunctionPlot draws plot supply function given soil object network properties plant cohort x. Function hydraulics_vulnerabilityCurvePlot draws plot vulnerability curves given soil object network properties plant cohort x.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_supplyfunctions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hydraulic supply functions — hydraulics_supplyfunctions","text":"Sperry, J. S., F. R. Adler, G. S. Campbell, J. P. Comstock. 1998. Limitation plant water use rhizosphere xylem conductance: results model. Plant, Cell Environment 21:347–359. Sperry, J. S., D. M. Love. 2015. plant hydraulics can tell us responses climate-change droughts. New Phytologist 207:14–27.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_supplyfunctions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hydraulic supply functions — hydraulics_supplyfunctions","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydraulics_supplyfunctions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hydraulic supply functions — hydraulics_supplyfunctions","text":"","code":"kstemmax = 4 # in mmol·m-2·s-1·MPa-1 stemc = 3  stemd = -4 # in MPa psiVec = seq(-0.1, -7.0, by =-0.01)  #Vulnerability curve kstem = unlist(lapply(psiVec, hydraulics_xylemConductance, kstemmax, stemc, stemd)) plot(-psiVec, kstem, type=\"l\",ylab=\"Xylem conductance (mmol·m-2·s-1·MPa-1)\",       xlab=\"Canopy pressure (-MPa)\", lwd=1.5,ylim=c(0,kstemmax))"},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_infiltration.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil infiltration — hydrology_infiltration","title":"Soil infiltration — hydrology_infiltration","text":"Soil infiltration functions: Function hydrology_infiltrationBoughton calculates amount water infiltrates topsoil, according USDA SCS curve number method (Boughton 1989). Function hydrology_infiltrationGreenAmpt calculates amount water infiltrates topsoil, according model Green & Ampt (1911). Function hydrology_infiltrationAmount uses either Green & Ampt (1911) Boughton (1989) estimate infiltration. Function hydrology_infiltrationRepartition distributes infiltration among soil layers depending macroporosity.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_infiltration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil infiltration — hydrology_infiltration","text":"","code":"hydrology_infiltrationBoughton(input, Ssoil)  hydrology_infiltrationGreenAmpt(t, psi_w, Ksat, theta_sat, theta_dry)  hydrology_infiltrationRepartition(I, widths, macro, a = -0.005, b = 3)  hydrology_infiltrationAmount(   rainfallInput,   rainfallIntensity,   soil,   soilFunctions,   model = \"GreenAmpt1911\",   K_correction = 1 )"},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_infiltration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Soil infiltration — hydrology_infiltration","text":"input numeric vector (daily) water input (mm water). Ssoil Soil water storage capacity (can referred topsoil) (mm water). t Time infiltration event psi_w Matric potential wetting front Ksat hydraulic conductivity saturation theta_sat volumetric content saturation theta_dry volumetric content dry side wetting front Soil infiltration (mm water). widths Width soil layers (mm). macro Macroporosity soil layers (%). , b Parameters extinction function used water infiltration. rainfallInput Water rainfall event reaching soil surface (mm) rainfallIntensity rainfall intensity rate (mm/h) soil list containing description soil (see soil). soilFunctions Soil water retention curve conductivity functions, either 'SX' (Saxton) 'VG' (Van Genuchten). model Infiltration model, either \"GreenAmpt1911\" \"Boughton1989\" K_correction Correction saturated conductivity, account increased infiltration due macropore presence","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_infiltration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Soil infiltration — hydrology_infiltration","text":"Functions hydrology_infiltrationBoughton, hydrology_infiltrationGreenAmpt hydrology_infiltrationAmount return daily amount water infiltrates soil (mm water). Function hydrology_infiltrationRepartition returns amount infiltrated water reaches soil layer.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_infiltration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil infiltration — hydrology_infiltration","text":"using function hydrology_infiltrationGreenAmpt, units Ksat, t psi_wat system (e.g. cm/h, h cm).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_infiltration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Soil infiltration — hydrology_infiltration","text":"Boughton (1989). review USDA SCS curve number method. - Australian Journal Soil Research 27: 511-523. Green, W.H. Ampt, G.. (1911) Studies Soil Physics, 1: Flow Air Water Soils. Journal Agricultural Science, 4, 1-24.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_infiltration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Soil infiltration — hydrology_infiltration","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_interception.html","id":null,"dir":"Reference","previous_headings":"","what":"Rainfall interception — hydrology_rainfallIntensity","title":"Rainfall interception — hydrology_rainfallIntensity","text":"Function hydrology_rainInterception calculates amount rainfall intercepted daily canopy, given rainfall canopy characteristics. Two canopy interception models currently available: sparse Gash (1995) model Liu (2001) model. cases current implementation assumes trunk interception.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_interception.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rainfall interception — hydrology_rainfallIntensity","text":"","code":"hydrology_rainfallIntensity(month, prec, rainfallIntensityPerMonth)  hydrology_rainInterception(Rainfall, Cm, p, ER = 0.05, model = \"Gash1995\")  hydrology_interceptionPlot(   x,   SpParams,   ER = 0.05,   gdd = NA,   throughfall = FALSE,   model = \"Gash1995\" )"},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_interception.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rainfall interception — hydrology_rainfallIntensity","text":"month Month year (1 12). prec Precipitation given day (mm). rainfallIntensityPerMonth vector twelve positions average intensity rainfall (mm/h) month. Rainfall numeric vector (daily) rainfall. Cm Canopy water storage capacity. p Proportion throughfall (normally 1 - c, c canopy cover). ER ratio evaporation rate rainfall rate. model Rainfall interception model (either \"Gash1995\" \"Liu2001\"). x object class spwbInput. SpParams data frame species parameters (see SpParamsMED SpParamsMED). gdd Growth degree days (Celsius). throughfall Boolean flag plot relative throughfall instead percentage intercepted rainfall.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_interception.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rainfall interception — hydrology_rainfallIntensity","text":"Function hydrology_rainInterception returns vector length Rainfall containing intercepted rain values. Function hydrology_rainfallIntensity returns scalar rainfall intensity.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_interception.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rainfall interception — hydrology_rainfallIntensity","text":"Function hydrology_rainInterception can accept either vectors scalars parameters Cm, p ER. supplied vectors length Rainfall. Function hydrology_rainfallIntensity estimates rainfall intensity (mm/h) input values rainfall seasonal variation rainfall intensity (mm/h).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_interception.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rainfall interception — hydrology_rainfallIntensity","text":"Liu (2001). Evaluation Liu model predicting rainfall interception forests world-wide. - Hydrol. Process. 15: 2341-2360. Gash (1979). analytical model rainfall interception forests. - Quarterly Journal Royal Meteorological Society. Gash et al. (1995). Estimating sparse forest rainfall interception analytical model. - Journal Hydrology.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_interception.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rainfall interception — hydrology_rainfallIntensity","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_interception.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rainfall interception — hydrology_rainfallIntensity","text":"","code":"#Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Draw rainfall interception for two values of the E/R ratio hydrology_interceptionPlot(exampleforest, SpParamsMED, ER = c(0.05, 0.2))"},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilEvaporation.html","id":null,"dir":"Reference","previous_headings":"","what":"Bare soil evaporation and herbaceous transpiration — hydrology_soilEvaporationAmount","title":"Bare soil evaporation and herbaceous transpiration — hydrology_soilEvaporationAmount","text":"Functions: Function hydrology_soilEvaporationAmount calculates amount evaporation bare soil, following Ritchie (1972). Function hydrology_soilEvaporation calculates amount evaporation bare soil distributes among soil layers. Function hydrology_herbaceousTranspiration calculates amount transpiration due herbaceous plants.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilEvaporation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bare soil evaporation and herbaceous transpiration — hydrology_soilEvaporationAmount","text":"","code":"hydrology_soilEvaporationAmount(DEF, PETs, Gsoil)  hydrology_soilEvaporation(   soil,   snowpack,   soilFunctions,   pet,   LgroundSWR,   modifySoil = TRUE )  hydrology_herbaceousTranspiration(   pet,   LherbSWR,   herbLAI,   soil,   soilFunctions,   modifySoil = TRUE )"},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilEvaporation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bare soil evaporation and herbaceous transpiration — hydrology_soilEvaporationAmount","text":"DEF Water deficit (topsoil) layer. PETs Potential evapotranspiration soil surface. Gsoil Gamma parameter (maximum daily evaporation). soil object class soil. snowpack amount snow (water equivalents, mm) snow pack. soilFunctions Soil water retention curve conductivity functions, either 'SX' (Saxton) 'VG' (Van Genuchten). pet Potential evapotranspiration given day (mm) LgroundSWR Percentage short-wave radiation (SWR) reaching ground. modifySoil Boolean flag indicate input soil object modified simulation. LherbSWR Percentage short-wave radiation (SWR) reaching herbaceous layer. herbLAI Leaf area index herbaceous layer.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilEvaporation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bare soil evaporation and herbaceous transpiration — hydrology_soilEvaporationAmount","text":"Function hydrology_soilEvaporationAmount returns amount water evaporated soil. Function hydrology_soilEvaporation returns vector water evaporated soil layer.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilEvaporation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bare soil evaporation and herbaceous transpiration — hydrology_soilEvaporationAmount","text":"Ritchie (1972). Model predicting evaporation row crop incomplete cover. - Water resources research.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilEvaporation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bare soil evaporation and herbaceous transpiration — hydrology_soilEvaporationAmount","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilWaterBalance.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil water balance — hydrology_soilWaterBalance","title":"Soil water balance — hydrology_soilWaterBalance","text":"Function hydrology_soilWaterBalance estimates water balance soil layers given water inputs/outputs, including simulation water movement within soil.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilWaterBalance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil water balance — hydrology_soilWaterBalance","text":"","code":"hydrology_soilWaterBalance(   soil,   soilFunctions,   rainfallInput,   rainfallIntensity,   snowmelt,   sourceSink,   runon = 0,   lateralFlows = NULL,   waterTableDepth = NA_real_,   infiltrationMode = \"GreenAmpt1911\",   infiltrationCorrection = 5,   soilDomains = \"buckets\",   nsteps = 24L,   max_nsubsteps = 3600L,   modifySoil = TRUE )"},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilWaterBalance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Soil water balance — hydrology_soilWaterBalance","text":"soil Object class soil. soilFunctions Soil water retention curve conductivity functions, either 'SX' (Saxton) 'VG' (Van Genuchten). rainfallInput Amount water rainfall event (excluding interception), mm. rainfallIntensity Rainfall intensity, mm/h. snowmelt Amount water originated snow melt, mm. sourceSink Local source/sink term soil layer (soil evaporation plant transpiration/redistribution) mm/day. runon Surface water amount running target area upslope (mm). lateralFlows Lateral source/sink terms soil layer (interflow/adjacent locations) mm/day. waterTableDepth Water table depth (mm). missing, capillarity rise allowed lower total soil depth. infiltrationMode Infiltration model, either \"GreenAmpt1911\" \"Boughton1989\" infiltrationCorrection Correction saturated conductivity, account increased infiltration due macropore presence soilDomains Either \"buckets\" (multi-bucket domain), \"single\" (single-domain Richards) \"dual\" (dual-permeability model). nsteps Number time steps per day max_nsubsteps Maximum number substeps per time step modifySoil Boolean flag indicate input soil object modified simulation.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilWaterBalance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Soil water balance — hydrology_soilWaterBalance","text":"Returns named vector different elements, depending soilDomains. soilDomains == \"buckets\": Snowmelt: Snowmelt input (mm). Source/sinks: Sum source/sink input across layers (mm). Infiltration: Water infiltrated soil (mm). InfiltrationExcess: Excess infiltration topmost layer (mm) leading increase runoff. SaturationExcess: Excess saturation topmost layer (mm) leading increase runoff. Runoff: Surface runoff generated saturation excess infiltration excess (mm). DeepDrainage: Water draining bottom layer (mm). quantity corrected close water balance. CapillarityRise: Water entering soil via capillarity rise (mm) water table, waterTableDepth supplied. soilDomains == \"single\" named vector contains following additional elements: Correction: Amount water (mm) added deep drainage correct water balance. VolumeChange: Change soil water volume (mm). Substep: Time step moisture solving (seconds). soilDomains == \"dual\" named vector contains following additional elements: Lateral flows: Sum water circulating micropores macropores, positive filling micropores (mm). InfiltrationMatrix: Water infiltrated soil matrix (mm). InfiltrationMacropores: Water infiltrated soil macropore domain (mm). InfiltrationExcessMatrix/InfiltrationExcessMacropores: Excess infiltration topmost layer (mm) leading increase runoff. SaturationExcessMatrix/SaturationExcessMacropores: Excess saturation topmost layer (mm) leading increase runoff. DrainageMatrix: Water draining bottom layer matrix domain (mm). quantity corrected close water balance micropore domain. DrainageMacropores: Water draining bottom layer macropore domain (mm). quantity corrected close water balance macropore domain. CorrectionMatrix: Amount water (mm) added deep drainage soil matrix correct water balance. CorrectionMacropores: Amount water (mm) added deep drainage macropores correct water balance. MatrixVolumeChange: Change soil water volume soil matrix domain (mm). MacroporeVolumeChange: Change soil water volume macropore domain (mm).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilWaterBalance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil water balance — hydrology_soilWaterBalance","text":"multi-bucket model adds/substracts water layer content field capacity excess percolates layer . still excess bottom layer, model progressively fill upper layers (generating saturation excess first layer becomes saturated). Every day layers field capacity, model simulates deep drainage. single-domain model simulates water flows solving Richards's equation using predictor-corrector method, described Bonan et al. (2019). dual-permeability model implementation model MACRO 5.0 (Jarvis et al. 1991; Larsbo et al. 2005). multi-bucket single-domain model can apply correction infiltration rate account macroporosity infiltration. dual-permeability model extra infiltration macropores simulated explicitly.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilWaterBalance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Soil water balance — hydrology_soilWaterBalance","text":"Bonan, G. (2019). Climate change terrestrial ecosystem modeling. Cambridge University Press, Cambridge, UK. Jarvis, N.J., Jansson, P‐E., Dik, P.E. & Messing, . (1991). Modelling water solute transport macroporous soil. . Model description sensitivity analysis. Journal Soil Science, 42, 59–70. Larsbo, M., Roulier, S., Stenemo, F., Kasteel, R. & Jarvis, N. (2005). Improved Dual‐Permeability Model Water Flow Solute Transport Vadose Zone. Vadose Zone Journal, 4, 398–406.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilWaterBalance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Soil water balance — hydrology_soilWaterBalance","text":"Miquel De Cáceres Ainsa, CREAF María González Sanchís, UPV-CTFC","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_soilWaterBalance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil water balance — hydrology_soilWaterBalance","text":"","code":"# Define soil parameters spar <- defaultSoilParams(4)  # Initializes soil hydraulic parameters examplesoil <- soil(spar)  # Water balance in a multi-bucket model hydrology_soilWaterBalance(examplesoil, \"VG\", 10, 5, 0, c(-1,-1,-1,-1),                             soilDomains = \"buckets\", modifySoil = FALSE) #>   Local source/sinks Lateral source/sinks         Infiltration  #>            -4.000000             0.000000            10.000000  #>   InfiltrationExcess     SaturationExcess               Runoff  #>             0.000000             0.000000             0.000000  #>         DeepDrainage      CapillarityRise  #>             4.121414             0.000000                              # Water balance in a single-domain model (Richards equation) hydrology_soilWaterBalance(examplesoil, \"VG\", 10, 5, 0, c(-1,-1,-1,-1),                             soilDomains = \"single\", modifySoil = FALSE) #>   Local source/sinks Lateral source/sinks         Infiltration  #>         -4.000000000          0.000000000         10.000000000  #>   InfiltrationExcess     SaturationExcess               Runoff  #>          0.000000000          0.000000000          0.000000000  #>         DeepDrainage      CapillarityRise           Correction  #>          0.005785380          0.000000000         -0.001286961  #>         VolumeChange             Substeps  #>          5.994214620         24.000000000                       # Water balance in a dual-permeability model (MACRO) hydrology_soilWaterBalance(examplesoil, \"VG\", 10, 5, 0, c(-1,-1,-1,-1),                             soilDomains = \"dual\", modifySoil = FALSE) #>           Local source/sinks         Lateral source/sinks  #>                -4.000000e+00                 0.000000e+00  #>        Matrix-macropore flow           InfiltrationMatrix  #>                 4.836043e+00                 4.481027e+00  #>       InfiltrationMacropores     InfiltrationExcessMatrix  #>                 5.518973e+00                 0.000000e+00  #> InfiltrationExcessMacropores       SaturationExcessMatrix  #>                 0.000000e+00                 0.000000e+00  #>   SaturationExcessMacropores               DrainageMatrix  #>                 0.000000e+00                 2.379449e-02  #>           DrainageMacropores            CapillarityMatrix  #>                 3.889382e-06                 0.000000e+00  #>        CapillarityMacropores             CorrectionMatrix  #>                 0.000000e+00                -4.573672e-03  #>         CorrectionMacropores           MatrixVolumeChange  #>                 3.889382e-06                 5.293276e+00  #>        MacroporeVolumeChange                 Infiltration  #>                 6.829261e-01                 1.000000e+01  #>           InfiltrationExcess             SaturationExcess  #>                 0.000000e+00                 0.000000e+00  #>                       Runoff                 DeepDrainage  #>                 0.000000e+00                 2.379838e-02  #>              CapillarityRise                   Correction  #>                 0.000000e+00                -4.569782e-03  #>                 VolumeChange                     Substeps  #>                 5.976202e+00                 2.400000e+01"},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_verticalInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Water vertical inputs — hydrology_snowMelt","title":"Water vertical inputs — hydrology_snowMelt","text":"High-level functions define water inputs soil stand: Function hydrology_waterInputs performs canopy water interception snow accumulation/melt. Function hydrology_snowMelt estimates snow melt using simple energy balance, according Kergoat (1998).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_verticalInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Water vertical inputs — hydrology_snowMelt","text":"","code":"hydrology_snowMelt(tday, rad, LgroundSWR, elevation)  hydrology_waterInputs(   x,   prec,   rainfallIntensity,   pet,   tday,   rad,   elevation,   Cm,   LgroundPAR,   LgroundSWR,   modifyInput = TRUE )"},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_verticalInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Water vertical inputs — hydrology_snowMelt","text":"tday Average day temperature (ºC). rad Solar radiation (MJ/m2/day). LgroundSWR Percentage short-wave radiation (SWR) reaching ground. elevation Altitude sea level (m). x object class spwbInput growthInput. prec Precipitation given day (mm) rainfallIntensity Rainfall intensity rate (mm/h). pet Potential evapotranspiration given day (mm) Cm Canopy water storage capacity. LgroundPAR Percentage photosynthetically-active radiation (PAR) reaching ground. modifyInput Boolean flag indicate input x object modified simulation.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_verticalInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Water vertical inputs — hydrology_snowMelt","text":"Function hydrology_waterInputs returns named vector following elements, mm: Rain Precipitation rainfall. Snow Precipitation snow. Interception Rainfall water intercepted canopy evaporated. Snowmelt Snow melted day, added water infiltrated. NetRain Rainfall reaching ground.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_verticalInputs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Water vertical inputs — hydrology_snowMelt","text":"function simulates different vertical hydrological processes, described separately functions. modifyInput = TRUE function modify x object (including soil moisture snowpack surface) result simulating hydrological processes.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_verticalInputs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Water vertical inputs — hydrology_snowMelt","text":"Kergoat L. (1998). model hydrological equilibrium leaf area index global scale. Journal Hydrology 212–213: 268–286.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/hydrology_verticalInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Water vertical inputs — hydrology_snowMelt","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/light_advanced.html","id":null,"dir":"Reference","previous_headings":"","what":"Advanced radiation transfer functions — light_advanced","title":"Advanced radiation transfer functions — light_advanced","text":"Functions light_layerDirectIrradianceFraction light_layerDiffuseIrradianceFraction calculate fraction -canopy direct diffuse radiation reaching vegetation layer. Function light_layerSunlitFraction calculates proportion sunlit leaves vegetation layer. Function light_cohortSunlitShadeAbsorbedRadiation calculates amount radiation absorbed cohort vegetation layers, differentiating sunlit shade leaves.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/light_advanced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Advanced radiation transfer functions — light_advanced","text":"","code":"light_leafAngleCDF(leafAngle, p, q)  light_leafAngleBetaParameters(leafAngle, leafAngleSD)  light_directionalExtinctionCoefficient(p, q, solarElevation)  light_layerDirectIrradianceFraction(   LAIme,   LAImd,   LAImx,   kb,   ClumpingIndex,   alpha,   gamma,   trunkExtinctionFraction = 0.1 )  light_layerDiffuseIrradianceFraction(   LAIme,   LAImd,   LAImx,   K,   ClumpingIndex,   ZF,   alpha,   gamma,   trunkExtinctionFraction = 0.1 )  light_cohortSunlitShadeAbsorbedRadiation(   Ib0,   Id0,   LAIme,   LAImd,   LAImx,   kb,   K,   ClumpingIndex,   ZF,   alpha,   gamma,   trunkExtinctionFraction = 0.1 )  light_layerSunlitFraction(LAIme, LAImd, kb, ClumpingIndex)  light_instantaneousLightExtinctionAbsortion(   LAIme,   LAImd,   LAImx,   p,   q,   ClumpingIndex,   alphaSWR,   gammaSWR,   ddd,   ntimesteps = 24L,   trunkExtinctionFraction = 0.1 )  light_longwaveRadiationSHAW(   LAIme,   LAImd,   LAImx,   LWRatm,   Tsoil,   Tair,   trunkExtinctionFraction = 0.1 )"},{"path":"https://emf-creaf.github.io/medfate/reference/light_advanced.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Advanced radiation transfer functions — light_advanced","text":"leafAngle Average leaf inclination angle (radians). p, q Parameters beta distribution leaf angles leafAngleSD Standard deviation leaf inclination angle (radians). solarElevation Solar elevation (radians). LAIme numeric matrix live expanded LAI values per vegetation layer (row) cohort (column). LAImd numeric matrix dead LAI values per vegetation layer (row) cohort (column). LAImx numeric matrix maximum LAI values per vegetation layer (row) cohort (column). kb vector direct light extinction coefficients. ClumpingIndex extent foliage nonrandom spatial distribution. alpha vector leaf absorbance species. gamma vector leaf reflectance values. trunkExtinctionFraction Fraction extinction due trunks (winter deciduous forests). K vector light extinction coefficients. ZF Fraction sky angles. Ib0 -canopy direct incident radiation. Id0 -canopy diffuse incident radiation. alphaSWR vecfor hort-wave absorbance coefficients cohort. gammaSWR vector short-wave reflectance coefficients (albedo) cohort. ddd dataframe direct diffuse radiation different subdaily time steps (see function radiation_directDiffuseDay package meteoland). ntimesteps Number subdaily time steps. LWRatm Atmospheric downward long-wave radiation (W/m2). Tsoil Soil temperature (Celsius). Tair Canopy layer air temperature vector (Celsius).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/light_advanced.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Advanced radiation transfer functions — light_advanced","text":"Functions light_layerDirectIrradianceFraction, light_layerDiffuseIrradianceFraction light_layerSunlitFraction return numeric vector length equal number vegetation layers. Function light_cohortSunlitShadeAbsorbedRadiation returns list two elements (matrices): I_sunlit I_shade.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/light_advanced.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Advanced radiation transfer functions — light_advanced","text":"Functions short-wave radiation adapted Anten & Bastiaans (2016), whereas long-wave radiation balance follows Flerchinger et al. (2009). Vegetation layers assumed ordered bottom top.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/light_advanced.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Advanced radiation transfer functions — light_advanced","text":"Anten, N.P.R., Bastiaans, L., 2016. use canopy models analyze light competition among plants, : Hikosaka, K., Niinemets, U., Anten, N.P.R. (Eds.), Canopy Photosynthesis: Basics Application. Springer, pp. 379–398. Flerchinger, G. N., Xiao, W., Sauer, T. J., Yu, Q. 2009. Simulation within-canopy radiation exchange. NJAS - Wageningen Journal Life Sciences 57 (1): 5–15. https://doi.org/10.1016/j.njas.2009.07.004.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/light_advanced.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Advanced radiation transfer functions — light_advanced","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/light_advanced.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Advanced radiation transfer functions — light_advanced","text":"","code":"solarElevation <- 0.67 # in radians SWR_direct <- 1100 SWR_diffuse <- 300 PAR_direct <- 550 PAR_diffuse <- 150  LAI <- 2 nlayer <- 10 LAIlayerlive <- matrix(rep(LAI/nlayer,nlayer),nlayer,1) LAIlayerdead <- matrix(0,nlayer,1) meanLeafAngle <- 60 # in degrees sdLeafAngle <- 20  beta <- light_leafAngleBetaParameters(meanLeafAngle*(pi/180), sdLeafAngle*(pi/180))  ## Extinction coefficients kb <- light_directionalExtinctionCoefficient(beta[\"p\"], beta[\"q\"], solarElevation) kd_PAR <- 0.5 kd_SWR <- kd_PAR/1.35"},{"path":"https://emf-creaf.github.io/medfate/reference/light_basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Radiation extinction functions used in basic transpiration sub-model — light_basic","title":"Radiation extinction functions used in basic transpiration sub-model — light_basic","text":"Radiation extinction functions used basic transpiration sub-model","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/light_basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radiation extinction functions used in basic transpiration sub-model — light_basic","text":"","code":"light_PARcohort(x, SpParams, gdd = NA_real_)  light_PARground(x, SpParams, gdd = NA_real_)  light_SWRground(x, SpParams, gdd = NA_real_)  light_cohortAbsorbedSWRFraction(z, x, SpParams, gdd = NA_real_)"},{"path":"https://emf-creaf.github.io/medfate/reference/light_basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radiation extinction functions used in basic transpiration sub-model — light_basic","text":"x object class forest SpParams data frame species parameters (see SpParamsMED). gdd Growth degree days. z numeric vector height values.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/light_basic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Radiation extinction functions used in basic transpiration sub-model — light_basic","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/medfate-package.html","id":null,"dir":"Reference","previous_headings":"","what":"medfate: Mediterranean Forest Simulation — medfate-package","title":"medfate: Mediterranean Forest Simulation — medfate-package","text":"Simulate Mediterranean forest functioning dynamics using cohort-based description vegetation","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/medfate-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"medfate: Mediterranean Forest Simulation — medfate-package","text":"De Cáceres et al. (2015) (doi:10.1016/j.agrformet.2015.06.012 ) De Cáceres et al. (2021) (doi:10.1016/j.agrformet.2020.108233 ) Ruffault et al. (2022) (doi:10.5194/gmd-15-5593-2022 )","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/medfate-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"medfate: Mediterranean Forest Simulation — medfate-package","text":"Maintainer: Miquel De Cáceres miquelcaceres@gmail.com [ORCID] Authors: Nicolas Martin-StPaul [ORCID] Víctor Granda [ORCID] Antoine Cabon [ORCID] Contributors: Jordi Martínez-Vilalta [ORCID] Maurizio Mencuccini [ORCID] Julien Ruffault [ORCID] François Pimont [ORCID] Hervé Cochard [ORCID] Aitor Améztegui [ORCID] Léa Veuillen [ORCID] Shengli Huang [ORCID]","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/modelInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Input for simulation models — modelInput","title":"Input for simulation models — modelInput","text":"Functions spwbInput() growthInput() take object class forest soil data input create input objects simulation functions spwb (pwb) growth, respectively.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/modelInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input for simulation models — modelInput","text":"","code":"spwbInput(x, soil, SpParams, control)  growthInput(x, soil, SpParams, control)"},{"path":"https://emf-creaf.github.io/medfate/reference/modelInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input for simulation models — modelInput","text":"x object class forest. soil object class data.frame soil, containing soil parameters per soil layer. SpParams data frame species parameters (see SpParamsDefinition SpParamsMED). control list default control parameters (see defaultControl).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/modelInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Input for simulation models — modelInput","text":"Function spwbInput() returns list class spwbInput following elements (rows data frames identified specified function plant_ID): control: List control parameters (see defaultControl). soil: data frame initialized soil parameters (see soil). snowpack: amount snow (mm) snow pack soil. canopy: list stand-level state variables. cohorts: data frame cohort information, columns SP Name. : data frame columns  H, CR LAI (see function forest2aboveground). : data frame columns Z50, Z95.  control$transpirationMode = \"Sperry\" additional columns fineRootBiomass coarseRootSoilVolume. belowLayers: list. control$transpirationMode = \"Granier\" contains elements: V: matrix proportion fine roots cohort (rows) soil layer (columns). L: matrix length coarse roots cohort (rows) soil layer (columns). Wpool: matrix soil moisture relative field capacity around rhizosphere cohort (rows) soil layer (columns). VGrhizo_kmax: matrix maximum rhizosphere conductance values cohort (rows) soil layer (columns). VGroot_kmax: matrix maximum root xylem conductance values cohort (rows) soil layer (columns). RhizoPsi: matrix water potential around rhizosphere cohort (rows) soil layer (columns). paramsPhenology: data frame leaf phenology parameters: PhenologyType: Leaf phenology type. LeafDuration: Leaf duration (years). Sgdd: Degree days needed leaf budburst (winter decideous species). Tbgdd: Base temperature calculation degree days leaf budburst. Ssen: Degree days corresponding leaf senescence. Phsen: Photoperiod corresponding start counting senescence degree-days. Tbsen: Base temperature calculation degree days leaf senescence. paramsAnatomy: data frame plant anatomy parameters cohort: Hmax: Maximum plant height (cm). Hmed: Median plant height (cm). Al2As: Leaf area sapwood area ratio (m2·m-2). Ar2Al: Fine root area leaf area ratio (m2·m-2). SLA: Specific leaf area (mm2/mg = m2/kg). LeafWidth: Leaf width (cm). LeafDensity: Density leaf tissue (dry weight volume). WoodDensity: Density wood tissue (dry weight volume). FineRootDensity: Density fine root tissue (dry weight volume). SRL: Specific Root length (cm·g-1). RLD: Root length density (cm·cm-3). r635: Ratio weight leaves plus branches weight leaves alone branches 6.35 mm. paramsInterception: data frame rain interception light extinction parameters cohort: kPAR: PAR extinction coefficient. g: Canopy water retention capacity per LAI unit (mm/LAI). gammaSWR: Reflectance (albedo) coefficient SWR . alphaSWR: Absorbance coefficient SWR . paramsTranspiration: data frame parameters transpiration photosynthesis. control$transpirationMode = \"Granier\", columns : Gswmin: Minimum stomatal conductance water vapor (mol H2O·m-2·s-1). Tmax_LAI: Coefficient relating LAI ratio maximum transpiration potential evapotranspiration. Tmax_LAIsq: Coefficient relating squared LAI ratio maximum transpiration potential evapotranspiration. Psi_Extract: Water potential corresponding 50% relative transpiration (MPa). Exp_Extract: Parameter Weibull function regulating transpiration reduction. VCstem_c, VCstem_d: Parameters stem xylem vulnerability curve (Weibull). WUE: Daily water use efficiency (gross photosynthesis transpiration) light, water CO2 limitations VPD = 1kPa (g C/mm water). WUE_par: Coefficient regulating influence % PAR gross photosynthesis. WUE_co2: Coefficient regulating influence atmospheric CO2 concentration gross photosynthesis. WUE_vpd: Coefficient regulating influence vapor pressure deficit (VPD) gross photosynthesis. Gswmin: Minimum stomatal conductance water vapor (mol H2O·m-2·s-1). Gswmax: Maximum stomatal conductance water vapor (mol H2O·m-2·s-1). Vmax298: Maximum Rubisco carboxilation rate 25ºC (micromol CO2·s-1·m-2). Jmax298: Maximum rate electron transport 25ºC (micromol photons·s-1·m-2). Kmax_stemxylem: Sapwood-specific hydraulic conductivity stem xylem (kg H2O·s-1·m-1·MPa-1). Kmax_rootxylem: Sapwood-specific hydraulic conductivity root xylem (kg H2O·s-1·m-1·MPa-1). VCleaf_kmax: Maximum leaf hydraulic conductance (mmol H2O·s-1·m-2·MPa-1). VCleaf_c, VCleaf_d: Parameters leaf vulnerability curve (Weibull). VCstem_kmax: Maximum stem xylem conductance (mmol H2O·s-1·m-2·MPa-1). VCstem_c, VCstem_d: Parameters stem xylem vulnerability curve (Weibull). VCroot_c, VCroot_d: Parameters root xylem vulnerability curve (Weibull). Plant_kmax: Maximum whole-plant conductance (mmol H2O·s-1·m-2·MPa-1). FR_leaf, FR_stem, FR_root: Fraction whole-plant resistance corresponding segment. Gswmin: Minimum stomatal conductance water vapor (mol H2O·m-2·s-1). Gswmax: Maximum stomatal conductance water vapor (mol H2O·m-2·s-1). Gsw_AC_slope: Slope Gsw vs Ac/Cs relationship (see photo_photosynthesisBaldocchi). Gs_P50, Gs_slope: Parameters curve describing decrease stomatal conductance function leaf water potential (sigmoid). Vmax298: Maximum Rubisco carboxylation rate 25ºC (micromol CO2·s-1·m-2). Jmax298: Maximum rate electron transport 25ºC (micromol photons·s-1·m-2). Kmax_stemxylem: Sapwood-specific hydraulic conductivity stem xylem (kg H2O·s-1·m-1·MPa-1). Kmax_rootxylem: Sapwood-specific hydraulic conductivity root xylem (kg H2O·s-1·m-1·MPa-1). VCleaf_kmax: Maximum leaf hydraulic conductance (mmol H2O·s-1·m-2·MPa-1). VCleaf_c, VCleaf_d: Parameters leaf vulnerability curve (Weibull). VCleaf_P50, VCleaf_slope: Parameters leaf vulnerability curve (sigmoid). VCstem_kmax: Maximum stem xylem conductance (mmol H2O·s-1·m-2·MPa-1). VCstem_c, VCstem_d: Parameters stem xylem vulnerability curve (Weibull). VCstem_P50, VCstem_slope: Parameters stem xylem vulnerability curve (sigmoid). VCroot_c, VCroot_d: Parameters root xylem vulnerability curve (Weibull). VCroot_P50, VCroot_slope: Parameters root xylem vulnerability curve (sigmoid). Plant_kmax: Maximum whole-plant conductance (mmol H2O·s-1·m-2·MPa-1). FR_leaf, FR_stem, FR_root: Fraction whole-plant resistance corresponding segment. paramsWaterStorage: data frame plant water storage parameters cohort: LeafPI0: Osmotic potential full turgor leaves (MPa). LeafEPS: Modulus elasticity (capacity cell wall resist changes volume response changes turgor) leaves (MPa). LeafAF: Apoplastic fraction (proportion water outside living cells) leaves. Vleaf: Storage water capacity leaves, per leaf area (L/m2). StemPI0: Osmotic potential full turgor symplastic xylem tissue (MPa). StemEPS: Modulus elasticity (capacity cell wall resist changes volume response changes turgor) symplastic xylem tissue (Mpa). StemAF: Apoplastic fraction (proportion water outside living cells) stem xylem. Vstem: Storage water capacity sapwood, per leaf area (L/m2). internalPhenology internalWater: data frames store internal state variables. internalFCCS: data frame fuel characteristics, according fuel_FCCS (fireHazardResults = TRUE, control list). Function growthInput() returns list class growthInput elements spwbInput, additional information. Element includes following additional columns: LA_live: Live leaf area per individual (m2/ind). LA_dead: Dead leaf area per individual (m2/ind). SA: Live sapwood area per individual (cm2/ind). paramsGrowth: data frame growth parameters cohort: RERleaf: Maintenance respiration rates (20ºC) leaves (g gluc·g dry-1·day-1). RERsapwood: Maintenance respiration rates (20ºC) sapwood (g gluc·g dry-1·day-1). RERfineroot: Maintenance respiration rates (20ºC) fine roots (g gluc·g dry-1·day-1). CCleaf: Leaf construction costs (g gluc·g dry-1). CCsapwood: Sapwood construction costs (g gluc·g dry-1). CCfineroot: Fine root construction costs (g gluc·g dry-1). RGRleafmax: Maximum leaf relative growth rate (m2·cm-2·day-1). RGRsapwoodmax: Maximum sapwood relative growth rate (cm2·cm-2·day-1). RGRfinerootmax: Maximum fine root relative growth rate (g dry·g dry-1·day-1). SRsapwood: Sapwood daily senescence rate (day-1). SRfineroot: Fine root daily senescence rate (day-1). RSSG: Minimum relative starch sapwood growth (proportion). fHDmin: Minimum value height--diameter ratio (dimensionless). fHDmax: Maximum value height--diameter ratio (dimensionless). WoodC: Wood carbon content per dry weight (g C /g dry). paramsMortalityRegeneration: data frame mortality/regeneration parameters cohort: MortalityBaselineRate: Deterministic proportion probability specifying baseline reduction cohort's density occurring year. SurvivalModelStep: Time step years empirical survival model depending stand basal area (e.g. 10). SurvivalB0: Intercept logistic baseline survival model depending stand basal area. SurvivalB1: Slope logistic baseline survival model depending stand basal area. RecrTreeDensity: Density tree recruits seeds. IngrowthTreeDensity: Density trees reaching ingrowth DBH. RecrTreeDBH: DBH tree recruits seeds resprouting (e.g. 1 cm). IngrowthTreeDBH: Ingrowth DBH trees (e.g. 7.5 cm). paramsAllometry: data frame allometric parameters cohort: Aash: Regression coefficient relating square shrub height shrub area. Absh, Bbsh: Allometric coefficients relating phytovolume dry weight shrub individuals. Acr, B1cr, B2cr, B3cr, C1cr, C2cr: Regression coefficients used calculate crown ratio trees. Acw, Bcw: Regression coefficients used calculated crown width trees. internalAllocation: data frame internal allocation variables cohort: allocationTarget: Value allocation target variable. leafAreaTarget: Target leaf area (m2) per individual. sapwoodAreaTarget: Target sapwood area (cm2) per individual. fineRootBiomassTarget: Target fine root biomass (g dry) per individual. crownBudPercent: Percentage crown buds. internalCarbon: data frame concentration (mol·gluc·l-1) metabolic storage carbon compartments leaves sapwood. internalMortality: data frame store cumulative mortality (density trees cover shrubs) predicted simulation,   also distinguishing mortality due starvation dessication.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/modelInput.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Input for simulation models — modelInput","text":"Functions spwbInput() growthInput() initialize inputs differently depending control parameters. IMPORTANT NOTE: Older function names forest2spwbInput forest2growthInput now deprecated, can still used back-compatibility.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/modelInput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Input for simulation models — modelInput","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/modelInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input for simulation models — modelInput","text":"","code":"#Load example plot plant data data(exampleforest)  # Example of aboveground parameters taken from a forest # described using LAI and crown ratio data(exampleforest2)  #Default species parameterization data(SpParamsMED)   # Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  # Initialize control parameters using 'Granier' transpiration mode control <- defaultControl(\"Granier\")  # Prepare spwb input spwbInput(exampleforest, examplesoil, SpParamsMED, control) #> $control #> $control$fillMissingRootParams #> [1] TRUE #>  #> $control$fillMissingSpParams #> [1] TRUE #>  #> $control$fillMissingWithGenusParams #> [1] TRUE #>  #> $control$verbose #> [1] TRUE #>  #> $control$subdailyResults #> [1] FALSE #>  #> $control$standResults #> [1] TRUE #>  #> $control$soilResults #> [1] TRUE #>  #> $control$snowResults #> [1] TRUE #>  #> $control$plantResults #> [1] TRUE #>  #> $control$plantWaterBalanceResults #> [1] TRUE #>  #> $control$labileCarbonBalanceResults #> [1] TRUE #>  #> $control$plantStructureResults #> [1] TRUE #>  #> $control$growthMortalityResults #> [1] TRUE #>  #> $control$leafResults #> [1] TRUE #>  #> $control$temperatureResults #> [1] TRUE #>  #> $control$fireHazardResults #> [1] FALSE #>  #> $control$fireHazardStandardWind #> [1] NA #>  #> $control$fireHazardStandardDFMC #> [1] NA #>  #> $control$transpirationMode #> [1] \"Granier\" #>  #> $control$soilFunctions #> [1] \"VG\" #>  #> $control$VG_PTF #> [1] \"Toth\" #>  #> $control$ndailysteps #> [1] 24 #>  #> $control$max_nsubsteps_soil #> [1] 300 #>  #> $control$defaultWindSpeed #> [1] 2.5 #>  #> $control$defaultCO2 #> [1] 386 #>  #> $control$defaultRainfallIntensityPerMonth #>  [1] 1.5 1.5 1.5 1.5 1.5 1.5 5.6 5.6 5.6 5.6 5.6 1.5 #>  #> $control$leafPhenology #> [1] TRUE #>  #> $control$bareSoilEvaporation #> [1] TRUE #>  #> $control$unlimitedSoilWater #> [1] FALSE #>  #> $control$interceptionMode #> [1] \"Gash1995\" #>  #> $control$infiltrationMode #> [1] \"GreenAmpt1911\" #>  #> $control$infiltrationCorrection #> [1] 5 #>  #> $control$soilDomains #> [1] \"buckets\" #>  #> $control$rhizosphereOverlap #> [1] \"total\" #>  #> $control$unfoldingDD #> [1] 300 #>  #> $control$verticalLayerSize #> [1] 100 #>  #> $control$windMeasurementHeight #> [1] 200 #>  #> $control$segmentedXylemVulnerability #> [1] TRUE #>  #> $control$stemCavitationRecovery #> [1] \"annual\" #>  #> $control$leafCavitationRecovery #> [1] \"annual\" #>  #> $control$lfmcComponent #> [1] \"fine\" #>  #> $control$hydraulicRedistributionFraction #> [1] 0.1 #>  #> $control$nsubsteps_canopy #> [1] 3600 #>  #> $control$taper #> [1] TRUE #>  #> $control$multiLayerBalance #> [1] FALSE #>  #> $control$sapFluidityVariation #> [1] TRUE #>  #> $control$TPhase_gmin #> [1] 37.5 #>  #> $control$Q10_1_gmin #> [1] 1.2 #>  #> $control$Q10_2_gmin #> [1] 4.8 #>  #> $control$rootRadialConductance #> [1] 4 #>  #> $control$averageFracRhizosphereResistance #> [1] 0.15 #>  #> $control$thermalCapacityLAI #> [1] 1e+06 #>  #> $control$boundaryLayerSize #> [1] 2000 #>  #> $control$cavitationRecoveryMaximumRate #> [1] 0.05 #>  #> $control$sunlitShade #> [1] TRUE #>  #> $control$numericParams #> $control$numericParams$maxNsteps #> [1] 400 #>  #> $control$numericParams$ntrial #> [1] 200 #>  #> $control$numericParams$psiTol #> [1] 1e-04 #>  #> $control$numericParams$ETol #> [1] 1e-07 #>  #>  #> $control$leafCavitationEffects #> [1] FALSE #>  #> $control$stemCavitationEffects #> [1] TRUE #>  #> $control$stomatalSubmodel #> [1] \"Baldocchi\" #>  #> $control$plantCapacitance #> [1] TRUE #>  #> $control$cavitationFlux #> [1] TRUE #>  #> $control$soilDisconnection #> [1] FALSE #>  #> $control$leafCuticularTranspiration #> [1] TRUE #>  #> $control$stemCuticularTranspiration #> [1] FALSE #>  #> $control$C_SApoInit #> [1] 2e-05 #>  #> $control$C_LApoInit #> [1] 1e-05 #>  #> $control$k_SSym #> [1] 0.26 #>  #> $control$fractionLeafSymplasm #> [1] 0.5 #>  #> $control$gs_NightFrac #> [1] 0.05 #>  #> $control$JarvisPAR #> [1] 0.003 #>  #> $control$fTRBToLeaf #> [1] 0.8 #>  #> $control$subdailyCarbonBalance #> [1] FALSE #>  #> $control$allowDessication #> [1] TRUE #>  #> $control$allowStarvation #> [1] TRUE #>  #> $control$sinkLimitation #> [1] TRUE #>  #> $control$shrubDynamics #> [1] TRUE #>  #> $control$herbDynamics #> [1] TRUE #>  #> $control$allocationStrategy #> [1] \"Al2As\" #>  #> $control$phloemConductanceFactor #> [1] 0.2 #>  #> $control$nonSugarConcentration #> [1] 0.25 #>  #> $control$equilibriumOsmoticConcentration #> $control$equilibriumOsmoticConcentration$leaf #> [1] 0.8 #>  #> $control$equilibriumOsmoticConcentration$sapwood #> [1] 0.6 #>  #>  #> $control$minimumRelativeStarchForGrowth #> [1] 0.5 #>  #> $control$constructionCosts #> $control$constructionCosts$leaf #> [1] 1.5 #>  #> $control$constructionCosts$sapwood #> [1] 1.47 #>  #> $control$constructionCosts$fineroot #> [1] 1.3 #>  #>  #> $control$senescenceRates #> $control$senescenceRates$sapwood #> [1] 0.000135 #>  #> $control$senescenceRates$fineroot #> [1] 0.001897231 #>  #>  #> $control$maximumRelativeGrowthRates #> $control$maximumRelativeGrowthRates$leaf #> [1] 0.09 #>  #> $control$maximumRelativeGrowthRates$cambium #> [1] 0.0025 #>  #> $control$maximumRelativeGrowthRates$sapwood #> [1] 0.002 #>  #> $control$maximumRelativeGrowthRates$fineroot #> [1] 0.1 #>  #>  #> $control$mortalityMode #> [1] \"density/deterministic\" #>  #> $control$mortalityBaselineRate #> [1] 0.0015 #>  #> $control$mortalityRelativeSugarThreshold #> [1] 0.4 #>  #> $control$mortalityRWCThreshold #> [1] 0.4 #>  #> $control$recrTreeDBH #> [1] 1 #>  #> $control$recrTreeDensity #> [1] 3000 #>  #> $control$ingrowthTreeDBH #> [1] 7.5 #>  #> $control$ingrowthTreeDensity #> [1] 127 #>  #> $control$allowSeedBankDynamics #> [1] TRUE #>  #> $control$allowRecruitment #> [1] TRUE #>  #> $control$allowResprouting #> [1] TRUE #>  #> $control$recruitmentMode #> [1] \"stochastic\" #>  #> $control$removeEmptyCohorts #> [1] TRUE #>  #> $control$minimumTreeCohortDensity #> [1] 1 #>  #> $control$minimumShrubCohortCover #> [1] 0.01 #>  #> $control$dynamicallyMergeCohorts #> [1] TRUE #>  #> $control$keepCohortsWithObsID #> [1] FALSE #>  #> $control$seedRain #> NULL #>  #> $control$seedProductionTreeHeight #> [1] 300 #>  #> $control$seedProductionShrubHeight #> [1] 30 #>  #> $control$probRecr #> [1] 0.05 #>  #> $control$minTempRecr #> [1] 0 #>  #> $control$minMoistureRecr #> [1] 0.3 #>  #> $control$minFPARRecr #> [1] 10 #>  #> $control$recrTreeHeight #> [1] 620 #>  #> $control$recrShrubCover #> [1] 1 #>  #> $control$recrShrubHeight #> [1] 25 #>  #> $control$recrTreeZ50 #> [1] 100 #>  #> $control$recrShrubZ50 #> [1] 50 #>  #> $control$recrTreeZ95 #> [1] 1000 #>  #> $control$recrShrubZ95 #> [1] 500 #>  #>  #> $soil #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.303861        0.041     0.423715 1   NA #> 2 1.303861        0.041     0.423715 1   NA #> 3 1.303861        0.041     0.423715 1   NA #> 4 1.303861        0.041     0.423715 1   NA #>  #> $snowpack #> [1] 0 #>  #> $canopy #>    zlow zmid  zup LAIlive LAIexpanded LAIdead Tair Cair VPair #> 1     0   50  100      NA          NA      NA   NA   NA    NA #> 2   100  150  200      NA          NA      NA   NA   NA    NA #> 3   200  250  300      NA          NA      NA   NA   NA    NA #> 4   300  350  400      NA          NA      NA   NA   NA    NA #> 5   400  450  500      NA          NA      NA   NA   NA    NA #> 6   500  550  600      NA          NA      NA   NA   NA    NA #> 7   600  650  700      NA          NA      NA   NA   NA    NA #> 8   700  750  800      NA          NA      NA   NA   NA    NA #> 9   800  850  900      NA          NA      NA   NA   NA    NA #> 10  900  950 1000      NA          NA      NA   NA   NA    NA #> 11 1000 1050 1100      NA          NA      NA   NA   NA    NA #> 12 1100 1150 1200      NA          NA      NA   NA   NA    NA #> 13 1200 1250 1300      NA          NA      NA   NA   NA    NA #> 14 1300 1350 1400      NA          NA      NA   NA   NA    NA #> 15 1400 1450 1500      NA          NA      NA   NA   NA    NA #> 16 1500 1550 1600      NA          NA      NA   NA   NA    NA #> 17 1600 1650 1700      NA          NA      NA   NA   NA    NA #> 18 1700 1750 1800      NA          NA      NA   NA   NA    NA #> 19 1800 1850 1900      NA          NA      NA   NA   NA    NA #> 20 1900 1950 2000      NA          NA      NA   NA   NA    NA #> 21 2000 2050 2100      NA          NA      NA   NA   NA    NA #> 22 2100 2150 2200      NA          NA      NA   NA   NA    NA #> 23 2200 2250 2300      NA          NA      NA   NA   NA    NA #> 24 2300 2350 2400      NA          NA      NA   NA   NA    NA #> 25 2400 2450 2500      NA          NA      NA   NA   NA    NA #> 26 2500 2550 2600      NA          NA      NA   NA   NA    NA #> 27 2600 2650 2700      NA          NA      NA   NA   NA    NA #> 28 2700 2750 2800      NA          NA      NA   NA   NA    NA #>  #> $herbLAI #> [1] 0.1736369 #>  #> $herbLAImax #> [1] 0.252 #>  #> $cohorts #>         SP              Name #> T1_148 148  Pinus halepensis #> T2_168 168      Quercus ilex #> S1_165 165 Quercus coccifera #>  #> $above #>          H        CR   LAI_live LAI_expanded LAI_dead ObsID #> T1_148 800 0.6605196 0.84874773   0.84874773        0  <NA> #> T2_168 660 0.6055642 0.70557382   0.70557382        0  <NA> #> S1_165  80 0.8032817 0.03062604   0.03062604        0  <NA> #>  #> $below #>        Z50  Z95 Z100 #> T1_148 100  600   NA #> T2_168 300 1000   NA #> S1_165 200 1000   NA #>  #> $belowLayers #> $belowLayers$V #>                1         2          3           4 #> T1_148 0.8604899 0.1194556 0.01511005 0.004944476 #> T2_168 0.5008953 0.4505941 0.04064831 0.007862284 #> S1_165 0.6799879 0.2737911 0.03567632 0.010544678 #>  #> $belowLayers$L #>          1   2    3    4 #> T1_148 150 650 1500 3000 #> T2_168 150 650 1500 3000 #> S1_165 150 650 1500 3000 #>  #> $belowLayers$Wpool #>        1 2 3 4 #> T1_148 1 1 1 1 #> T2_168 1 1 1 1 #> S1_165 1 1 1 1 #>  #>  #> $paramsPhenology #>             PhenologyType LeafDuration t0gdd  Sgdd Tbgdd  Ssen Phsen Tbsen xsen #> T1_148 oneflush-evergreen     2.536875  50.0 200.0  0.00  8268  12.5  28.5    2 #> T2_168 oneflush-evergreen     2.183837  54.5 240.7  4.34 10178  12.5  28.5    2 #> S1_165 oneflush-evergreen     1.250000  54.5 240.7  4.34 10178  12.5  28.5    2 #>        ysen #> T1_148    2 #> T2_168    2 #> S1_165    2 #>  #> $paramsAnatomy #>           Al2As Ar2Al      SLA LeafDensity WoodDensity FineRootDensity      SRL #> T1_148 1317.523     1 5.140523   0.2982842   0.6077016       0.2982842 3172.572 #> T2_168 3908.823     1 6.340000   0.4893392   0.9008264       0.4893392 4398.812 #> S1_165 4189.325     1 4.980084   0.3709679   0.4389106       0.3709679 4398.812 #>        RLD     r635 #> T1_148  10 1.964226 #> T2_168  10 1.805872 #> S1_165  10 2.289452 #>  #> $paramsInterception #>        kPAR      kSWR   g #> T1_148 0.50 0.3703704 1.0 #> T2_168 0.55 0.4074074 0.5 #> S1_165 0.55 0.4074074 0.5 #>  #> $paramsTranspiration #>             Gswmin  Tmax_LAI   Tmax_LAIsq Psi_Extract Exp_Extract  VCleaf_c #> T1_148 0.003086667 0.1869849 -0.008372458  -0.9218219    1.504542 11.137050 #> T2_168 0.004473333 0.1251027 -0.005601615  -1.9726871    1.149052  1.339370 #> S1_165 0.010455247 0.1340000 -0.006000000  -2.1210726    1.300000  2.254991 #>         VCleaf_d  VCstem_c  VCstem_d      WUE   WUE_par     WUE_co2    WUE_vpd #> T1_148 -2.380849 12.709999 -5.290000 8.525550 0.5239136 0.002586327 -0.2647169 #> T2_168 -2.582279  3.560000 -7.720000 8.968208 0.1412266 0.002413091 -0.5664879 #> S1_165 -3.133381  3.095442 -7.857378 7.900000 0.3643000 0.002757000 -0.4636000 #>  #> $paramsWaterStorage #>           maxFMC   LeafPI0   LeafEPS LeafAF     Vleaf   StemPI0   StemEPS #> T1_148 126.03063 -1.591429  8.918571 0.3525 0.5258525 -2.008039 13.256355 #> T2_168  93.15304 -1.483333 19.260000 0.1700 0.2199087 -3.227438 46.420610 #> S1_165  96.53441 -2.370000 17.230000 0.2400 0.4108968 -1.305868  6.297155 #>           StemAF  Vsapwood #> T1_148 0.9236406 4.1638559 #> T2_168 0.6238125 0.8135590 #> S1_165 0.6238125 0.3177724 #>  #> $internalPhenology #>        gdd sen budFormation leafUnfolding leafSenescence leafDormancy phi #> T1_148   0   0        FALSE         FALSE          FALSE        FALSE   0 #> T2_168   0   0        FALSE         FALSE          FALSE        FALSE   0 #> S1_165   0   0        FALSE         FALSE          FALSE        FALSE   0 #>  #> $internalWater #>        PlantPsi LeafPLC StemPLC #> T1_148   -0.033       0       0 #> T2_168   -0.033       0       0 #> S1_165   -0.033       0       0 #>  #> $internalLAIDistribution #> $internalLAIDistribution$PrevLAIexpanded #> [1] 0 0 0 #>  #> $internalLAIDistribution$PrevLAIdead #> [1] 0 0 0 #>  #> $internalLAIDistribution$PARcohort #> [1] 0 0 0 #>  #> $internalLAIDistribution$live #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #> $internalLAIDistribution$expanded #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #> $internalLAIDistribution$dead #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #>  #> $internalFCCS #> data frame with 0 columns and 0 rows #>  #> attr(,\"class\") #> [1] \"spwbInput\" \"list\"                       # Prepare input for 'Sperry' transpiration mode control <- defaultControl(\"Sperry\") spwbInput(exampleforest,examplesoil,SpParamsMED, control) #> $control #> $control$fillMissingRootParams #> [1] TRUE #>  #> $control$fillMissingSpParams #> [1] TRUE #>  #> $control$fillMissingWithGenusParams #> [1] TRUE #>  #> $control$verbose #> [1] TRUE #>  #> $control$subdailyResults #> [1] FALSE #>  #> $control$standResults #> [1] TRUE #>  #> $control$soilResults #> [1] TRUE #>  #> $control$snowResults #> [1] TRUE #>  #> $control$plantResults #> [1] TRUE #>  #> $control$plantWaterBalanceResults #> [1] TRUE #>  #> $control$labileCarbonBalanceResults #> [1] TRUE #>  #> $control$plantStructureResults #> [1] TRUE #>  #> $control$growthMortalityResults #> [1] TRUE #>  #> $control$leafResults #> [1] TRUE #>  #> $control$temperatureResults #> [1] TRUE #>  #> $control$fireHazardResults #> [1] FALSE #>  #> $control$fireHazardStandardWind #> [1] NA #>  #> $control$fireHazardStandardDFMC #> [1] NA #>  #> $control$transpirationMode #> [1] \"Sperry\" #>  #> $control$soilFunctions #> [1] \"VG\" #>  #> $control$VG_PTF #> [1] \"Toth\" #>  #> $control$ndailysteps #> [1] 24 #>  #> $control$max_nsubsteps_soil #> [1] 300 #>  #> $control$defaultWindSpeed #> [1] 2.5 #>  #> $control$defaultCO2 #> [1] 386 #>  #> $control$defaultRainfallIntensityPerMonth #>  [1] 1.5 1.5 1.5 1.5 1.5 1.5 5.6 5.6 5.6 5.6 5.6 1.5 #>  #> $control$leafPhenology #> [1] TRUE #>  #> $control$bareSoilEvaporation #> [1] TRUE #>  #> $control$unlimitedSoilWater #> [1] FALSE #>  #> $control$interceptionMode #> [1] \"Gash1995\" #>  #> $control$infiltrationMode #> [1] \"GreenAmpt1911\" #>  #> $control$infiltrationCorrection #> [1] 5 #>  #> $control$soilDomains #> [1] \"buckets\" #>  #> $control$rhizosphereOverlap #> [1] \"total\" #>  #> $control$unfoldingDD #> [1] 300 #>  #> $control$verticalLayerSize #> [1] 100 #>  #> $control$windMeasurementHeight #> [1] 200 #>  #> $control$segmentedXylemVulnerability #> [1] TRUE #>  #> $control$stemCavitationRecovery #> [1] \"annual\" #>  #> $control$leafCavitationRecovery #> [1] \"annual\" #>  #> $control$lfmcComponent #> [1] \"fine\" #>  #> $control$hydraulicRedistributionFraction #> [1] 0.1 #>  #> $control$nsubsteps_canopy #> [1] 3600 #>  #> $control$taper #> [1] TRUE #>  #> $control$multiLayerBalance #> [1] FALSE #>  #> $control$sapFluidityVariation #> [1] TRUE #>  #> $control$TPhase_gmin #> [1] 37.5 #>  #> $control$Q10_1_gmin #> [1] 1.2 #>  #> $control$Q10_2_gmin #> [1] 4.8 #>  #> $control$rootRadialConductance #> [1] 4 #>  #> $control$averageFracRhizosphereResistance #> [1] 0.15 #>  #> $control$thermalCapacityLAI #> [1] 1e+06 #>  #> $control$boundaryLayerSize #> [1] 2000 #>  #> $control$cavitationRecoveryMaximumRate #> [1] 0.05 #>  #> $control$sunlitShade #> [1] TRUE #>  #> $control$numericParams #> $control$numericParams$maxNsteps #> [1] 400 #>  #> $control$numericParams$ntrial #> [1] 200 #>  #> $control$numericParams$psiTol #> [1] 1e-04 #>  #> $control$numericParams$ETol #> [1] 1e-07 #>  #>  #> $control$leafCavitationEffects #> [1] FALSE #>  #> $control$stemCavitationEffects #> [1] TRUE #>  #> $control$stomatalSubmodel #> [1] \"Baldocchi\" #>  #> $control$plantCapacitance #> [1] TRUE #>  #> $control$cavitationFlux #> [1] TRUE #>  #> $control$soilDisconnection #> [1] FALSE #>  #> $control$leafCuticularTranspiration #> [1] TRUE #>  #> $control$stemCuticularTranspiration #> [1] FALSE #>  #> $control$C_SApoInit #> [1] 2e-05 #>  #> $control$C_LApoInit #> [1] 1e-05 #>  #> $control$k_SSym #> [1] 0.26 #>  #> $control$fractionLeafSymplasm #> [1] 0.5 #>  #> $control$gs_NightFrac #> [1] 0.05 #>  #> $control$JarvisPAR #> [1] 0.003 #>  #> $control$fTRBToLeaf #> [1] 0.8 #>  #> $control$subdailyCarbonBalance #> [1] FALSE #>  #> $control$allowDessication #> [1] TRUE #>  #> $control$allowStarvation #> [1] TRUE #>  #> $control$sinkLimitation #> [1] TRUE #>  #> $control$shrubDynamics #> [1] TRUE #>  #> $control$herbDynamics #> [1] TRUE #>  #> $control$allocationStrategy #> [1] \"Al2As\" #>  #> $control$phloemConductanceFactor #> [1] 0.2 #>  #> $control$nonSugarConcentration #> [1] 0.25 #>  #> $control$equilibriumOsmoticConcentration #> $control$equilibriumOsmoticConcentration$leaf #> [1] 0.8 #>  #> $control$equilibriumOsmoticConcentration$sapwood #> [1] 0.6 #>  #>  #> $control$minimumRelativeStarchForGrowth #> [1] 0.5 #>  #> $control$constructionCosts #> $control$constructionCosts$leaf #> [1] 1.5 #>  #> $control$constructionCosts$sapwood #> [1] 1.47 #>  #> $control$constructionCosts$fineroot #> [1] 1.3 #>  #>  #> $control$senescenceRates #> $control$senescenceRates$sapwood #> [1] 0.000135 #>  #> $control$senescenceRates$fineroot #> [1] 0.001897231 #>  #>  #> $control$maximumRelativeGrowthRates #> $control$maximumRelativeGrowthRates$leaf #> [1] 0.09 #>  #> $control$maximumRelativeGrowthRates$cambium #> [1] 0.0025 #>  #> $control$maximumRelativeGrowthRates$sapwood #> [1] 0.002 #>  #> $control$maximumRelativeGrowthRates$fineroot #> [1] 0.1 #>  #>  #> $control$mortalityMode #> [1] \"density/deterministic\" #>  #> $control$mortalityBaselineRate #> [1] 0.0015 #>  #> $control$mortalityRelativeSugarThreshold #> [1] 0.4 #>  #> $control$mortalityRWCThreshold #> [1] 0.4 #>  #> $control$recrTreeDBH #> [1] 1 #>  #> $control$recrTreeDensity #> [1] 3000 #>  #> $control$ingrowthTreeDBH #> [1] 7.5 #>  #> $control$ingrowthTreeDensity #> [1] 127 #>  #> $control$allowSeedBankDynamics #> [1] TRUE #>  #> $control$allowRecruitment #> [1] TRUE #>  #> $control$allowResprouting #> [1] TRUE #>  #> $control$recruitmentMode #> [1] \"stochastic\" #>  #> $control$removeEmptyCohorts #> [1] TRUE #>  #> $control$minimumTreeCohortDensity #> [1] 1 #>  #> $control$minimumShrubCohortCover #> [1] 0.01 #>  #> $control$dynamicallyMergeCohorts #> [1] TRUE #>  #> $control$keepCohortsWithObsID #> [1] FALSE #>  #> $control$seedRain #> NULL #>  #> $control$seedProductionTreeHeight #> [1] 300 #>  #> $control$seedProductionShrubHeight #> [1] 30 #>  #> $control$probRecr #> [1] 0.05 #>  #> $control$minTempRecr #> [1] 0 #>  #> $control$minMoistureRecr #> [1] 0.3 #>  #> $control$minFPARRecr #> [1] 10 #>  #> $control$recrTreeHeight #> [1] 620 #>  #> $control$recrShrubCover #> [1] 1 #>  #> $control$recrShrubHeight #> [1] 25 #>  #> $control$recrTreeZ50 #> [1] 100 #>  #> $control$recrShrubZ50 #> [1] 50 #>  #> $control$recrTreeZ95 #> [1] 1000 #>  #> $control$recrShrubZ95 #> [1] 500 #>  #>  #> $soil #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.303861        0.041     0.423715 1   NA #> 2 1.303861        0.041     0.423715 1   NA #> 3 1.303861        0.041     0.423715 1   NA #> 4 1.303861        0.041     0.423715 1   NA #>  #> $snowpack #> [1] 0 #>  #> $canopy #>    zlow zmid  zup LAIlive LAIexpanded LAIdead Tair Cair VPair #> 1     0   50  100      NA          NA      NA   NA   NA    NA #> 2   100  150  200      NA          NA      NA   NA   NA    NA #> 3   200  250  300      NA          NA      NA   NA   NA    NA #> 4   300  350  400      NA          NA      NA   NA   NA    NA #> 5   400  450  500      NA          NA      NA   NA   NA    NA #> 6   500  550  600      NA          NA      NA   NA   NA    NA #> 7   600  650  700      NA          NA      NA   NA   NA    NA #> 8   700  750  800      NA          NA      NA   NA   NA    NA #> 9   800  850  900      NA          NA      NA   NA   NA    NA #> 10  900  950 1000      NA          NA      NA   NA   NA    NA #> 11 1000 1050 1100      NA          NA      NA   NA   NA    NA #> 12 1100 1150 1200      NA          NA      NA   NA   NA    NA #> 13 1200 1250 1300      NA          NA      NA   NA   NA    NA #> 14 1300 1350 1400      NA          NA      NA   NA   NA    NA #> 15 1400 1450 1500      NA          NA      NA   NA   NA    NA #> 16 1500 1550 1600      NA          NA      NA   NA   NA    NA #> 17 1600 1650 1700      NA          NA      NA   NA   NA    NA #> 18 1700 1750 1800      NA          NA      NA   NA   NA    NA #> 19 1800 1850 1900      NA          NA      NA   NA   NA    NA #> 20 1900 1950 2000      NA          NA      NA   NA   NA    NA #> 21 2000 2050 2100      NA          NA      NA   NA   NA    NA #> 22 2100 2150 2200      NA          NA      NA   NA   NA    NA #> 23 2200 2250 2300      NA          NA      NA   NA   NA    NA #> 24 2300 2350 2400      NA          NA      NA   NA   NA    NA #> 25 2400 2450 2500      NA          NA      NA   NA   NA    NA #> 26 2500 2550 2600      NA          NA      NA   NA   NA    NA #> 27 2600 2650 2700      NA          NA      NA   NA   NA    NA #> 28 2700 2750 2800      NA          NA      NA   NA   NA    NA #>  #> $herbLAI #> [1] 0.1736369 #>  #> $herbLAImax #> [1] 0.252 #>  #> $cohorts #>         SP              Name #> T1_148 148  Pinus halepensis #> T2_168 168      Quercus ilex #> S1_165 165 Quercus coccifera #>  #> $above #>          H        CR   LAI_live LAI_expanded LAI_dead ObsID #> T1_148 800 0.6605196 0.84874773   0.84874773        0  <NA> #> T2_168 660 0.6055642 0.70557382   0.70557382        0  <NA> #> S1_165  80 0.8032817 0.03062604   0.03062604        0  <NA> #>  #> $below #>        Z50  Z95 Z100 #> T1_148 100  600   NA #> T2_168 300 1000   NA #> S1_165 200 1000   NA #>  #> $belowLayers #> $belowLayers$V #>                1         2          3           4 #> T1_148 0.8604899 0.1194556 0.01511005 0.004944476 #> T2_168 0.5008953 0.4505941 0.04064831 0.007862284 #> S1_165 0.6799879 0.2737911 0.03567632 0.010544678 #>  #> $belowLayers$L #>               1        2        3        4 #> T1_148 2289.062 1566.552 2250.052 4226.166 #> T2_168 1817.571 2100.346 2410.127 4285.194 #> S1_165 1085.030 1380.808 2170.587 4146.637 #>  #> $belowLayers$VGrhizo_kmax #>               1        2         3         4 #> T1_148 11478618  1593494  201562.5  65957.49 #> T2_168 36121247 32493859 2931286.8 566975.78 #> S1_165 10941459  4405482  574055.7 169670.90 #>  #> $belowLayers$VCroot_kmax #>               1         2          3           4 #> T1_148 2.382795 0.4833484 0.04256689 0.007416044 #> T2_168 1.568929 1.2213562 0.09601747 0.010445417 #> S1_165 2.407779 0.7618041 0.06314806 0.009770000 #>  #> $belowLayers$Wpool #>        1 2 3 4 #> T1_148 1 1 1 1 #> T2_168 1 1 1 1 #> S1_165 1 1 1 1 #>  #> $belowLayers$RhizoPsi #>             1      2      3      4 #> T1_148 -0.033 -0.033 -0.033 -0.033 #> T2_168 -0.033 -0.033 -0.033 -0.033 #> S1_165 -0.033 -0.033 -0.033 -0.033 #>  #>  #> $paramsPhenology #>             PhenologyType LeafDuration t0gdd  Sgdd Tbgdd  Ssen Phsen Tbsen xsen #> T1_148 oneflush-evergreen     2.536875  50.0 200.0  0.00  8268  12.5  28.5    2 #> T2_168 oneflush-evergreen     2.183837  54.5 240.7  4.34 10178  12.5  28.5    2 #> S1_165 oneflush-evergreen     1.250000  54.5 240.7  4.34 10178  12.5  28.5    2 #>        ysen #> T1_148    2 #> T2_168    2 #> S1_165    2 #>  #> $paramsAnatomy #>        Hmed    Al2As      SLA LeafWidth LeafDensity WoodDensity FineRootDensity #> T1_148  850 1317.523 5.140523 0.1384772   0.2982842   0.6077016       0.2982842 #> T2_168  500 3908.823 6.340000 1.7674359   0.4893392   0.9008264       0.4893392 #> S1_165   80 4189.325 4.980084 1.3761085   0.3709679   0.4389106       0.3709679 #>        conduit2sapwood      SRL RLD     r635 #> T1_148       0.9236406 3172.572  10 1.964226 #> T2_168       0.6238125 4398.812  10 1.805872 #> S1_165       0.6238125 4398.812  10 2.289452 #>  #> $paramsInterception #>        LeafAngle LeafAngleSD   Beta_p   Beta_q ClumpingIndex kPAR alphaSWR #> T1_148      53.7       21.55 1.907817 1.289641          0.75 0.50      0.7 #> T2_168      53.7       21.55 1.907817 1.289641          0.75 0.55      0.7 #> S1_165      53.7       21.55 1.907817 1.289641          0.75 0.55      0.7 #>        gammaSWR   g #> T1_148     0.14 1.0 #> T2_168     0.18 0.5 #> S1_165     0.18 0.5 #>  #> $paramsTranspiration #>             Gswmin    Gswmax  Vmax298  Jmax298 Kmax_stemxylem Kmax_rootxylem #> T1_148 0.003086667 0.2850000 72.19617 124.1687           0.15           0.60 #> T2_168 0.004473333 0.2007222 68.51600 118.7863           0.40           1.60 #> S1_165 0.010455247 0.2830167 62.78100 118.4486           0.29           1.16 #>        VCleaf_kmax VCleafapo_kmax  VCleaf_c  VCleaf_d kleaf_symp VCstem_kmax #> T1_148    4.000000        8.00000 11.137050 -2.380849    8.00000    1.339563 #> T2_168    4.000000        8.00000  1.339370 -2.582279    8.00000    1.620936 #> S1_165    9.579077       19.15815  2.254991 -3.133381   19.15815    4.599269 #>         VCstem_c  VCstem_d VCroot_kmax  VCroot_c  VCroot_d VGrhizo_kmax #> T1_148 12.709999 -5.290000    2.916127 11.137050 -3.065569     13339632 #> T2_168  3.560000 -7.720000    2.896748  1.339370 -2.214081     72113368 #> S1_165  3.095442 -7.857378    3.242501  1.402489 -1.523324     16090667 #>        Plant_kmax   FR_leaf   FR_stem   FR_root #> T1_148  0.7465846 0.1866462 0.5573346 0.2560193 #> T2_168  0.8249857 0.2062464 0.5089563 0.2847972 #> S1_165  1.5867376 0.1656462 0.3449978 0.4893561 #>  #> $paramsWaterStorage #>           maxFMC   LeafPI0   LeafEPS LeafAF     Vleaf   StemPI0   StemEPS #> T1_148 126.03063 -1.591429  8.918571 0.3525 0.5258525 -2.008039 13.256355 #> T2_168  93.15304 -1.483333 19.260000 0.1700 0.2199087 -3.227438 46.420610 #> S1_165  96.53441 -2.370000 17.230000 0.2400 0.4108968 -1.305868  6.297155 #>           StemAF Vsapwood #> T1_148 0.9236406 6.174277 #> T2_168 0.6238125 1.278142 #> S1_165 0.6238125 1.064511 #>  #> $internalPhenology #>        gdd sen budFormation leafUnfolding leafSenescence leafDormancy phi #> T1_148   0   0        FALSE         FALSE          FALSE        FALSE   0 #> T2_168   0   0        FALSE         FALSE          FALSE        FALSE   0 #> S1_165   0   0        FALSE         FALSE          FALSE        FALSE   0 #>  #> $internalWater #>        Einst RootCrownPsi LeafPsi StemPsi LeafSympPsi StemSympPsi LeafPLC #> T1_148     0       -0.033  -0.033  -0.033      -0.033      -0.033       0 #> T2_168     0       -0.033  -0.033  -0.033      -0.033      -0.033       0 #> S1_165     0       -0.033  -0.033  -0.033      -0.033      -0.033       0 #>        StemPLC #> T1_148       0 #> T2_168       0 #> S1_165       0 #>  #> $internalLAIDistribution #> $internalLAIDistribution$PrevLAIexpanded #> [1] 0 0 0 #>  #> $internalLAIDistribution$PrevLAIdead #> [1] 0 0 0 #>  #> $internalLAIDistribution$PARcohort #> [1] 0 0 0 #>  #> $internalLAIDistribution$live #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #> $internalLAIDistribution$expanded #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #> $internalLAIDistribution$dead #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #>  #> $internalFCCS #> data frame with 0 columns and 0 rows #>  #> attr(,\"class\") #> [1] \"spwbInput\" \"list\"       # Prepare input for 'Sureau' transpiration mode control <- defaultControl(\"Sureau\") spwbInput(exampleforest,examplesoil,SpParamsMED, control) #> $control #> $control$fillMissingRootParams #> [1] TRUE #>  #> $control$fillMissingSpParams #> [1] TRUE #>  #> $control$fillMissingWithGenusParams #> [1] TRUE #>  #> $control$verbose #> [1] TRUE #>  #> $control$subdailyResults #> [1] FALSE #>  #> $control$standResults #> [1] TRUE #>  #> $control$soilResults #> [1] TRUE #>  #> $control$snowResults #> [1] TRUE #>  #> $control$plantResults #> [1] TRUE #>  #> $control$plantWaterBalanceResults #> [1] TRUE #>  #> $control$labileCarbonBalanceResults #> [1] TRUE #>  #> $control$plantStructureResults #> [1] TRUE #>  #> $control$growthMortalityResults #> [1] TRUE #>  #> $control$leafResults #> [1] TRUE #>  #> $control$temperatureResults #> [1] TRUE #>  #> $control$fireHazardResults #> [1] FALSE #>  #> $control$fireHazardStandardWind #> [1] NA #>  #> $control$fireHazardStandardDFMC #> [1] NA #>  #> $control$transpirationMode #> [1] \"Sureau\" #>  #> $control$soilFunctions #> [1] \"VG\" #>  #> $control$VG_PTF #> [1] \"Toth\" #>  #> $control$ndailysteps #> [1] 24 #>  #> $control$max_nsubsteps_soil #> [1] 300 #>  #> $control$defaultWindSpeed #> [1] 2.5 #>  #> $control$defaultCO2 #> [1] 386 #>  #> $control$defaultRainfallIntensityPerMonth #>  [1] 1.5 1.5 1.5 1.5 1.5 1.5 5.6 5.6 5.6 5.6 5.6 1.5 #>  #> $control$leafPhenology #> [1] TRUE #>  #> $control$bareSoilEvaporation #> [1] TRUE #>  #> $control$unlimitedSoilWater #> [1] FALSE #>  #> $control$interceptionMode #> [1] \"Gash1995\" #>  #> $control$infiltrationMode #> [1] \"GreenAmpt1911\" #>  #> $control$infiltrationCorrection #> [1] 5 #>  #> $control$soilDomains #> [1] \"buckets\" #>  #> $control$rhizosphereOverlap #> [1] \"total\" #>  #> $control$unfoldingDD #> [1] 300 #>  #> $control$verticalLayerSize #> [1] 100 #>  #> $control$windMeasurementHeight #> [1] 200 #>  #> $control$segmentedXylemVulnerability #> [1] FALSE #>  #> $control$stemCavitationRecovery #> [1] \"annual\" #>  #> $control$leafCavitationRecovery #> [1] \"annual\" #>  #> $control$lfmcComponent #> [1] \"fine\" #>  #> $control$hydraulicRedistributionFraction #> [1] 0.1 #>  #> $control$nsubsteps_canopy #> [1] 3600 #>  #> $control$taper #> [1] TRUE #>  #> $control$multiLayerBalance #> [1] FALSE #>  #> $control$sapFluidityVariation #> [1] TRUE #>  #> $control$TPhase_gmin #> [1] 37.5 #>  #> $control$Q10_1_gmin #> [1] 1.2 #>  #> $control$Q10_2_gmin #> [1] 4.8 #>  #> $control$rootRadialConductance #> [1] 4 #>  #> $control$averageFracRhizosphereResistance #> [1] 0.15 #>  #> $control$thermalCapacityLAI #> [1] 1e+06 #>  #> $control$boundaryLayerSize #> [1] 2000 #>  #> $control$cavitationRecoveryMaximumRate #> [1] 0.05 #>  #> $control$sunlitShade #> [1] TRUE #>  #> $control$numericParams #> $control$numericParams$maxNsteps #> [1] 400 #>  #> $control$numericParams$ntrial #> [1] 200 #>  #> $control$numericParams$psiTol #> [1] 1e-04 #>  #> $control$numericParams$ETol #> [1] 1e-07 #>  #>  #> $control$leafCavitationEffects #> [1] FALSE #>  #> $control$stemCavitationEffects #> [1] TRUE #>  #> $control$stomatalSubmodel #> [1] \"Baldocchi\" #>  #> $control$plantCapacitance #> [1] TRUE #>  #> $control$cavitationFlux #> [1] TRUE #>  #> $control$soilDisconnection #> [1] FALSE #>  #> $control$leafCuticularTranspiration #> [1] TRUE #>  #> $control$stemCuticularTranspiration #> [1] FALSE #>  #> $control$C_SApoInit #> [1] 2e-05 #>  #> $control$C_LApoInit #> [1] 1e-05 #>  #> $control$k_SSym #> [1] 0.26 #>  #> $control$fractionLeafSymplasm #> [1] 0.5 #>  #> $control$gs_NightFrac #> [1] 0.05 #>  #> $control$JarvisPAR #> [1] 0.003 #>  #> $control$fTRBToLeaf #> [1] 0.8 #>  #> $control$subdailyCarbonBalance #> [1] FALSE #>  #> $control$allowDessication #> [1] TRUE #>  #> $control$allowStarvation #> [1] TRUE #>  #> $control$sinkLimitation #> [1] TRUE #>  #> $control$shrubDynamics #> [1] TRUE #>  #> $control$herbDynamics #> [1] TRUE #>  #> $control$allocationStrategy #> [1] \"Al2As\" #>  #> $control$phloemConductanceFactor #> [1] 0.2 #>  #> $control$nonSugarConcentration #> [1] 0.25 #>  #> $control$equilibriumOsmoticConcentration #> $control$equilibriumOsmoticConcentration$leaf #> [1] 0.8 #>  #> $control$equilibriumOsmoticConcentration$sapwood #> [1] 0.6 #>  #>  #> $control$minimumRelativeStarchForGrowth #> [1] 0.5 #>  #> $control$constructionCosts #> $control$constructionCosts$leaf #> [1] 1.5 #>  #> $control$constructionCosts$sapwood #> [1] 1.47 #>  #> $control$constructionCosts$fineroot #> [1] 1.3 #>  #>  #> $control$senescenceRates #> $control$senescenceRates$sapwood #> [1] 0.000135 #>  #> $control$senescenceRates$fineroot #> [1] 0.001897231 #>  #>  #> $control$maximumRelativeGrowthRates #> $control$maximumRelativeGrowthRates$leaf #> [1] 0.09 #>  #> $control$maximumRelativeGrowthRates$cambium #> [1] 0.0025 #>  #> $control$maximumRelativeGrowthRates$sapwood #> [1] 0.002 #>  #> $control$maximumRelativeGrowthRates$fineroot #> [1] 0.1 #>  #>  #> $control$mortalityMode #> [1] \"density/deterministic\" #>  #> $control$mortalityBaselineRate #> [1] 0.0015 #>  #> $control$mortalityRelativeSugarThreshold #> [1] 0.4 #>  #> $control$mortalityRWCThreshold #> [1] 0.4 #>  #> $control$recrTreeDBH #> [1] 1 #>  #> $control$recrTreeDensity #> [1] 3000 #>  #> $control$ingrowthTreeDBH #> [1] 7.5 #>  #> $control$ingrowthTreeDensity #> [1] 127 #>  #> $control$allowSeedBankDynamics #> [1] TRUE #>  #> $control$allowRecruitment #> [1] TRUE #>  #> $control$allowResprouting #> [1] TRUE #>  #> $control$recruitmentMode #> [1] \"stochastic\" #>  #> $control$removeEmptyCohorts #> [1] TRUE #>  #> $control$minimumTreeCohortDensity #> [1] 1 #>  #> $control$minimumShrubCohortCover #> [1] 0.01 #>  #> $control$dynamicallyMergeCohorts #> [1] TRUE #>  #> $control$keepCohortsWithObsID #> [1] FALSE #>  #> $control$seedRain #> NULL #>  #> $control$seedProductionTreeHeight #> [1] 300 #>  #> $control$seedProductionShrubHeight #> [1] 30 #>  #> $control$probRecr #> [1] 0.05 #>  #> $control$minTempRecr #> [1] 0 #>  #> $control$minMoistureRecr #> [1] 0.3 #>  #> $control$minFPARRecr #> [1] 10 #>  #> $control$recrTreeHeight #> [1] 620 #>  #> $control$recrShrubCover #> [1] 1 #>  #> $control$recrShrubHeight #> [1] 25 #>  #> $control$recrTreeZ50 #> [1] 100 #>  #> $control$recrShrubZ50 #> [1] 50 #>  #> $control$recrTreeZ95 #> [1] 1000 #>  #> $control$recrShrubZ95 #> [1] 500 #>  #>  #> $soil #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.303861        0.041     0.423715 1   NA #> 2 1.303861        0.041     0.423715 1   NA #> 3 1.303861        0.041     0.423715 1   NA #> 4 1.303861        0.041     0.423715 1   NA #>  #> $snowpack #> [1] 0 #>  #> $canopy #>    zlow zmid  zup LAIlive LAIexpanded LAIdead Tair Cair VPair #> 1     0   50  100      NA          NA      NA   NA   NA    NA #> 2   100  150  200      NA          NA      NA   NA   NA    NA #> 3   200  250  300      NA          NA      NA   NA   NA    NA #> 4   300  350  400      NA          NA      NA   NA   NA    NA #> 5   400  450  500      NA          NA      NA   NA   NA    NA #> 6   500  550  600      NA          NA      NA   NA   NA    NA #> 7   600  650  700      NA          NA      NA   NA   NA    NA #> 8   700  750  800      NA          NA      NA   NA   NA    NA #> 9   800  850  900      NA          NA      NA   NA   NA    NA #> 10  900  950 1000      NA          NA      NA   NA   NA    NA #> 11 1000 1050 1100      NA          NA      NA   NA   NA    NA #> 12 1100 1150 1200      NA          NA      NA   NA   NA    NA #> 13 1200 1250 1300      NA          NA      NA   NA   NA    NA #> 14 1300 1350 1400      NA          NA      NA   NA   NA    NA #> 15 1400 1450 1500      NA          NA      NA   NA   NA    NA #> 16 1500 1550 1600      NA          NA      NA   NA   NA    NA #> 17 1600 1650 1700      NA          NA      NA   NA   NA    NA #> 18 1700 1750 1800      NA          NA      NA   NA   NA    NA #> 19 1800 1850 1900      NA          NA      NA   NA   NA    NA #> 20 1900 1950 2000      NA          NA      NA   NA   NA    NA #> 21 2000 2050 2100      NA          NA      NA   NA   NA    NA #> 22 2100 2150 2200      NA          NA      NA   NA   NA    NA #> 23 2200 2250 2300      NA          NA      NA   NA   NA    NA #> 24 2300 2350 2400      NA          NA      NA   NA   NA    NA #> 25 2400 2450 2500      NA          NA      NA   NA   NA    NA #> 26 2500 2550 2600      NA          NA      NA   NA   NA    NA #> 27 2600 2650 2700      NA          NA      NA   NA   NA    NA #> 28 2700 2750 2800      NA          NA      NA   NA   NA    NA #>  #> $herbLAI #> [1] 0.1736369 #>  #> $herbLAImax #> [1] 0.252 #>  #> $cohorts #>         SP              Name #> T1_148 148  Pinus halepensis #> T2_168 168      Quercus ilex #> S1_165 165 Quercus coccifera #>  #> $above #>          H        CR   LAI_live LAI_expanded LAI_dead ObsID #> T1_148 800 0.6605196 0.84874773   0.84874773        0  <NA> #> T2_168 660 0.6055642 0.70557382   0.70557382        0  <NA> #> S1_165  80 0.8032817 0.03062604   0.03062604        0  <NA> #>  #> $below #>        Z50  Z95 Z100 #> T1_148 100  600   NA #> T2_168 300 1000   NA #> S1_165 200 1000   NA #>  #> $belowLayers #> $belowLayers$V #>                1         2          3           4 #> T1_148 0.8604899 0.1194556 0.01511005 0.004944476 #> T2_168 0.5008953 0.4505941 0.04064831 0.007862284 #> S1_165 0.6799879 0.2737911 0.03567632 0.010544678 #>  #> $belowLayers$L #>               1        2        3        4 #> T1_148 2289.062 1566.552 2250.052 4226.166 #> T2_168 1817.571 2100.346 2410.127 4285.194 #> S1_165 1085.030 1380.808 2170.587 4146.637 #>  #> $belowLayers$VGrhizo_kmax #>                 1         2        3        4 #> T1_148  278101462  38606817  4883412  1598004 #> T2_168  406976825 366107176 33026706  6388096 #> S1_165 1116059122 449371399 58555276 17306902 #>  #> $belowLayers$VCroot_kmax #>               1         2          3           4 #> T1_148 2.382795 0.4833484 0.04256689 0.007416044 #> T2_168 1.568929 1.2213562 0.09601747 0.010445417 #> S1_165 2.407779 0.7618041 0.06314806 0.009770000 #>  #> $belowLayers$Wpool #>        1 2 3 4 #> T1_148 1 1 1 1 #> T2_168 1 1 1 1 #> S1_165 1 1 1 1 #>  #> $belowLayers$RhizoPsi #>             1      2      3      4 #> T1_148 -0.033 -0.033 -0.033 -0.033 #> T2_168 -0.033 -0.033 -0.033 -0.033 #> S1_165 -0.033 -0.033 -0.033 -0.033 #>  #>  #> $paramsPhenology #>             PhenologyType LeafDuration t0gdd  Sgdd Tbgdd  Ssen Phsen Tbsen xsen #> T1_148 oneflush-evergreen     2.536875  50.0 200.0  0.00  8268  12.5  28.5    2 #> T2_168 oneflush-evergreen     2.183837  54.5 240.7  4.34 10178  12.5  28.5    2 #> S1_165 oneflush-evergreen     1.250000  54.5 240.7  4.34 10178  12.5  28.5    2 #>        ysen #> T1_148    2 #> T2_168    2 #> S1_165    2 #>  #> $paramsAnatomy #>        Hmed    Al2As      SLA LeafWidth LeafDensity WoodDensity FineRootDensity #> T1_148  850 1317.523 5.140523 0.1384772   0.2982842   0.6077016       0.2982842 #> T2_168  500 3908.823 6.340000 1.7674359   0.4893392   0.9008264       0.4893392 #> S1_165   80 4189.325 4.980084 1.3761085   0.3709679   0.4389106       0.3709679 #>        conduit2sapwood      SRL RLD     r635 #> T1_148       0.9236406 3172.572  10 1.964226 #> T2_168       0.6238125 4398.812  10 1.805872 #> S1_165       0.6238125 4398.812  10 2.289452 #>  #> $paramsInterception #>        LeafAngle LeafAngleSD   Beta_p   Beta_q ClumpingIndex kPAR alphaSWR #> T1_148      53.7       21.55 1.907817 1.289641          0.75 0.50      0.7 #> T2_168      53.7       21.55 1.907817 1.289641          0.75 0.55      0.7 #> S1_165      53.7       21.55 1.907817 1.289641          0.75 0.55      0.7 #>        gammaSWR   g #> T1_148     0.14 1.0 #> T2_168     0.18 0.5 #> S1_165     0.18 0.5 #>  #> $paramsTranspiration #>             Gswmin    Gswmax Gsw_AC_slope    Gs_P50 Gs_slope  Vmax298  Jmax298 #> T1_148 0.003086667 0.2850000     6.238912 -2.303772       30 72.19617 124.1687 #> T2_168 0.004473333 0.2007222     4.957957 -1.964085       30 68.51600 118.7863 #> S1_165 0.010455247 0.2830167     6.590920 -2.663333       30 62.78100 118.4486 #>        Kmax_stemxylem Kmax_rootxylem VCleaf_kmax VCleafapo_kmax VCleaf_slope #> T1_148           0.15           0.60    4.000000        8.00000     68.30291 #> T2_168           0.40           1.60    4.000000        8.00000     14.60786 #> S1_165           0.29           1.16    9.579077       19.15815     12.52202 #>        VCleaf_P50  VCleaf_c  VCleaf_d kleaf_symp VCstem_kmax VCstem_slope #> T1_148  -5.139633 12.709999 -5.290000    8.00000    1.339563     68.30291 #> T2_168  -6.964747  3.560000 -7.720000    8.00000    1.620936     14.60786 #> S1_165  -6.980000  3.095442 -7.857378   19.15815    4.599269     12.52202 #>        VCstem_P50  VCstem_c  VCstem_d kstem_symp VCroot_kmax VCroot_slope #> T1_148  -5.139633 12.709999 -5.290000       0.26    2.916127     68.30291 #> T2_168  -6.964747  3.560000 -7.720000       0.26    2.896748     14.60786 #> S1_165  -6.980000  3.095442 -7.857378       0.26    3.242501     12.52202 #>        VCroot_P50  VCroot_c  VCroot_d VGrhizo_kmax Plant_kmax   FR_leaf #> T1_148  -5.139633 12.709999 -5.290000    323189695  0.7465846 0.1866462 #> T2_168  -6.964747  3.560000 -7.720000    812498804  0.8249857 0.2062464 #> S1_165  -6.980000  3.095442 -7.857378   1641292700  1.5867376 0.1656462 #>          FR_stem   FR_root #> T1_148 0.5573346 0.2560193 #> T2_168 0.5089563 0.2847972 #> S1_165 0.3449978 0.4893561 #>  #> $paramsWaterStorage #>           maxFMC   LeafPI0   LeafEPS LeafAF     Vleaf   StemPI0   StemEPS #> T1_148 126.03063 -1.591429  8.918571 0.3525 0.5258525 -2.008039 13.256355 #> T2_168  93.15304 -1.483333 19.260000 0.1700 0.2199087 -3.227438 46.420610 #> S1_165  96.53441 -2.370000 17.230000 0.2400 0.4108968 -1.305868  6.297155 #>           StemAF Vsapwood #> T1_148 0.9236406 6.174277 #> T2_168 0.6238125 1.278142 #> S1_165 0.6238125 1.064511 #>  #> $internalPhenology #>        gdd sen budFormation leafUnfolding leafSenescence leafDormancy phi #> T1_148   0   0        FALSE         FALSE          FALSE        FALSE   0 #> T2_168   0   0        FALSE         FALSE          FALSE        FALSE   0 #> S1_165   0   0        FALSE         FALSE          FALSE        FALSE   0 #>  #> $internalWater #>        Einst Elim Emin_L Emin_S RootCrownPsi LeafPsi StemPsi LeafSympPsi #> T1_148     0    0      0      0       -0.033  -0.033  -0.033      -0.033 #> T2_168     0    0      0      0       -0.033  -0.033  -0.033      -0.033 #> S1_165     0    0      0      0       -0.033  -0.033  -0.033      -0.033 #>        StemSympPsi LeafPLC StemPLC #> T1_148      -0.033       0       0 #> T2_168      -0.033       0       0 #> S1_165      -0.033       0       0 #>  #> $internalLAIDistribution #> $internalLAIDistribution$PrevLAIexpanded #> [1] 0 0 0 #>  #> $internalLAIDistribution$PrevLAIdead #> [1] 0 0 0 #>  #> $internalLAIDistribution$PARcohort #> [1] 0 0 0 #>  #> $internalLAIDistribution$live #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #> $internalLAIDistribution$expanded #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #> $internalLAIDistribution$dead #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #>  #> $internalFCCS #> data frame with 0 columns and 0 rows #>  #> attr(,\"class\") #> [1] \"spwbInput\" \"list\"       # Example of initialization from a forest  # described using LAI and crown ratio control <- defaultControl(\"Granier\") spwbInput(exampleforest2, examplesoil, SpParamsMED, control) #> $control #> $control$fillMissingRootParams #> [1] TRUE #>  #> $control$fillMissingSpParams #> [1] TRUE #>  #> $control$fillMissingWithGenusParams #> [1] TRUE #>  #> $control$verbose #> [1] TRUE #>  #> $control$subdailyResults #> [1] FALSE #>  #> $control$standResults #> [1] TRUE #>  #> $control$soilResults #> [1] TRUE #>  #> $control$snowResults #> [1] TRUE #>  #> $control$plantResults #> [1] TRUE #>  #> $control$plantWaterBalanceResults #> [1] TRUE #>  #> $control$labileCarbonBalanceResults #> [1] TRUE #>  #> $control$plantStructureResults #> [1] TRUE #>  #> $control$growthMortalityResults #> [1] TRUE #>  #> $control$leafResults #> [1] TRUE #>  #> $control$temperatureResults #> [1] TRUE #>  #> $control$fireHazardResults #> [1] FALSE #>  #> $control$fireHazardStandardWind #> [1] NA #>  #> $control$fireHazardStandardDFMC #> [1] NA #>  #> $control$transpirationMode #> [1] \"Granier\" #>  #> $control$soilFunctions #> [1] \"VG\" #>  #> $control$VG_PTF #> [1] \"Toth\" #>  #> $control$ndailysteps #> [1] 24 #>  #> $control$max_nsubsteps_soil #> [1] 300 #>  #> $control$defaultWindSpeed #> [1] 2.5 #>  #> $control$defaultCO2 #> [1] 386 #>  #> $control$defaultRainfallIntensityPerMonth #>  [1] 1.5 1.5 1.5 1.5 1.5 1.5 5.6 5.6 5.6 5.6 5.6 1.5 #>  #> $control$leafPhenology #> [1] TRUE #>  #> $control$bareSoilEvaporation #> [1] TRUE #>  #> $control$unlimitedSoilWater #> [1] FALSE #>  #> $control$interceptionMode #> [1] \"Gash1995\" #>  #> $control$infiltrationMode #> [1] \"GreenAmpt1911\" #>  #> $control$infiltrationCorrection #> [1] 5 #>  #> $control$soilDomains #> [1] \"buckets\" #>  #> $control$rhizosphereOverlap #> [1] \"total\" #>  #> $control$unfoldingDD #> [1] 300 #>  #> $control$verticalLayerSize #> [1] 100 #>  #> $control$windMeasurementHeight #> [1] 200 #>  #> $control$segmentedXylemVulnerability #> [1] TRUE #>  #> $control$stemCavitationRecovery #> [1] \"annual\" #>  #> $control$leafCavitationRecovery #> [1] \"annual\" #>  #> $control$lfmcComponent #> [1] \"fine\" #>  #> $control$hydraulicRedistributionFraction #> [1] 0.1 #>  #> $control$nsubsteps_canopy #> [1] 3600 #>  #> $control$taper #> [1] TRUE #>  #> $control$multiLayerBalance #> [1] FALSE #>  #> $control$sapFluidityVariation #> [1] TRUE #>  #> $control$TPhase_gmin #> [1] 37.5 #>  #> $control$Q10_1_gmin #> [1] 1.2 #>  #> $control$Q10_2_gmin #> [1] 4.8 #>  #> $control$rootRadialConductance #> [1] 4 #>  #> $control$averageFracRhizosphereResistance #> [1] 0.15 #>  #> $control$thermalCapacityLAI #> [1] 1e+06 #>  #> $control$boundaryLayerSize #> [1] 2000 #>  #> $control$cavitationRecoveryMaximumRate #> [1] 0.05 #>  #> $control$sunlitShade #> [1] TRUE #>  #> $control$numericParams #> $control$numericParams$maxNsteps #> [1] 400 #>  #> $control$numericParams$ntrial #> [1] 200 #>  #> $control$numericParams$psiTol #> [1] 1e-04 #>  #> $control$numericParams$ETol #> [1] 1e-07 #>  #>  #> $control$leafCavitationEffects #> [1] FALSE #>  #> $control$stemCavitationEffects #> [1] TRUE #>  #> $control$stomatalSubmodel #> [1] \"Baldocchi\" #>  #> $control$plantCapacitance #> [1] TRUE #>  #> $control$cavitationFlux #> [1] TRUE #>  #> $control$soilDisconnection #> [1] FALSE #>  #> $control$leafCuticularTranspiration #> [1] TRUE #>  #> $control$stemCuticularTranspiration #> [1] FALSE #>  #> $control$C_SApoInit #> [1] 2e-05 #>  #> $control$C_LApoInit #> [1] 1e-05 #>  #> $control$k_SSym #> [1] 0.26 #>  #> $control$fractionLeafSymplasm #> [1] 0.5 #>  #> $control$gs_NightFrac #> [1] 0.05 #>  #> $control$JarvisPAR #> [1] 0.003 #>  #> $control$fTRBToLeaf #> [1] 0.8 #>  #> $control$subdailyCarbonBalance #> [1] FALSE #>  #> $control$allowDessication #> [1] TRUE #>  #> $control$allowStarvation #> [1] TRUE #>  #> $control$sinkLimitation #> [1] TRUE #>  #> $control$shrubDynamics #> [1] TRUE #>  #> $control$herbDynamics #> [1] TRUE #>  #> $control$allocationStrategy #> [1] \"Al2As\" #>  #> $control$phloemConductanceFactor #> [1] 0.2 #>  #> $control$nonSugarConcentration #> [1] 0.25 #>  #> $control$equilibriumOsmoticConcentration #> $control$equilibriumOsmoticConcentration$leaf #> [1] 0.8 #>  #> $control$equilibriumOsmoticConcentration$sapwood #> [1] 0.6 #>  #>  #> $control$minimumRelativeStarchForGrowth #> [1] 0.5 #>  #> $control$constructionCosts #> $control$constructionCosts$leaf #> [1] 1.5 #>  #> $control$constructionCosts$sapwood #> [1] 1.47 #>  #> $control$constructionCosts$fineroot #> [1] 1.3 #>  #>  #> $control$senescenceRates #> $control$senescenceRates$sapwood #> [1] 0.000135 #>  #> $control$senescenceRates$fineroot #> [1] 0.001897231 #>  #>  #> $control$maximumRelativeGrowthRates #> $control$maximumRelativeGrowthRates$leaf #> [1] 0.09 #>  #> $control$maximumRelativeGrowthRates$cambium #> [1] 0.0025 #>  #> $control$maximumRelativeGrowthRates$sapwood #> [1] 0.002 #>  #> $control$maximumRelativeGrowthRates$fineroot #> [1] 0.1 #>  #>  #> $control$mortalityMode #> [1] \"density/deterministic\" #>  #> $control$mortalityBaselineRate #> [1] 0.0015 #>  #> $control$mortalityRelativeSugarThreshold #> [1] 0.4 #>  #> $control$mortalityRWCThreshold #> [1] 0.4 #>  #> $control$recrTreeDBH #> [1] 1 #>  #> $control$recrTreeDensity #> [1] 3000 #>  #> $control$ingrowthTreeDBH #> [1] 7.5 #>  #> $control$ingrowthTreeDensity #> [1] 127 #>  #> $control$allowSeedBankDynamics #> [1] TRUE #>  #> $control$allowRecruitment #> [1] TRUE #>  #> $control$allowResprouting #> [1] TRUE #>  #> $control$recruitmentMode #> [1] \"stochastic\" #>  #> $control$removeEmptyCohorts #> [1] TRUE #>  #> $control$minimumTreeCohortDensity #> [1] 1 #>  #> $control$minimumShrubCohortCover #> [1] 0.01 #>  #> $control$dynamicallyMergeCohorts #> [1] TRUE #>  #> $control$keepCohortsWithObsID #> [1] FALSE #>  #> $control$seedRain #> NULL #>  #> $control$seedProductionTreeHeight #> [1] 300 #>  #> $control$seedProductionShrubHeight #> [1] 30 #>  #> $control$probRecr #> [1] 0.05 #>  #> $control$minTempRecr #> [1] 0 #>  #> $control$minMoistureRecr #> [1] 0.3 #>  #> $control$minFPARRecr #> [1] 10 #>  #> $control$recrTreeHeight #> [1] 620 #>  #> $control$recrShrubCover #> [1] 1 #>  #> $control$recrShrubHeight #> [1] 25 #>  #> $control$recrTreeZ50 #> [1] 100 #>  #> $control$recrShrubZ50 #> [1] 50 #>  #> $control$recrTreeZ95 #> [1] 1000 #>  #> $control$recrShrubZ95 #> [1] 500 #>  #>  #> $soil #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.303861        0.041     0.423715 1   NA #> 2 1.303861        0.041     0.423715 1   NA #> 3 1.303861        0.041     0.423715 1   NA #> 4 1.303861        0.041     0.423715 1   NA #>  #> $snowpack #> [1] 0 #>  #> $canopy #>    zlow zmid  zup LAIlive LAIexpanded LAIdead Tair Cair VPair #> 1     0   50  100      NA          NA      NA   NA   NA    NA #> 2   100  150  200      NA          NA      NA   NA   NA    NA #> 3   200  250  300      NA          NA      NA   NA   NA    NA #> 4   300  350  400      NA          NA      NA   NA   NA    NA #> 5   400  450  500      NA          NA      NA   NA   NA    NA #> 6   500  550  600      NA          NA      NA   NA   NA    NA #> 7   600  650  700      NA          NA      NA   NA   NA    NA #> 8   700  750  800      NA          NA      NA   NA   NA    NA #> 9   800  850  900      NA          NA      NA   NA   NA    NA #> 10  900  950 1000      NA          NA      NA   NA   NA    NA #> 11 1000 1050 1100      NA          NA      NA   NA   NA    NA #> 12 1100 1150 1200      NA          NA      NA   NA   NA    NA #> 13 1200 1250 1300      NA          NA      NA   NA   NA    NA #> 14 1300 1350 1400      NA          NA      NA   NA   NA    NA #> 15 1400 1450 1500      NA          NA      NA   NA   NA    NA #> 16 1500 1550 1600      NA          NA      NA   NA   NA    NA #> 17 1600 1650 1700      NA          NA      NA   NA   NA    NA #> 18 1700 1750 1800      NA          NA      NA   NA   NA    NA #> 19 1800 1850 1900      NA          NA      NA   NA   NA    NA #> 20 1900 1950 2000      NA          NA      NA   NA   NA    NA #> 21 2000 2050 2100      NA          NA      NA   NA   NA    NA #> 22 2100 2150 2200      NA          NA      NA   NA   NA    NA #> 23 2200 2250 2300      NA          NA      NA   NA   NA    NA #> 24 2300 2350 2400      NA          NA      NA   NA   NA    NA #> 25 2400 2450 2500      NA          NA      NA   NA   NA    NA #> 26 2500 2550 2600      NA          NA      NA   NA   NA    NA #> 27 2600 2650 2700      NA          NA      NA   NA   NA    NA #> 28 2700 2750 2800      NA          NA      NA   NA   NA    NA #>  #> $herbLAI #> [1] 0 #>  #> $herbLAImax #> [1] 0 #>  #> $cohorts #>         SP              Name #> T1_148 148  Pinus halepensis #> T2_168 168      Quercus ilex #> S1_165 165 Quercus coccifera #>  #> $above #>          H   CR LAI_live LAI_expanded LAI_dead ObsID #> T1_148 800 0.66     0.80         0.80        0  <NA> #> T2_168 660 0.60     0.50         0.50        0  <NA> #> S1_165  80 0.80     0.03         0.03        0  <NA> #>  #> $below #>        Z50  Z95 Z100 #> T1_148 100  600   NA #> T2_168 300 1000   NA #> S1_165 200 1000   NA #>  #> $belowLayers #> $belowLayers$V #>                1         2          3           4 #> T1_148 0.8604899 0.1194556 0.01511005 0.004944476 #> T2_168 0.5008953 0.4505941 0.04064831 0.007862284 #> S1_165 0.6799879 0.2737911 0.03567632 0.010544678 #>  #> $belowLayers$L #>          1   2    3    4 #> T1_148 150 650 1500 3000 #> T2_168 150 650 1500 3000 #> S1_165 150 650 1500 3000 #>  #> $belowLayers$Wpool #>        1 2 3 4 #> T1_148 1 1 1 1 #> T2_168 1 1 1 1 #> S1_165 1 1 1 1 #>  #>  #> $paramsPhenology #>             PhenologyType LeafDuration t0gdd  Sgdd Tbgdd  Ssen Phsen Tbsen xsen #> T1_148 oneflush-evergreen     2.536875  50.0 200.0  0.00  8268  12.5  28.5    2 #> T2_168 oneflush-evergreen     2.183837  54.5 240.7  4.34 10178  12.5  28.5    2 #> S1_165 oneflush-evergreen     1.250000  54.5 240.7  4.34 10178  12.5  28.5    2 #>        ysen #> T1_148    2 #> T2_168    2 #> S1_165    2 #>  #> $paramsAnatomy #>           Al2As Ar2Al      SLA LeafDensity WoodDensity FineRootDensity      SRL #> T1_148 1317.523     1 5.140523   0.2982842   0.6077016       0.2982842 3172.572 #> T2_168 3908.823     1 6.340000   0.4893392   0.9008264       0.4893392 4398.812 #> S1_165 4189.325     1 4.980084   0.3709679   0.4389106       0.3709679 4398.812 #>        RLD     r635 #> T1_148  10 1.964226 #> T2_168  10 1.805872 #> S1_165  10 2.289452 #>  #> $paramsInterception #>        kPAR      kSWR   g #> T1_148 0.50 0.3703704 1.0 #> T2_168 0.55 0.4074074 0.5 #> S1_165 0.55 0.4074074 0.5 #>  #> $paramsTranspiration #>             Gswmin  Tmax_LAI   Tmax_LAIsq Psi_Extract Exp_Extract  VCleaf_c #> T1_148 0.003086667 0.1869849 -0.008372458  -0.9218219    1.504542 11.137050 #> T2_168 0.004473333 0.1251027 -0.005601615  -1.9726871    1.149052  1.339370 #> S1_165 0.010455247 0.1340000 -0.006000000  -2.1210726    1.300000  2.254991 #>         VCleaf_d  VCstem_c  VCstem_d      WUE   WUE_par     WUE_co2    WUE_vpd #> T1_148 -2.380849 12.709999 -5.290000 8.525550 0.5239136 0.002586327 -0.2647169 #> T2_168 -2.582279  3.560000 -7.720000 8.968208 0.1412266 0.002413091 -0.5664879 #> S1_165 -3.133381  3.095442 -7.857378 7.900000 0.3643000 0.002757000 -0.4636000 #>  #> $paramsWaterStorage #>           maxFMC   LeafPI0   LeafEPS LeafAF     Vleaf   StemPI0   StemEPS #> T1_148 126.03063 -1.591429  8.918571 0.3525 0.5258525 -2.008039 13.256355 #> T2_168  93.15304 -1.483333 19.260000 0.1700 0.2199087 -3.227438 46.420610 #> S1_165  96.53441 -2.370000 17.230000 0.2400 0.4108968 -1.305868  6.297155 #>           StemAF  Vsapwood #> T1_148 0.9236406 4.1638559 #> T2_168 0.6238125 0.8135590 #> S1_165 0.6238125 0.3177724 #>  #> $internalPhenology #>        gdd sen budFormation leafUnfolding leafSenescence leafDormancy phi #> T1_148   0   0        FALSE         FALSE          FALSE        FALSE   0 #> T2_168   0   0        FALSE         FALSE          FALSE        FALSE   0 #> S1_165   0   0        FALSE         FALSE          FALSE        FALSE   0 #>  #> $internalWater #>        PlantPsi LeafPLC StemPLC #> T1_148   -0.033       0       0 #> T2_168   -0.033       0       0 #> S1_165   -0.033       0       0 #>  #> $internalLAIDistribution #> $internalLAIDistribution$PrevLAIexpanded #> [1] 0 0 0 #>  #> $internalLAIDistribution$PrevLAIdead #> [1] 0 0 0 #>  #> $internalLAIDistribution$PARcohort #> [1] 0 0 0 #>  #> $internalLAIDistribution$live #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #> $internalLAIDistribution$expanded #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #> $internalLAIDistribution$dead #>    T1_148 T2_168 S1_165 #> 1       0      0      0 #> 2       0      0      0 #> 3       0      0      0 #> 4       0      0      0 #> 5       0      0      0 #> 6       0      0      0 #> 7       0      0      0 #> 8       0      0      0 #> 9       0      0      0 #> 10      0      0      0 #> 11      0      0      0 #> 12      0      0      0 #> 13      0      0      0 #> 14      0      0      0 #> 15      0      0      0 #> 16      0      0      0 #> 17      0      0      0 #> 18      0      0      0 #> 19      0      0      0 #> 20      0      0      0 #> 21      0      0      0 #> 22      0      0      0 #> 23      0      0      0 #> 24      0      0      0 #> 25      0      0      0 #> 26      0      0      0 #> 27      0      0      0 #> 28      0      0      0 #>  #>  #> $internalFCCS #> data frame with 0 columns and 0 rows #>  #> attr(,\"class\") #> [1] \"spwbInput\" \"list\""},{"path":"https://emf-creaf.github.io/medfate/reference/modifyParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify parameters — modifyParams","title":"Modify parameters — modifyParams","text":"Routines modify species parameter table model input objects","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/modifyParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify parameters — modifyParams","text":"","code":"modifySpParams(SpParams, customParams, subsetSpecies = TRUE)  modifyCohortParams(x, customParams, verbose = TRUE)  modifyInputParams(x, customParams, verbose = TRUE)"},{"path":"https://emf-creaf.github.io/medfate/reference/modifyParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify parameters — modifyParams","text":"SpParams species parameter data frame, typically SpParamsMED. customParams data frame named vector new parameter values (see details). subsetSpecies logical flag indicate output data frame include species mentioned customParams. x model input object class spwbInput growthInput. verbose logical flag indicate messages printed console.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/modifyParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify parameters — modifyParams","text":"Function modifySpParams returns modified species parameter data frame. Functions modifyCohortParams modifyInputParams return modified spwbInput growthInput object. Note modifications may affect parameters beyond indicated customParams, result parameter dependencies (see examples).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/modifyParams.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify parameters — modifyParams","text":"calling function modifySpParams, customParams data frame many rows species many columns parameters modify, plus column called 'Name' 'Species' match species names two tables. cases, function match input strings column 'Name' x. Alternatively, customParams can contain column 'SpIndex' matching species indices, deprecated. calling modifyCohortParams, customParams can data frame many rows cohorts many columns parameters modify, plus column called 'Cohort' matched cohort names given spwbInput growthInput. Alternatively, customParams can named list named numeric vector modifyInputParams. calling modifyInputParams, customParams must either named list named numeric vector. Cohort parameters specified using syntax \"<cohortName>/<paramName>\" names (e.g. \"T2_176/Z50\" modify parameter 'Z50' cohort 'T2_176'). Soil layer parameters specified using syntax \"<paramName>@#layer\" names, #layer layer index (e.g. \"rfc@1\" modify rock fragment content soil layer 1). Control parameters specified using either \"<paramName>\" (e.g \"phloemConductanceFactor\") \"<paramName>$<subParamName>\" (e.g \"maximumRelativeGrowthRates$leaf\"). may seem unnecessary modify soil control parameters via function, modifyInputParams called optimization functions (see optimization).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/modifyParams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify parameters — modifyParams","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/modifyParams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify parameters — modifyParams","text":"","code":"#Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Initialize input x1 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  # Cohort name for Pinus halepensis PH_coh <- paste0(\"T1_\", SpParamsMED$SpIndex[SpParamsMED$Name==\"Pinus halepensis\"]) PH_coh  #> [1] \"T1_148\"  # Modify Z50 and Z95 of Pinus halepensis cohort  customParams <- c(200,2000) names(customParams) <- paste0(PH_coh,c(\"/Z50\", \"/Z95\")) x1m <- modifyInputParams(x1, customParams)  # Inspect original and modified objects  x1$below #>        Z50  Z95 Z100 #> T1_148 100  600   NA #> T2_168 300 1000   NA #> S1_165 200 1000   NA x1m$below #>        Z50  Z95 Z100 fineRootBiomass coarseRootSoilVolume #> T1_148 200 2000   NA              NA                    0 #> T2_168 300 1000   NA              NA                    0 #> S1_165 200 1000   NA              NA                    0  # Inspect dependencies: fine root distribution across soil layers x1$belowLayers$V #>                1         2          3           4 #> T1_148 0.8604899 0.1194556 0.01511005 0.004944476 #> T2_168 0.5008953 0.4505941 0.04064831 0.007862284 #> S1_165 0.6799879 0.2737911 0.03567632 0.010544678 x1m$belowLayers$V #>                1         2          3           4 #> T1_148 0.6402830 0.2655064 0.06472163 0.029488953 #> T2_168 0.5008953 0.4505941 0.04064831 0.007862284 #> S1_165 0.6799879 0.2737911 0.03567632 0.010544678  # Modify rock fragment content and sand proportion of soil layer 1 x1s <- modifyInputParams(x1, c(\"rfc@1\" = 5, \"sand@1\" = 10))  # Inspect original and modified soils  x1$soil #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.303861        0.041     0.423715 1   NA #> 2 1.303861        0.041     0.423715 1   NA #> 3 1.303861        0.041     0.423715 1   NA #> 4 1.303861        0.041     0.423715 1   NA x1s$soil #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   10   25 Silt loam NA       NA 1.5   5 0.0167 7046.523 97.10141 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.240345        0.041     0.426520 1   NA #> 2 1.303861        0.041     0.423715 1   NA #> 3 1.303861        0.041     0.423715 1   NA #> 4 1.303861        0.041     0.423715 1   NA  # When modifying growth input objects dependencies increase x1 <- growthInput(exampleforest,examplesoil, SpParamsMED, control) customParams <- c(2000,2) names(customParams) <- paste0(PH_coh,c(\"/Al2As\", \"/LAI_live\")) x1m <- modifyInputParams(x1, customParams)"},{"path":"https://emf-creaf.github.io/medfate/reference/moisture.html","id":null,"dir":"Reference","previous_headings":"","what":"Tissue moisture functions — moisture","title":"Tissue moisture functions — moisture","text":"Set functions used calculate tissue moisture water potential viceversa.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/moisture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tissue moisture functions — moisture","text":"","code":"moisture_sapwoodWaterCapacity(Al2As, height, V, L, wd)  moisture_leafWaterCapacity(SLA, ld)  moisture_turgorLossPoint(pi0, epsilon)  moisture_symplasticRWC(psiSym, pi0, epsilon)  moisture_symplasticPsi(RWC, pi0, epsilon)  moisture_apoplasticRWC(psiApo, c, d)  moisture_apoplasticPsi(RWC, c, d)  moisture_tissueRWC(psiSym, pi0, epsilon, psiApo, c, d, af)  plant_water(x)  moisture_pressureVolumeCurvePlot(   x,   segment = \"stem\",   fraction = \"all\",   psiVec = seq(-0.1, -8, by = -0.01),   speciesNames = FALSE )"},{"path":"https://emf-creaf.github.io/medfate/reference/moisture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tissue moisture functions — moisture","text":"Al2As Leaf area sapwood area (m2·m-2). height Plant height (cm). V Vector proportion [0-1] fine roots within soil layer. L Vector length coarse roots (mm) soil layer. wd Wood density (g·cm-3). SLA Specific leaf area (mm2·mg-1). ld Leaf tissue density (g·cm-3). pi0 Full turgor osmotic potential (MPa). epsilon Bulk modulus elasticity (MPa). psiSym, psiApo Symplastic apoplastic water potential (MPa). RWC Relative water content [0-1]. c, d Parameters xylem vulnerability curve. af Apoplastic fraction (proportion) segment (e.g. leaf stem). x object class spwbInput growthInput. segment Segment whose relative water content curve plot, either \"stem\" \"leaf\" (latter available transpirationMode = \"Sperry\" transpirationMode = \"Sureau\"). fraction Tissue fraction, either \"symplastic\", \"apoplastic\" \"\". psiVec Vector water potential values evaluate pressure-volume curve. speciesNames flag indicate use species names instead cohort names plots.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/moisture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tissue moisture functions — moisture","text":"Values returned function : moisture_symplasticRWC: Relative water content [0-1] symplastic fraction. moisture_apoplasticRWC: Relative water content [0-1] apoplastic fraction. moisture_symplasticWaterPotential: Water potential (MPa) symplastic fraction. moisture_apoplasticWaterPotential: Water potential (MPa) apoplastic fraction. moisture_turgorLossPoint: Water potential (MPa) corresponding turgor loss point. moisture_segmentRWC: Segment relative water content [0-1]. water_plant: vector water content (mm) per plant cohort.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/moisture.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tissue moisture functions — moisture","text":"Bartlett, M.K., Scoffoni, C., Sack, L. 2012. determinants leaf turgor loss point prediction drought tolerance species biomes: global meta-analysis. Ecology Letters 15: 393–405. Hölttä, T., Cochard, H., Nikinmaa, E., Mencuccini, M. 2009. Capacitive effect cavitation xylem conduits: Results dynamic model. Plant, Cell Environment 32: 10–21. Martin-StPaul, N., Delzon, S., Cochard, H. 2017. Plant resistance drought depends timely stomatal closure. Ecology Letters 20: 1437–1447.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/moisture.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tissue moisture functions — moisture","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/moisture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tissue moisture functions — moisture","text":"","code":"psi = seq(-10,0, by=0.1) rwc_s = rep(NA, length(psi)) for(i in 1:length(psi)) rwc_s[i] = moisture_symplasticRWC(psi[i],-3,12) plot(psi, rwc_s, type=\"l\", xlab=\"Water potential (MPa)\", ylab = \"Symplasmic RWC\")"},{"path":"https://emf-creaf.github.io/medfate/reference/mortality_dailyProbability.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality — mortality_dailyProbability","title":"Mortality — mortality_dailyProbability","text":"simple sigmoid function determine daily mortality likelihood according value stress variable.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/mortality_dailyProbability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality — mortality_dailyProbability","text":"","code":"mortality_dailyProbability(stressValue, stressThreshold)"},{"path":"https://emf-creaf.github.io/medfate/reference/mortality_dailyProbability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mortality — mortality_dailyProbability","text":"stressValue Current value stress variable (0 1, higher values indicate stronger stress). stressThreshold Threshold indicate 50% annual mortality probability.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/mortality_dailyProbability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mortality — mortality_dailyProbability","text":"Returns probability (0 1)","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/mortality_dailyProbability.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mortality — mortality_dailyProbability","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/optimization.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple model runs and function factories for optimization routines — optimization","title":"Multiple model runs and function factories for optimization routines — optimization","text":"Function factories generate functions used model calibration, uncertainty sensitivity analysis.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/optimization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple model runs and function factories for optimization routines — optimization","text":"","code":"multiple_runs(   parMatrix,   x,   meteo,   latitude,   elevation = NA,   slope = NA,   aspect = NA,   summary_function = NULL,   args = NULL,   verbose = TRUE )  optimization_function(   parNames,   x,   meteo,   latitude,   elevation = NA,   slope = NA,   aspect = NA,   summary_function,   args = NULL )  optimization_evaluation_function(   parNames,   x,   meteo,   latitude,   elevation = NA,   slope = NA,   aspect = NA,   measuredData,   type = \"SWC\",   cohorts = NULL,   temporalResolution = \"day\",   metric = \"loglikelihood\" )  optimization_multicohort_function(   cohortParNames,   cohortNames,   x,   meteo,   latitude,   otherParNames = NULL,   elevation = NA,   slope = NA,   aspect = NA,   summary_function,   args = NULL )  optimization_evaluation_multicohort_function(   cohortParNames,   cohortNames,   x,   meteo,   latitude,   otherParNames = NULL,   elevation = NA,   slope = NA,   aspect = NA,   measuredData,   type = \"SWC\",   cohorts = cohortNames,   temporalResolution = \"day\",   metric = \"loglikelihood\" )"},{"path":"https://emf-creaf.github.io/medfate/reference/optimization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple model runs and function factories for optimization routines — optimization","text":"parMatrix matrix parameter values runs rows parameters columns. Column names follow parameter modification naming rules (see examples naming rules modifyInputParams). x object class spwbInput growthInput. meteo, latitude, elevation, slope, aspect Additional parameters simulation functions spwb growth. summary_function function whose input result spwb growth. function must return numeric scalar case optimization_function, restricted case multiple_runs. args list additional arguments optimization_function. verbose flag indicate extra console output. parNames string vector parameter names (see examples naming rules modifyInputParams). measuredData data frame observed/measured values. Dates row names, whereas columns named according type output evaluated (see details). type string kind model output evaluated. Accepted values \"SWC\" (soil moisture content), \"REW\" relative extractable water, \"ETR\" (total evapotranspiration), \"E\" (transpiration per leaf area), \"LFMC\" (live fuel moisture content) \"WP\" (plant water potentials). cohorts string vector strings cohorts compared (e.g. \"T1_68\"). several cohort names provided, function optimization_cohorts_function evaluates performance one provides mean value. NULL results first cohort evaluated. temporalResolution string indicate temporal resolution model evaluation, can \"day\", \"week\", \"month\" \"year\". Observed modelled values aggregated temporally (using either means sums) comparison. metric evaluation metric (see evaluation_metric). cohortParNames string vector vegetation parameter names cohorts (e.g. 'Z95' 'psiExtract'). cohortNames string vector cohort names. cohorts given parameter values parameter 'cohortParNames'. otherParNames string vector parameter names (see examples naming rules modifyInputParams) non-vegetation parameters (.e. control parameters soil parameters).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/optimization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple model runs and function factories for optimization routines — optimization","text":"Function multiple_runs returns list, whose elements either result calling simulation models result calling summary_function afterwards. Function optimization_function returns function whose parameters parameter values whose return prediction scalar (e.g. total transpiration). Function optimization_evaluation_function returns function whose parameters parameter values whose return evaluation metric (e.g. loglikelihood data observations given model predictions). evaluation data contains information different cohorts (e.g. plant water potentials transpiration rates) evaluation performed cohort metrics averaged. Function optimization_multicohorts_function returns function whose parameters parameter values whose return prediction scalar (e.g. total transpiration). difference optimization_function multiple cohorts set parameter values. Function optimization_evaluation_multicohort_function returns function whose parameters parameter values whose return evaluation metric (e.g. loglikelihood data observations given model predictions). evaluation data contains information different cohorts (e.g. plant water potentials transpiration rates) evaluation performed cohort metrics averaged. difference optimization_evaluation_function multiple cohorts set parameter values.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/optimization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiple model runs and function factories for optimization routines — optimization","text":"See evaluation details regarding specify measured data. Functions produced function factories useful sensitivity analyses using package 'sensitivity'. Parameter naming (.e. parNames) follow rules specified section details modifyInputParams. exception naming rules applies multiple cohorts modified values functions optimization_multicohort_function optimization_evaluation_multicohort_function. , vector parameter names supplied cohortParNames.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/optimization.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multiple model runs and function factories for optimization routines — optimization","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/optimization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple model runs and function factories for optimization routines — optimization","text":"","code":"# \\donttest{ #Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Initialize input x1 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  # Cohort name for Pinus halepensis PH_coh <- paste0(\"T1_\", SpParamsMED$SpIndex[SpParamsMED$Name==\"Pinus halepensis\"]) PH_coh  #> [1] \"T1_148\"  #Parameter names of interest parNames <- c(paste0(PH_coh,\"/Z50\"), paste0(PH_coh,\"/Z95\"))  #Specify parameter matrix parMatrix <- cbind(c(200,300), c(500,1000)) colnames(parMatrix) <- parNames  #Define a summary function as the total transpiration over the simulated period sf<-function(x) {sum(x$WaterBalance$Transpiration, na.rm=TRUE)}  #Perform two runs and evaluate the summary function multiple_runs(parMatrix,                x1, examplemeteo, latitude = 42, elevation = 100,               summary_function = sf) #> 1. Parameter values = [200, 500] f = 249.12839057893 #> 2. Parameter values = [300, 1000] f = 249.60196207274 #> [[1]] #> [1] 249.1284 #>  #> [[2]] #> [1] 249.602 #>   #Load observed data (in this case the same simulation results with some added error)   # Generate a prediction function for total transpiration over the simulated period # as a function of parameters \"Z50\" and \"Z95\" for Pinus halepensis cohort  of<-optimization_function(parNames = parNames,                           x = x1,                           meteo = examplemeteo,                            latitude = 41.82592, elevation = 100,                           summary_function = sf)  # Evaluate for the values of the parameter matrix of(parMatrix[1, ]) #> [1] 249.2256 of(parMatrix) #> [1] 249.2256 249.6995   # Generate a loglikelihood function for soil water content # as a function of parameters \"Z50\" and \"Z95\" for Pinus halepensis cohort  data(exampleobs) oef<-optimization_evaluation_function(parNames = parNames,                                       x = x1,                                       meteo = examplemeteo, latitude = 41.82592, elevation = 100,                                       measuredData = exampleobs, type = \"SWC\",                                        metric = \"loglikelihood\")  # Loglikelihood for the values of the parameter matrix oef(parMatrix[1, ]) #> [1] 998.2922 oef(parMatrix) #> [1] 998.2922 982.5650 # }"},{"path":"https://emf-creaf.github.io/medfate/reference/pheno_updateLeaves.html","id":null,"dir":"Reference","previous_headings":"","what":"Leaf phenology — pheno_updateLeaves","title":"Leaf phenology — pheno_updateLeaves","text":"Function pheno_leafDevelopmentStatus returns expanded status (0 1) leaves according growth degree days required start bud burst leaf unfolding, dictated simple ecodormancy (one-phase) model (Chuine et al. 2013). Function pheno_leafSenescenceStatus returns 0/1 senescence status leaves according one-phase senescence model Delpierre et al. (2009) basis photoperiod temperature. Function pheno_updateLeaves updates status expanded leaves dead leaves object x given photoperiod, temperature wind given day. applies development model 1 < doy < 180 senescence model 181 > doy > 365.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/pheno_updateLeaves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leaf phenology — pheno_updateLeaves","text":"","code":"pheno_leafDevelopmentStatus(Sgdd, gdd, unfoldingDD = 300)  pheno_leafSenescenceStatus(Ssen, sen)  pheno_updatePhenology(x, doy, photoperiod, tmean)  pheno_updateLeaves(x, wind, fromGrowthModel)"},{"path":"https://emf-creaf.github.io/medfate/reference/pheno_updateLeaves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leaf phenology — pheno_updateLeaves","text":"Sgdd Degree days required leaf budburst (Celsius). gdd Cumulative degree days (Celsius) unfoldingDD Degree-days complete leaf unfolding budburst occurred. Ssen Threshold start leaf senescence. sen Cumulative senescence variable. x object class spwbInput. doy Day year. photoperiod Day length (hours). tmean Average day temperature (Celsius). wind Average day wind speed (m/s). fromGrowthModel Boolean flag indicate routine called growth simulation function.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/pheno_updateLeaves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leaf phenology — pheno_updateLeaves","text":"Function pheno_leafDevelopmentStatus returns vector values 0 1, whereas function pheno_leafSenescenceStatus returns vector 0 (senescent) 1 (expanded) values. two functions return value (see note).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/pheno_updateLeaves.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Leaf phenology — pheno_updateLeaves","text":"Functions pheno_updatePhenology pheno_updateLeaves modify input object x. first modifies phenological state second modifies leaf area accordingly.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/pheno_updateLeaves.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Leaf phenology — pheno_updateLeaves","text":"Chuine, ., De Cortazar-Atauri, .G., Kramer, K., Hänninen, H., 2013. Plant development models. Phenology: Integrative Environmental Science. Springer, pp. 275–293. Delpierre N, Dufrêne E, Soudani K et al (2009) Modelling interannual spatial variability leaf senescence three deciduous tree species France. Agric Meteorol 149:938–948. doi:10.1016/j.agrformet.2008.11.014","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/pheno_updateLeaves.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Leaf phenology — pheno_updateLeaves","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/photo.html","id":null,"dir":"Reference","previous_headings":"","what":"Photosynthesis submodel functions — photo","title":"Photosynthesis submodel functions — photo","text":"Set functions used calculation photosynthesis","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/photo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Photosynthesis submodel functions — photo","text":"","code":"photo_GammaTemp(Tleaf)  photo_KmTemp(Tleaf, Oi = 209)  photo_VmaxTemp(Vmax298, Tleaf)  photo_JmaxTemp(Jmax298, Tleaf)  photo_electronLimitedPhotosynthesis(Q, Ci, GT, Jmax)  photo_rubiscoLimitedPhotosynthesis(Ci, GT, Km, Vmax)  photo_photosynthesis(Q, Catm, Gc, Tleaf, Vmax298, Jmax298, verbose = FALSE)  photo_photosynthesisBaldocchi(   Q,   Catm,   Tleaf,   u,   Vmax298,   Jmax298,   leafWidth,   Gsw_AC_slope,   Gsw_AC_intercept )  photo_leafPhotosynthesisFunction(   E,   psiLeaf,   Catm,   Patm,   Tair,   vpa,   u,   absRad,   Q,   Vmax298,   Jmax298,   leafWidth = 1,   refLeafArea = 1,   verbose = FALSE )  photo_leafPhotosynthesisFunction2(   E,   psiLeaf,   Catm,   Patm,   Tair,   vpa,   u,   SWRabs,   LWRnet,   Q,   Vmax298,   Jmax298,   leafWidth = 1,   refLeafArea = 1,   verbose = FALSE )  photo_sunshadePhotosynthesisFunction(   E,   psiLeaf,   Catm,   Patm,   Tair,   vpa,   SLarea,   SHarea,   u,   absRadSL,   absRadSH,   QSL,   QSH,   Vmax298SL,   Vmax298SH,   Jmax298SL,   Jmax298SH,   leafWidth = 1,   verbose = FALSE )  photo_multilayerPhotosynthesisFunction(   E,   psiLeaf,   Catm,   Patm,   Tair,   vpa,   SLarea,   SHarea,   u,   absRadSL,   absRadSH,   QSL,   QSH,   Vmax298,   Jmax298,   leafWidth = 1,   verbose = FALSE )"},{"path":"https://emf-creaf.github.io/medfate/reference/photo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Photosynthesis submodel functions — photo","text":"Tleaf Leaf temperature (ºC). Oi Oxigen concentration (mmol*mol-1). Vmax298, Vmax298SL, Vmax298SH Maximum Rubisco carboxylation rate per leaf area 298ºK (.e. 25 ºC) (micromol*s-1*m-2) (canopy layer case photo_multilayerPhotosynthesisFunction). 'SH' stands shade leaves, whereas 'SL' stands sunlit leaves. Jmax298, Jmax298SL, Jmax298SH Maximum electron transport rate per leaf area 298ºK (.e. 25 ºC) (micromol*s-1*m-2) (canopy layer case photo_multilayerPhotosynthesisFunction). 'SH' stands shade leaves, whereas 'SL' stands sunlit leaves. Q Active photon flux density (micromol * s-1 * m-2). Ci CO2 internal concentration (micromol * mol-1). GT CO2 saturation point corrected temperature (micromol * mol-1). Jmax Maximum electron transport rate per leaf area (micromol*s-1*m-2). Km Km = Kc*(1.0+(Oi/Ko)) - Michaelis-Menten term corrected temperature (micromol * mol-1). Vmax Maximum Rubisco carboxylation rate per leaf area (micromol*s-1*m-2). Catm CO2 air concentration (micromol * mol-1). Gc CO2 leaf (stomatal) conductance (mol * s-1 * m-2). verbose Boolean flag indicate console output. u Wind speed leaf boundary (m/s) (canopy layer case photo_multilayerPhotosynthesisFunction). leafWidth Leaf width (cm). Gsw_AC_slope Slope /C vs Gsw relationship Gsw_AC_intercept Intercept /C vs Gsw relationship E Transpiration flow rate per leaf area (mmol*s-1*m-2). psiLeaf Leaf water potential (MPa). Patm Atmospheric air pressure (kPa). Tair Air temperature (ºC). vpa Vapour pressure deficit (kPa). absRad Absorbed long- short-wave radiation (W*m^-2). refLeafArea Leaf reference area. SWRabs Absorbed short-wave radiation (W·m-2). LWRnet Net long-wave radiation balance (W·m-2). SLarea, SHarea Leaf area index sunlit/shade leaves (canopy layer case photo_multilayerPhotosynthesisFunction). absRadSL, absRadSH Instantaneous absorbed radiation (W·m-2) per unit sunlit/shade leaf area (canopy layer case photo_multilayerPhotosynthesisFunction). QSL, QSH Active photon flux density (micromol * s-1 * m-2) per unit sunlit/shade leaf area (canopy layer case photo_multilayerPhotosynthesisFunction).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/photo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Photosynthesis submodel functions — photo","text":"Values returned function : photo_GammaTemp: CO2 compensation concentration (micromol * mol-1). photo_KmTemp: Michaelis-Menten coefficients Rubisco Carbon (micromol * mol-1) Oxigen (mmol * mol-1). photo_VmaxTemp: Temperature correction Vmax298. photo_JmaxTemp: Temperature correction Jmax298. photo_electronLimitedPhotosynthesis: Electron-limited photosynthesis (micromol*s-1*m-2) following Farquhar et al. (1980). photo_rubiscoLimitedPhotosynthesis: Rubisco-limited photosynthesis (micromol*s-1*m-2) following Farquhar et al. (1980). photo_photosynthesis: Calculates gross photosynthesis (micromol*s-1*m-2) following (Farquhar et al. (1980) Collatz et al (1991). photo_leafPhotosynthesisFunction: Returns data frame following columns: LeafTemperature: Leaf temperature (ºC). LeafVPD: Leaf vapor pressure deficit (kPa). LeafCi: Internal CO2 concentration (micromol * mol-1). Gsw: Leaf stomatal conductance water vapor (mol * s-1 * m-2). GrossPhotosynthesis: Gross photosynthesis (micromol*s-1*m-2). NetPhotosynthesis: Net photosynthesis, discounting autotrophic respiration (micromol*s-1*m-2). photo_sunshadePhotosynthesisFunction: Returns data frame following columns: GrossPhotosynthesis: Gross photosynthesis (micromol*s-1*m-2). NetPhotosynthesis: Net photosynthesis, discounting autotrophic respiration (micromol*s-1*m-2). LeafCiSL: Sunlit leaf internal CO2 concentration (micromol * mol-1). LeafCiSH: Shade leaf internal CO2 concentration (micromol * mol-1). LeafTempSL: Sunlit leaf temperature (ºC). LeafTempSH: Shade leaf temperature (ºC). LeafVPDSL: Sunlit leaf vapor pressure deficit (kPa). LeafVPDSH: Shade leaf vapor pressure deficit (kPa). photo_multilayerPhotosynthesisFunction: Return data frame following columns: GrossPhotosynthesis: Gross photosynthesis (micromol*s-1*m-2). NetPhotosynthesis: Net photosynthesis, discounting autotrophic respiration (micromol*s-1*m-2).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/photo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Photosynthesis submodel functions — photo","text":"Details photosynthesis submodel given medfate book","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/photo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Photosynthesis submodel functions — photo","text":"Bernacchi, C. J., E. L. Singsaas, C. Pimentel, . R. Portis, S. P. Long. 2001. Improved temperature response functions models Rubisco-limited photosynthesis. Plant, Cell Environment 24:253–259. Collatz, G. J., J. T. Ball, C. Grivet, J. . Berry. 1991. Physiological environmental regulation stomatal conductance, photosynthesis transpiration: model includes laminar boundary layer. Agricultural Forest Meteorology 54:107–136. Farquhar, G. D., S. von Caemmerer, J. . Berry. 1980. biochemical model photosynthetic CO2 assimilation leaves C3 species. Planta 149:78–90. Leuning, R. 2002. Temperature dependence two parameters photosynthesis model. Plant, Cell Environment 25:1205–1210. Sperry, J. S., M. D. Venturas, W. R. L. Anderegg, M. Mencuccini, D. S. Mackay, Y. Wang, D. M. Love. 2016. Predicting stomatal responses environment optimization photosynthetic gain hydraulic cost. Plant Cell Environment.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/photo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Photosynthesis submodel functions — photo","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plant_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Woody plant cohort description functions — plant_values","title":"Woody plant cohort description functions — plant_values","text":"Functions calculate attributes woody plants forest object.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plant_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Woody plant cohort description functions — plant_values","text":"","code":"plant_ID(x, SpParams, treeOffset = 0L, shrubOffset = 0L)  plant_basalArea(x, SpParams)  plant_largerTreeBasalArea(x, SpParams, self_proportion = 0.5)  plant_cover(x, SpParams)  plant_species(x, SpParams)  plant_speciesName(x, SpParams)  plant_density(x, SpParams)  plant_height(x, SpParams)  plant_individualArea(x, SpParams)  plant_crownRatio(x, SpParams)  plant_crownBaseHeight(x, SpParams)  plant_crownLength(x, SpParams)  plant_foliarBiomass(x, SpParams, gdd = NA_real_, competitionEffect = TRUE)  plant_fuelLoading(x, SpParams, gdd = NA_real_, includeDead = TRUE)  plant_equilibriumLeafLitter(x, SpParams, AET = 800)  plant_equilibriumSmallBranchLitter(   x,   SpParams,   smallBranchDecompositionRate = 0.81 )  plant_phytovolume(x, SpParams)  plant_LAI(   x,   SpParams,   gdd = NA_real_,   bounded = TRUE,   competitionEffect = TRUE )  plant_characterParameter(x, SpParams, parName)  plant_parameter(x, SpParams, parName, fillMissing = TRUE, fillWithGenus = TRUE)"},{"path":"https://emf-creaf.github.io/medfate/reference/plant_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Woody plant cohort description functions — plant_values","text":"x object class forest. SpParams data frame species parameters (see SpParamsMED). treeOffset, shrubOffset Integers offset cohort IDs. self_proportion Proportion target cohort included assessment gdd Growth degree days (account leaf phenology effects). competitionEffect Logical flag indicate inclusion competition effect LAI estimates. includeDead flag indicate standing dead fuels (dead branches) included. AET Actual annual evapotranspiration (mm). smallBranchDecompositionRate Decomposition rate small branches. bounded boolean flag indicate extreme values prevented (maximum tree LAI = 7 maximum shrub LAI = 3) parName string parameter name. fillMissing boolean flag try imputation missing values. fillWithGenus boolean flag try imputation missing values using genus values.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plant_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Woody plant cohort description functions — plant_values","text":"vector values woody plant cohort input forest object: plant_basalArea: Tree basal area (m2/ha). plant_largerTreeBasalArea: Basal area (m2/ha) trees larger (diameter) tree. Half trees record included. plant_characterParameter: parameter values plant, strings. plant_cover: Shrub cover (percent). plant_crownBaseHeight: height corresponding start crown (cm). plant_crownLength: difference crown base height total height (cm). plant_crownRatio: ratio crown length total height (0 1). plant_density: Plant density (ind/ha). Tree density directly taken forest object, shrub density estimated cover height calculating area single individual. plant_equilibriumLeafLitter: Litter biomass leaves equilibrium (kg/m2). plant_equilibriumSmallBranchLitter: Litter biomass small branches (< 6.35 mm diameter) equilibrium (kg/m2). plant_foliarBiomass: Standing biomass leaves (kg/m2). plant_fuelLoading: Fine fuel load (kg/m2). plant_height: Total height (cm). plant_ID: Cohort coding simulation functions (concatenation 'T' (Trees) 'S' (Shrub), cohort index species index). plant_LAI: Leaf area index (m2/m2). plant_individualArea: Area (m2) occupied shrub individual. plant_parameter: parameter values plant, numeric. plant_phytovolume: Shrub phytovolume (m3/m2). plant_species: Species identity integer (indices start 0). plant_speciesName: String species taxonomic name (functional group).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/plant_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Woody plant cohort description functions — plant_values","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plant_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Woody plant cohort description functions — plant_values","text":"","code":"#Default species parameterization data(SpParamsMED)  #Load example plot data(exampleforest)  #A plant-level way to obtain stand basal area sum(plant_basalArea(exampleforest, SpParamsMED), na.rm=TRUE) #> [1] 25.0333  #The analogous plant-level function for LAI sum(plant_LAI(exampleforest, SpParamsMED)) #> [1] 1.584948    #The analogous plant-level function for fuel loading sum(plant_fuelLoading(exampleforest, SpParamsMED)) #> [1] 0.5395798        #Summary function for 'forest' objects can be also used summary(exampleforest, SpParamsMED) #> Tree BA (m2/ha): 25.0333016  adult trees: 25.0333016  saplings: 0  #> Density (ind/ha) adult trees: 552  saplings: 0  shrubs (estimated): 749.4923076  #> Cover (%) adult trees: 100  saplings: 0  shrubs: 3.75  herbs: 10  #> LAI (m2/m2) total: 1.7585845  adult trees: 1.5543216  saplings: 0  shrubs: 0.030626  herbs: 0.1736369  #> Fuel loading (kg/m2) total: 0.5588728  adult trees: 0.5255004  saplings: 0  shrubs: 0.0140795  herbs: 0.019293  #> PAR ground (%): NA  SWR ground (%): NA   #Cohort IDs in the models plant_ID(exampleforest, SpParamsMED) #> [1] \"T1_148\" \"T2_168\" \"S1_165\""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot forest attributes — plot.forest","title":"Plot forest attributes — plot.forest","text":"Convenient wrappers vertical forest profiles (see vprofile_leafAreaDensity).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot forest attributes — plot.forest","text":"","code":"# S3 method for class 'forest' plot(   x,   SpParams,   type = \"LeafAreaDensity\",   byCohorts = FALSE,   bySpecies = FALSE,   includeHerbs = FALSE,   ... )  # S3 method for class 'forest' shinyplot(x, SpParams, ...)"},{"path":"https://emf-creaf.github.io/medfate/reference/plot.forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot forest attributes — plot.forest","text":"x object class forest. SpParams data frame species parameters (see SpParamsMED). type string plot type: \"LeafAreaDensity\", \"RootDistribution\", \"FuelBulkDensity\", \"PARExtinction\", \"SWRExtinction\" \"WindExtinction\". byCohorts logical flag separate profiles cohort. bySpecies logical flag aggregate results species. includeHerbs logical flag include herbaceous layer profile. ... Additional parameters vertical profiles","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot forest attributes — plot.forest","text":"ggplot shiny application, depending function.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/plot.forest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot forest attributes — plot.forest","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot forest attributes — plot.forest","text":"","code":"data(exampleforest) data(SpParamsMED) plot(exampleforest, SpParamsMED)"},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots simulation results — plot.spwb","title":"Plots simulation results — plot.spwb","text":"Function plot plots time series results soil plant water balance model (see spwb), plant water balance model (see pwb), forest growth model (see growth) forest dynamics model (see fordyn).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots simulation results — plot.spwb","text":"","code":"# S3 method for class 'spwb' plot(   x,   type = \"PET_Precipitation\",   cohorts = NULL,   bySpecies = FALSE,   dates = NULL,   subdaily = FALSE,   xlim = NULL,   ylim = NULL,   xlab = NULL,   ylab = NULL,   summary.freq = NULL,   ... )  # S3 method for class 'pwb' plot(   x,   type = \"PlantTranspiration\",   cohorts = NULL,   bySpecies = FALSE,   dates = NULL,   subdaily = FALSE,   xlim = NULL,   ylim = NULL,   xlab = NULL,   ylab = NULL,   summary.freq = NULL,   ... )  # S3 method for class 'growth' plot(   x,   type = \"PET_Precipitation\",   cohorts = NULL,   bySpecies = FALSE,   dates = NULL,   subdaily = FALSE,   xlim = NULL,   ylim = NULL,   xlab = NULL,   ylab = NULL,   summary.freq = NULL,   ... )  # S3 method for class 'fordyn' plot(   x,   type = \"StandBasalArea\",   cohorts = NULL,   bySpecies = FALSE,   dates = NULL,   xlim = NULL,   ylim = NULL,   xlab = NULL,   ylab = NULL,   summary.freq = NULL,   ... )"},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots simulation results — plot.spwb","text":"x object class spwb, pwb, growth fordyn. type information plotted (see details) cohorts integer, boolean character vector select plant cohorts plotted. cohorts = \"T\" (resp. cohorts = \"S\") tree (resp. shrub) cohorts displayed. bySpecies Allows aggregating output species, drawing plots (effect values type). Aggregation can involve sum (plant lai transpiration) LAI-weighted mean (plant stress plant water potential), LAI values LAIlive. dates Date vector subset dates plotted. subdaily Whether subdaily results shown, simulations using transpirationMode = \"Sperry\" set subdailyResults = TRUE simulation control object. subdaily = TRUE, valid strings type listed plot.spwb_day. xlim Range values x. ylim Range values y. xlab x-axis label. ylab y-axis label. summary.freq Frequency summary statistics (see cut.Date). ... Additional parameters function plot (used).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots simulation results — plot.spwb","text":"ggplot object","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots simulation results — plot.spwb","text":"following plots currently available spwb (also pwb): \"PET_Precipitation\": Potential evapotranspiration Precipitation. \"PET_NetRain\": Potential evapotranspiration Net rainfall. \"Snow\": Snow precipitation snowpack dynamics. \"Export\": Water exported deep drainage surface runoff. \"Evapotranspiration\": Plant transpiration soil evaporation. \"SoilPsi\": Soil water potential. \"SoilRWC\": Soil relative water content (percent field capacity). \"SoilTheta\": Soil moisture water content (percent volume). \"SoilVol\": Soil water volumetric content (mm). \"PlantExtraction\": Water extracted plants soil layer. \"HydraulicRedistribution\": Water added soil layer coming soil layers, transported plant hydraulic network. \"LAI\": Expanded dead leaf area index whole stand. \"PlantLAI\": Plant cohort leaf area index (expanded leaves). \"PlantLAIlive\": Plant cohort leaf area index (\"live\" leaves). \"PlantStress\": Plant cohort average daily drought stress. \"PlantTranspiration\": Plant cohort transpiration. \"TranspirationPerLeaf\": Plant cohort transpiration per leaf area. \"PlantGrossPhotosynthesis\": Plant cohort photosynthesis. \"GrossPhotosynthesisPerLeaf\": Plant cohort photosynthesis per leaf area. \"StemRWC\": Average daily stem relative water content. \"LeafRWC\": Average daily leaf relative water content. \"LFMC\": Live fuel moisture content. following plots available spwb pwb transpirationMode = \"Granier\": \"PlantPsi\": Plant cohort water potential. \"FPAR\": Fraction PAR canopy level plant cohort. \"AbsorbedSWRFraction\": Fraction SWR absorbed plant cohort. following plots available spwb pwb transpirationMode = \"Sperry\": \"SoilPlantConductance\": Average instantaneous overall soil plant conductance (calculated derivative supply function). \"LeafPsiMin\":  Midday leaf water potential. \"LeafPsiMax\":  Pre-dawn leaf water potential. \"LeafPsiRange\":  Range leaf water potential. \"LeafPsiMin_SL\": Minimum water potential sunlit leaves. \"LeafPsiMax_SL\": Maximum water potential sunlit leaves. \"LeafPsiMin_SH\": Minimum water potential shade leaves. \"LeafPsiMax_SH\": Maximum water potential shade leaves. \"TempMin_SL\": Minimum temperature sunlit leaves. \"TempMax_SL\": Maximum temperature sunlit leaves. \"TempMin_SH\": Minimum temperature shade leaves. \"TempMax_SH\": Maximum temperature shade leaves. \"GSWMin_SL\": Minimum stomatal conductance sunlit leaves. \"GSWMax_SL\": Maximum stomatal conductance sunlit leaves. \"GSWMin_SH\": Minimum stomatal conductance shade leaves. \"GSWMax_SH\": Maximum stomatal conductance shade leaves. \"StemPsi\":  Midday (upper) stem water potential. \"RootPsi\":  Midday root crown water potential. \"PlantNetPhotosynthesis\":  Plant cohort net photosynthesis. \"NetPhotosynthesisPerLeaf\":  Plant cohort net photosynthesis per leaf area. \"PlantWUE\":  Plant cohort daily water use efficiency. \"PlantAbsorbedSWR\":  Plant cohort absorbed short wave radiation. \"AbsorbedSWRPerLeaf\":  Plant cohort absorbed short wave radiation per leaf area. \"PlantNetLWR\":  Plant cohort net long wave radiation. \"NetLWRPerLeaf\":  Plant cohort net long wave radiation per leaf area. \"AirTemperature\":  Minimum/maximum/mean daily temperatures canopy. \"CanopyTemperature\":  Minimum/maximum/mean daily temperatures inside canopy. \"SoilTemperature\":  Minimum/maximum/mean daily temperatures inside first soil layer. \"CanopyEnergyBalance\":  Canopy energy balance components. \"SoilEnergyBalance\":  Soil energy balance components. addition former, following plots available objects growth fordyn: \"CarbonBalance\":  Stand-level carbon balance components. \"BiomassBalance\":  Stand-level biomass balance components. \"GrossPhotosynthesis\":  Gross photosynthesis rate per dry weight. \"MaintenanceRespiration\":  Maintenance respiration cost per dry weight. \"PhotosynthesisMaintenanceRatio\":  ratio gross photosynthesis maintenance respiration. \"RootExudation\":  Root exudation rate per dry weight. \"LabileCarbonBalance\":  Labile carbon balance per dry weight. \"SugarLeaf\":  Sugar concentration leaves. \"StarchLeaf\":  Starch concentration leaves. \"SugarSapwood\":  Sugar concentration sapwood. \"StarchSapwood\":  Starch concentration sapwood. \"SugarTransport\":  Phloem sugar transport rate. \"StructuralBiomassBalance\":  Daily structural biomass balance (g dry · ind-2). \"LabileBiomassBalance\":  Daily labile biomass balance (g dry · ind-2). \"PlantBiomassBalance\":  Daily plant biomass balance, .e. labile change + structural change (g dry · ind-2). \"MortalityBiomassLoss\":  Biomass loss due mortality (g dry · m-2). \"PlantBiomassBalance\":  Daily cohort biomass balance (including mortality) (g dry · m-2). \"LeafBiomass\": Leaf structural dry biomass per individual. \"SapwoodBiomass\": Sapwood dry biomass per individual. \"FineRootBiomass\": Fine root dry biomass per individual. \"SapwoodArea\":  Sapwood area per individual. \"LeafArea\":  Leaf area per individual. \"FineRootArea\": Fine root area per individual (transpirationMode = \"Sperry\" transpirationMode = \"Sureau\"). \"DBH\": Diameter breast height (cm) average individual plant cohort. \"Height\": Height (cm) average individual plant cohort. \"SAgrowth\":  Sapwood area growth rate. \"LAgrowth\":  Leaf area growth rate. \"FRAgrowth\":  Fine root area growth rate (transpirationMode = \"Sperry\" transpirationMode = \"Sureau\"). \"HuberValue\":  Ratio leaf area sapwood area. \"RootAreaLeafArea\":  Ratio fine root area leaf area (transpirationMode = \"Sperry\" transpirationMode = \"Sureau\"). Finally, following plots available fordyn simulation results: \"StandBasalArea\": Stand basal area living trees. \"StandDensity\": Stand density living trees. \"SpeciesBasalArea\": Basal area living trees species. \"SpeciesDensity\": Density living trees species. \"CohortBasalArea\": Basal area living trees plant cohort. \"CohortDensity\": Density living trees plant cohort.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots simulation results — plot.spwb","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots simulation results — plot.spwb","text":"","code":"# \\donttest{ #Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Initialize input x <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  #Call simulation function S1 <- spwb(x, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant water content (mm): 4.73001 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  [Year 2001]:............ #>  #> Final plant water content (mm): 4.7285 #> Final soil water content (mm): 274.723 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): -0.00151775 #> Plant water balance result (mm): -0.00151775 #> Change in soil water content (mm): -16.1521 #> Soil water balance result (mm): -16.1521 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): -7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 370 #>   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 26  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 249 #>   Plant extraction from soil (mm) 249  Plant water balance (mm) -0 Hydraulic redistribution (mm) 5 #>   Runoff (mm) 21 Deep drainage (mm) 128  #Plot results plot(S1)  # }"},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots simulation results for one day — plot.spwb_day","title":"Plots simulation results for one day — plot.spwb_day","text":"Functions plot sub-daily simulation results spwb_day, growth_day transpiration calculations transp_transpirationSperry transp_transpirationSureau.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots simulation results for one day — plot.spwb_day","text":"","code":"# S3 method for class 'spwb_day' plot(   x,   type = \"PlantTranspiration\",   bySpecies = FALSE,   xlim = NULL,   ylim = NULL,   xlab = NULL,   ylab = NULL,   ... )  # S3 method for class 'growth_day' plot(   x,   type = \"PlantTranspiration\",   bySpecies = FALSE,   xlim = NULL,   ylim = NULL,   xlab = NULL,   ylab = NULL,   ... )  # S3 method for class 'pwb_day' plot(   x,   type = \"PlantTranspiration\",   bySpecies = FALSE,   xlim = NULL,   ylim = NULL,   xlab = NULL,   ylab = NULL,   ... )"},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots simulation results for one day — plot.spwb_day","text":"x object class spwb_day, growth_day pwb_day. type information plotted (see details). bySpecies Allows aggregating output species, drawing plots. Aggregation can involve sum (plant LAI transpiration) LAI-weighted mean (plant stress plant water potential). xlim Range values x. ylim Range values y. xlab x-axis label. ylab y-axis label. ... Additional parameters function plot.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots simulation results for one day — plot.spwb_day","text":"ggplot object","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb_day.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots simulation results for one day — plot.spwb_day","text":"following plots available spwb_day pwb_day: \"LeafPsi\": Leaf water potential (shade sunlit leaves). \"LeafPsiAverage\": Average leaf water potential. \"RootPsi\": Root crown water potential. \"StemPsi\": Stem water potential. \"StemPLC\": (Average) percentage loss conductance stem conduits. \"StemRWC\": (Average) relative water content stem. \"LeafRWC\": Relative water content leaf. \"StemSympRWC\": (Average) relative water content stem symplasm. \"LeafSympRWC\": Relative water content leaf symplasm. \"SoilPlantConductance\": Overall soil plant conductance (calculated derivative supply function). \"PlantExtraction\":  Water extracted soil layer. \"PlantTranspiration\": Plant cohort transpiration per ground area. \"TranspirationPerLeaf\": Plant cohort transpiration per leaf area. \"PlantGrossPhotosynthesis\": Plant cohort gross photosynthesis per ground area. \"GrossPhotosynthesisPerLeaf\": Plant cohort gross photosynthesis per leaf area. \"PlantNetPhotosynthesis\": Plant cohort net photosynthesis per ground area. \"NetPhotosynthesisPerLeaf\": Plant cohort net photosynthesis per leaf area. \"LeafTranspiration\": Instantaneous transpiration per leaf area (differentiates sunlit shade leaves). \"LeafGrossPhotosynthesis\": Instantaneous gross photosynthesis per leaf area (differentiates sunlit shade leaves). \"LeafNetPhotosynthesis\": Instantaneous net photosynthesis per leaf area (differentiates sunlit shade leaves). \"LeafAbsorbedSWR\": Absorbed short wave radiation per leaf area (differentiates sunlit shade leaves). \"LeafAbsorbedPAR\": Absorbed photosynthetically-active radiation per leaf area (differentiates sunlit shade leaves). \"LeafNetLWR\": Net long wave radiation per leaf area (differentiates sunlit shade leaves). \"LeafCi\": Leaf intercellular CO2 concentration (differentiates sunlit shade leaves). \"LeafIntrinsicWUE\": Leaf intrinsic water use efficiency, .e. ratio instantaneous photosynthesis stomatal conductance (differentiates sunlit shade leaves). \"LeafVPD\": Leaf vapour pressure deficit (differentiates sunlit shade leaves). \"LeafStomatalConductance\": Leaf stomatal conductance water vapour (differentiates sunlit shade leaves). \"LeafTemperature\": Leaf temperature (differentiates sunlit shade leaves). \"Temperature\": -canopy, inside-canopy soil temperature. \"CanopyEnergyBalance\": Canopy energy balance components. \"SoilEnergyBalance\": Soil energy balance components. \"PlantWaterBalance\": Difference water extraction soil transpired water per ground area. \"WaterBalancePerLeaf\": Difference water extraction soil transpired water per leaf area. following plots additionally available growth_day: \"GrossPhotosynthesis\": Gross photosynthesis rate per dry weight. \"MaintenanceRespiration\": Maintenance respiration cost per dry weight. \"RootExudation\": Root exudation rate per dry weight. \"LabileCarbonBalance\": Labile carbon balance per dry weight. \"SugarLeaf\": Sugar concentration leaves. \"StarchLeaf\": Starch concentration leaves. \"SugarSapwood\": Sugar concentration sapwood. \"StarchSapwood\": Starch concentration sapwood. \"SugarTransport\": Phloem sugar transport rate.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb_day.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plots simulation results for one day — plot.spwb_day","text":"soil plant water balance simulations using transpirationMode = \"Sperry\" transpirationMode = \"Sureau\". function can used display subdaily dynamics corresponding single days spwb runs, control option subdailyResults set TRUE. See also option subdaily plot.spwb.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb_day.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots simulation results for one day — plot.spwb_day","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/plot.spwb_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots simulation results for one day — plot.spwb_day","text":"","code":"#Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (2 layers) examplesoil <- defaultSoilParams(4)  #Switch to 'Sperry' transpiration mode control <- defaultControl(\"Sperry\")  #Enable subdaily results for plotting control[\"subdailyResults\"] <- TRUE  #Initialize model inputs x2 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  #Simulate one day only d <- 100 date <- examplemeteo$dates[d] meteovec <- unlist(examplemeteo[d,]) sd2 <- spwb_day(x2, date, meteovec,               latitude = 41.82592, elevation = 100, slope= 0, aspect = 0)  #Display transpiration for subdaily steps plot(sd2, \"PlantTranspiration\")"},{"path":"https://emf-creaf.github.io/medfate/reference/poblet_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Example forest inventory data — poblet_trees","title":"Example forest inventory data — poblet_trees","text":"Example data illustrate creation forest objects inventory data, coming forest inventory survey, used illustrate general function forest_mapTreeTable: poblet_trees - Data frame example tree plot data Poblet, Catalonia (717 observations 4 variables). Plot.Code - Plot ID (character) Indv.Ref - Tree individual (integer) Species - Species name (character) Diameter.cm - Tree diameter breast height (cm)","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/poblet_trees.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example forest inventory data — poblet_trees","text":"Data table poblet_trees corresponds field data sampled Catalan Forest Ownership Center (Centre de la Propietat Forestal; CPF).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/regeneration.html","id":null,"dir":"Reference","previous_headings":"","what":"Plant regeneration — regeneration","title":"Plant regeneration — regeneration","text":"Functions simulate annual plant regeneration seed recruitment resprouting","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/regeneration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plant regeneration — regeneration","text":"","code":"regeneration_seedproduction(forest, SpParams, control)  regeneration_seedrefill(seedBank, refillSpecies, refillPercent = NULL)  regeneration_seedmortality(seedBank, SpParams, minPercent = 1)  regeneration_recruitment(   forest,   SpParams,   control,   minMonthTemp,   moistureIndex,   verbose = FALSE )  regeneration_resprouting(   forest,   internalMortality,   SpParams,   control,   management_results = NULL )"},{"path":"https://emf-creaf.github.io/medfate/reference/regeneration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plant regeneration — regeneration","text":"forest object class forest. SpParams data frame species parameters (see SpParamsMED SpParamsDefinition). control list default control parameters (see defaultControl). seedBank data frame columns 'Species' 'Percent', describing seed bank. refillSpecies string vector species names corresponding seed rain refill seed bank. refillPercent numeric vector indicating percentage seed bank refilling (missing seed bank set 100%). minPercent minimum percent seed bank retain entry seedBank element forest. minMonthTemp Minimum month temperature. moistureIndex Moisture index (annual precipitation annual potential evapotranspiration). verbose Boolean flag indicate console output calculations. internalMortality data frame mortality occurred last year simulation. management_results result calling management function (see defaultManagementFunction).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/regeneration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plant regeneration — regeneration","text":"regeneration_seedproduction returns list species names regeneration_seedrefill regeneration_seedmortality return copy input data.frame object update seed bank. regeneration_resprouting regeneration_recruitment return new object class forest new plant cohorts.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/regeneration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plant regeneration — regeneration","text":"regeneration_seedproduction evaluates reproductive individuals (.e. sufficiently tall individuals) present. regeneration_seedrefill fills seed bank input forest object seed rain. regeneration_seedmortality updates seed bank input forest object according annual seed mortality. regeneration_recruitment evaluates recruitment seed bank (local seed production seed bank missing). Minimum month temperature moisture index values used determine recruitment successful. Species also require minimum amount light ground level. regeneration_resprouting evaluates resprouting occurs “mortality” die-back (including drought- pathogen-induced dessication), cutting burning aerial part species resprouting ability, carbon starvation baseline mortality (unspecific mortality causes).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/regeneration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plant regeneration — regeneration","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/regeneration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plant regeneration — regeneration","text":"","code":"#Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Initialize control parameters control <- defaultControl(\"Granier\") control$recruitmentMode = \"deterministic\"   #Recruitment limits plant_parameter(exampleforest, SpParamsMED, \"MinTempRecr\") #>    T1_148    T2_168    S1_165  #>  1.083300 -3.744526  1.669536  plant_parameter(exampleforest, SpParamsMED, \"MinMoistureRecr\") #>     T1_148     T2_168     S1_165  #> 0.10154153 0.09657161 0.22301894   #Compare seed recruitment outcomes regeneration_recruitment(exampleforest, SpParamsMED, control, 0, 0.25) #> $treeData #> [1] Species DBH     Height  N       Z50     Z95     #> <0 rows> (or 0-length row.names) #>  #> $shrubData #> [1] Species Height  Cover   Z50     Z95     #> <0 rows> (or 0-length row.names) #>  #> attr(,\"class\") #> [1] \"forest\" \"list\"   regeneration_recruitment(exampleforest, SpParamsMED, control, 3, 0.25) #> $treeData #> [1] Species DBH     Height  N       Z50     Z95     #> <0 rows> (or 0-length row.names) #>  #> $shrubData #> [1] Species Height  Cover   Z50     Z95     #> <0 rows> (or 0-length row.names) #>  #> attr(,\"class\") #> [1] \"forest\" \"list\""},{"path":"https://emf-creaf.github.io/medfate/reference/resetInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset simulation inputs — resetInputs","title":"Reset simulation inputs — resetInputs","text":"Function resetInputs() allows resetting state variables x defaults.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/resetInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset simulation inputs — resetInputs","text":"","code":"resetInputs(x)"},{"path":"https://emf-creaf.github.io/medfate/reference/resetInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset simulation inputs — resetInputs","text":"x object class spwbInput growthInput.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/resetInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset simulation inputs — resetInputs","text":"return value. Instead, modifies input object x.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/resetInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reset simulation inputs — resetInputs","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/resistances.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil-plant resistances — resistances","title":"Soil-plant resistances — resistances","text":"Calculates draws rhizosphere, root, stem leaf resistances simulation time steps","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/resistances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil-plant resistances — resistances","text":"","code":"resistances(   x,   cohort,   relative = FALSE,   draw = FALSE,   cumulative = FALSE,   xlab = NULL,   ylab = NULL )"},{"path":"https://emf-creaf.github.io/medfate/reference/resistances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Soil-plant resistances — resistances","text":"x object class spwb, pwb, growth fordyn. function works result simulations transpirationMode = \"Sperry\" transpirationMode = \"Sureau\". cohort string indicating cohort resistances desired. relative boolean flag indicate relative percentages desired output. draw boolean flag indicate plot drawn (pathway resistances, without discriminating soil layers). cumulative flag indicate drawn series cumulative. xlab x-axis label. ylab y-axis label.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/resistances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Soil-plant resistances — resistances","text":"draw = FALSE, function returns list three items: pathway: data frame dates rows resistance segments columns (Rhizosphere, Root, Stem Leaf). root: data frame dates rows root resistances soil layers columns. rhizosphere: data frame dates rows rhizosphere resistances soil layers columns. Values depend whether relative = TRUE (percentages) relative = FALSE (absolute resistance values). draw = TRUE, plot object returned showing time series pathway resistances.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/resistances.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil-plant resistances — resistances","text":"function makes internal calls hydraulics_soilPlantResistancesWeibull hydraulics_soilPlantResistancesSigmoid depending value transpirationMode x.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/resistances.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Soil-plant resistances — resistances","text":"Miquel De Cáceres Ainsa, CREAF Léa Veuillen, INRAE-URFM","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/root.html","id":null,"dir":"Reference","previous_headings":"","what":"Root functions — root","title":"Root functions — root","text":"Functions calculate properties fine/coarse roots within soil, given root system parameters soil layer definition.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/root.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root functions — root","text":"","code":"root_conicDistribution(Zcone, d)  root_ldrDistribution(Z50, Z95, Z100, d)  root_individualRootedGroundArea(VolInd, V, d, rfc)  root_specificRootSurfaceArea(specificRootLength, rootTissueDensity)  root_fineRootRadius(specificRootLength, rootTissueDensity)  root_fineRootHalfDistance(rootLengthDensity)  root_fineRootAreaIndex(   Ksoil,   krhizo,   lai,   specificRootLength,   rootTissueDensity,   rootLengthDensity )  root_fineRootBiomass(   Ksoil,   krhizo,   lai,   N,   specificRootLength,   rootTissueDensity,   rootLengthDensity )  root_rhizosphereMaximumConductance(   Ksoil,   fineRootBiomass,   lai,   N,   specificRootLength,   rootTissueDensity,   rootLengthDensity )  root_fineRootSoilVolume(fineRootBiomass, specificRootLength, rootLengthDensity)  root_coarseRootSoilVolumeFromConductance(   Kmax_rootxylem,   VCroot_kmax,   Al2As,   v,   d,   rfc )  root_coarseRootLengthsFromVolume(VolInd, v, d, rfc)  root_coarseRootLengths(v, d, depthWidthRatio = 1)  root_coarseRootSoilVolume(v, d, depthWidthRatio = 1)  root_horizontalProportions(poolProportions, VolInd, N, V, d, rfc)"},{"path":"https://emf-creaf.github.io/medfate/reference/root.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root functions — root","text":"Zcone vector depths (mm) corresponding root cone tip. d width (mm) corresponding soil layer. Z50 vector depths (mm) corresponding 50% roots. Z95 vector depths (mm) corresponding 95% roots. Z100 vector depths (mm) corresponding 100% roots. VolInd Volume soil (m3) occupied coarse roots per individual. V Matrix proportions fine roots (cohorts x soil layers). rfc Percentage rock fragment content (volume basis) layer. specificRootLength Specific fine root length (length fine roots weight). rootTissueDensity Fine root tissue density (weight volume turgidity). rootLengthDensity Fine root length density (length fine roots soil volume; cm/cm3) Ksoil Soil saturated conductivity (mmol·m-1·s-1·MPa-1). krhizo Rhizosphere maximum conductance per leaf area (mmol·m-2·s-1·MPa-1). lai Leaf area index. N Density individuals per hectare. fineRootBiomass Biomass fine roots (g). Kmax_rootxylem Sapwood-specific hydraulic conductivity root xylem (kg H2O·s-1·m-1·MPa-1). VCroot_kmax Root xylem maximum conductance per leaf area (mmol·m-2·s-1·MPa-1). Al2As Leaf area sapwood area ratio (m2·m-2). v Vector proportions fine roots soil layer. depthWidthRatio Ratio radius soil layer largest radius maximum rooting depth. poolProportions Division stand area among plant cohorts (proportions).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/root.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Root functions — root","text":"See details.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/root.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Root functions — root","text":"root_conicDistribution() assumes (vertical) conic distribution fine roots, whereas root_ldrDistribution() distributes fine roots according linear dose response model Schenck & Jackson (2002). Return matrix fine root proportions layer many rows elements Z (Z50) many columns soil layers. root_coarseRootLengths() root_coarseRootLengthsFromVolume() estimate length coarse roots (mm) soil layer, including axial radial lengths. root_coarseRootSoilVolume estimates soil volume (m3) occupied coarse roots individual. root_coarseRootSoilVolumeFromConductance estimates soil volume (m3) occupied coarse roots individual root xylem conductance. root_fineRootHalfDistance() calculates half distance (cm) neighbouring fine roots. root_fineRootRadius() calculates radius fine roots (cm). root_fineRootAreaIndex() estimates fine root area index given soil conductivity maximum rhizosphere conductance. root_fineRootBiomass() estimates biomass fine roots (g dry/individual) given soil conductivity maximum rhizosphere conductance. root_rhizosphereMaximumConductance() inverse preceeding function, .e. estimates rhizosphere conductance soil conductivity fine root biomass. root_fineRootSoilVolume() calculates soil volume (m3) occupied fine roots. root_specificRootSurfaceArea() returns specific fine root area (cm2/g). root_individualRootedGroundArea() calculates area (m2) covered roots individual, soil layer. root_horizontalProportions() calculates (horizontal) proportion roots cohort water pool corresponding cohorts, soil layer. Returns list (many elements cohorts) element matrix.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/root.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Root functions — root","text":"Schenk, H., Jackson, R., 2002. global biogeography roots. Ecol. Monogr. 72, 311–328. Sperry, J. S., Y. Wang, B. T. Wolfe, D. S. Mackay, W. R. L. Anderegg, N. G. Mcdowell, W. T. Pockman. 2016. Pragmatic hydraulic theory predicts stomatal responses climatic water deficits. New Phytologist 212, 577–589.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/root.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Root functions — root","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/root.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Root functions — root","text":"","code":"#Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  ntree <- nrow(exampleforest$treeData)  #Initialize soil with default soil params s <- defaultSoilParams(4)  #Calculate conic root system for trees V1 <- root_conicDistribution(Z=rep(2000,ntree), s$widths)             print(V1) #>          [,1]     [,2]  [,3] [,4] #> [1,] 0.385875 0.489125 0.125    0 #> [2,] 0.385875 0.489125 0.125    0       #Calculate LDR root system for trees (Schenck & Jackson 2002) V2 <- root_ldrDistribution(Z50 = rep(200,ntree),                             Z95 = rep(1000,ntree),                            Z100 = rep(NA, ntree), s$widths) print(V2)      #>           [,1]      [,2]       [,3]       [,4] #> [1,] 0.6799879 0.2737911 0.03567632 0.01054468 #> [2,] 0.6799879 0.2737911 0.03567632 0.01054468"},{"path":"https://emf-creaf.github.io/medfate/reference/shinyplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app with interactive plots — shinyplot","title":"Shiny app with interactive plots — shinyplot","text":"Creates shiny app interactive plots simulation results evaluation","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/shinyplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app with interactive plots — shinyplot","text":"","code":"shinyplot(x, ...)  # S3 method for class 'growth' shinyplot(x, measuredData = NULL, ...)  # S3 method for class 'spwb' shinyplot(x, measuredData = NULL, ...)  # S3 method for class 'pwb' shinyplot(x, measuredData = NULL, ...)  # S3 method for class 'fordyn' shinyplot(x, measuredData = NULL, ...)  # S3 method for class 'growth_day' shinyplot(x, ...)  # S3 method for class 'spwb_day' shinyplot(x, ...)  # S3 method for class 'pwb_day' shinyplot(x, ...)"},{"path":"https://emf-creaf.github.io/medfate/reference/shinyplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny app with interactive plots — shinyplot","text":"x object right class. ... Additional parameters. measuredData data frame observed/measured values (see evaluation_plot).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/shinyplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny app with interactive plots — shinyplot","text":"object represents shiny app","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/shinyplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiny app with interactive plots — shinyplot","text":"run function interactive mode. measuredData NULL, additional panel shown evaluation plots.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/shinyplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny app with interactive plots — shinyplot","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil initialization — soil","title":"Soil initialization — soil","text":"Initializes soil parameters state variables use simulations.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil initialization — soil","text":"","code":"soil(x, VG_PTF = \"Toth\")  # S3 method for class 'soil' summary(object, model = \"SX\", ...)"},{"path":"https://emf-creaf.github.io/medfate/reference/soil.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Soil initialization — soil","text":"x data frame soil parameters (see example defaultSoilParams). VG_PTF Pedotransfer functions obtain parameters van Genuchten-Mualem equations. Either \"Carsel\" (Carsel Parrish 1988) \"Toth\" (Toth et al. 2015). object object class soil. model Either 'SX' 'VG' Saxton Van Genuchten pedotransfer models. ... Additional parameters summary.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Soil initialization — soil","text":"Function soil returns data frame class soil following columns: widths: Width soil layers (mm). sand: Sand percentage layer (percent volume). clay: Clay percentage layer (percent volume). om: Organic matter percentage layer (percent volume). nitrogen: Sum total nitrogen (ammonia, organic reduced nitrogen) layer (g/kg). rfc: Percentage rock fragment content layer. macro: Macroporosity layer (estimated using Stolf et al. 2011). Ksat: Saturated soil conductivity layer (estimated using function soil_saturatedConductivitySX. VG_alpha, VG_n, VG_theta_res, VG_theta_sat: Parameters van Genuchten's pedotransfer functions, layer, corresponding USDA texture type. W: State variable relative water content layer (proportion relative FC). Temp: State variable temperature (ºC) layer.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil initialization — soil","text":"Function summary prompts description soil characteristics state variables (water content temperature) according water retention curve (either Saxton's Van Genuchten's). Volume field capacity calculated assuming soil water potential equal -0.033 MPa. Parameter Temp initialized missing soil layers. available, user can specify columns VG_alpha, VG_n, VG_theta_res, VG_theta_sat K_sat, override Van Genuchten parameters saturated conductivity estimated pedotransfer functions calling function soil.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Soil initialization — soil","text":"Carsel, R.F., Parrish, R.S. 1988. Developing joint probability distributions soil water retention characteristics. Water Resources Research 24: 755–769. Tóth, B., Weynants, M., Nemes, ., Makó, ., Bilas, G., Tóth, G. 2015. New generation hydraulic pedotransfer functions Europe. European Journal Soil Science 66: 226–238. Stolf, R., Thurler, ., Oliveira, O., Bacchi, S., Reichardt, K., 2011. Method estimate soil macroporosity microporosity based sand content bulk density. Rev. Bras. Ciencias Solo 35, 447–459.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/soil.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Soil initialization — soil","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil initialization — soil","text":"","code":"# Default parameters df_soil <- defaultSoilParams()  # Initializes soil s = soil(df_soil) s #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.303861        0.041     0.423715 1   NA #> 2 1.303861        0.041     0.423715 1   NA #> 3 1.303861        0.041     0.423715 1   NA #> 4 1.303861        0.041     0.423715 1   NA  # Prints soil characteristics according to Saxton's water retention curve summary(s, model=\"SX\") #> Soil depth (mm): 4000  #>  #> Layer  1  [ 0  to  300 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 25 Macroporosity (%): 5  #>     Theta WP (%): 14 Theta FC (%): 30 Theta SAT (%): 49 Theta current (%) 30  #>     Vol. WP (mm): 32 Vol. FC (mm): 68 Vol. SAT (mm): 111 Vol. current (mm): 68  #>     Temperature (Celsius): NA  #>  #> Layer  2  [ 300  to  1000 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 45 Macroporosity (%): 5  #>     Theta WP (%): 14 Theta FC (%): 30 Theta SAT (%): 49 Theta current (%) 30  #>     Vol. WP (mm): 55 Vol. FC (mm): 117 Vol. SAT (mm): 190 Vol. current (mm): 117  #>     Temperature (Celsius): NA  #>  #> Layer  3  [ 1000  to  2000 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 75 Macroporosity (%): 5  #>     Theta WP (%): 14 Theta FC (%): 30 Theta SAT (%): 49 Theta current (%) 30  #>     Vol. WP (mm): 36 Vol. FC (mm): 76 Vol. SAT (mm): 123 Vol. current (mm): 76  #>     Temperature (Celsius): NA  #>  #> Layer  4  [ 2000  to  4000 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 95 Macroporosity (%): 5  #>     Theta WP (%): 14 Theta FC (%): 30 Theta SAT (%): 49 Theta current (%) 30  #>     Vol. WP (mm): 14 Vol. FC (mm): 30 Vol. SAT (mm): 49 Vol. current (mm): 30  #>     Temperature (Celsius): NA  #>  #> Total soil saturated capacity (mm): 473  #> Total soil water holding capacity (mm): 291  #> Total soil extractable water (mm): 183  #> Total soil current Volume (mm): 291  #> Saturated water depth (mm): NA  #>   # Prints soil characteristics according to Van Genuchten's water retention curve summary(s, model=\"VG\") #> Soil depth (mm): 4000  #>  #> Layer  1  [ 0  to  300 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 25 Macroporosity (%): 5  #>     Theta WP (%): 13 Theta FC (%): 30 Theta SAT (%): 42 Theta current (%) 30  #>     Vol. WP (mm): 29 Vol. FC (mm): 68 Vol. SAT (mm): 95 Vol. current (mm): 68  #>     Temperature (Celsius): NA  #>  #> Layer  2  [ 300  to  1000 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 45 Macroporosity (%): 5  #>     Theta WP (%): 13 Theta FC (%): 30 Theta SAT (%): 42 Theta current (%) 30  #>     Vol. WP (mm): 49 Vol. FC (mm): 117 Vol. SAT (mm): 163 Vol. current (mm): 117  #>     Temperature (Celsius): NA  #>  #> Layer  3  [ 1000  to  2000 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 75 Macroporosity (%): 5  #>     Theta WP (%): 13 Theta FC (%): 30 Theta SAT (%): 42 Theta current (%) 30  #>     Vol. WP (mm): 32 Vol. FC (mm): 76 Vol. SAT (mm): 106 Vol. current (mm): 76  #>     Temperature (Celsius): NA  #>  #> Layer  4  [ 2000  to  4000 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 95 Macroporosity (%): 5  #>     Theta WP (%): 13 Theta FC (%): 30 Theta SAT (%): 42 Theta current (%) 30  #>     Vol. WP (mm): 13 Vol. FC (mm): 30 Vol. SAT (mm): 42 Vol. current (mm): 30  #>     Temperature (Celsius): NA  #>  #> Total soil saturated capacity (mm): 407  #> Total soil water holding capacity (mm): 291  #> Total soil extractable water (mm): 194  #> Total soil current Volume (mm): 291  #> Saturated water depth (mm): NA  #>   # Add columns 'VG_theta_sat' and 'VG_theta_res' with custom values df_soil$VG_theta_sat <- 0.400  df_soil$VG_theta_res <- 0.040   # Reinitialize soil (should override estimations) s2 = soil(df_soil) s2 #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.303861         0.04          0.4 1   NA #> 2 1.303861         0.04          0.4 1   NA #> 3 1.303861         0.04          0.4 1   NA #> 4 1.303861         0.04          0.4 1   NA summary(s2, model=\"VG\") #> Soil depth (mm): 4000  #>  #> Layer  1  [ 0  to  300 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 25 Macroporosity (%): 5  #>     Theta WP (%): 12 Theta FC (%): 29 Theta SAT (%): 40 Theta current (%) 29  #>     Vol. WP (mm): 27 Vol. FC (mm): 64 Vol. SAT (mm): 90 Vol. current (mm): 64  #>     Temperature (Celsius): NA  #>  #> Layer  2  [ 300  to  1000 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 45 Macroporosity (%): 5  #>     Theta WP (%): 12 Theta FC (%): 29 Theta SAT (%): 40 Theta current (%) 29  #>     Vol. WP (mm): 47 Vol. FC (mm): 110 Vol. SAT (mm): 154 Vol. current (mm): 110  #>     Temperature (Celsius): NA  #>  #> Layer  3  [ 1000  to  2000 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 75 Macroporosity (%): 5  #>     Theta WP (%): 12 Theta FC (%): 29 Theta SAT (%): 40 Theta current (%) 29  #>     Vol. WP (mm): 30 Vol. FC (mm): 72 Vol. SAT (mm): 100 Vol. current (mm): 72  #>     Temperature (Celsius): NA  #>  #> Layer  4  [ 2000  to  4000 mm ]  #>     clay (%): 25 silt (%): 50 sand (%): 25 organic matter (%): NA [ Silt loam ] #>     Rock fragment content (%): 95 Macroporosity (%): 5  #>     Theta WP (%): 12 Theta FC (%): 29 Theta SAT (%): 40 Theta current (%) 29  #>     Vol. WP (mm): 12 Vol. FC (mm): 29 Vol. SAT (mm): 40 Vol. current (mm): 29  #>     Temperature (Celsius): NA  #>  #> Total soil saturated capacity (mm): 384  #> Total soil water holding capacity (mm): 275  #> Total soil extractable water (mm): 182  #> Total soil current Volume (mm): 275  #> Saturated water depth (mm): NA  #>"},{"path":"https://emf-creaf.github.io/medfate/reference/soil_redefineLayers.html","id":null,"dir":"Reference","previous_headings":"","what":"Redefine soil layer widths — soil_redefineLayers","title":"Redefine soil layer widths — soil_redefineLayers","text":"Allows redefining soil layer widths input data frame soil parameters.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_redefineLayers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Redefine soil layer widths — soil_redefineLayers","text":"","code":"soil_redefineLayers(x, widths = c(300, 700, 1000, 2000))"},{"path":"https://emf-creaf.github.io/medfate/reference/soil_redefineLayers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Redefine soil layer widths — soil_redefineLayers","text":"x data frame soil parameters (see example defaultSoilParams) object class soil. widths numeric vector indicating desired layer widths, mm.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_redefineLayers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Redefine soil layer widths — soil_redefineLayers","text":"data frame soil object soil parameters, depending class x.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_redefineLayers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Redefine soil layer widths — soil_redefineLayers","text":"initialized soil supplied, hydraulic parameters recalculated value state variables lost.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/soil_redefineLayers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Redefine soil layer widths — soil_redefineLayers","text":"Víctor Granda, EMF-CREAF Miquel De Cáceres Ainsa, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_redefineLayers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Redefine soil layer widths — soil_redefineLayers","text":"","code":"# Define initial soil with 5 layers spar <- defaultSoilParams(5) spar #>   widths clay sand om nitrogen  bd rfc #> 1    300   25   25 NA       NA 1.5  25 #> 2    700   25   25 NA       NA 1.5  45 #> 3   1000   25   25 NA       NA 1.5  75 #> 4   2000   25   25 NA       NA 1.5  95 #> 5   4000   25   25 NA       NA 1.5  98  # Redefine to four layers soil_redefineLayers(spar) #>   widths clay sand om nitrogen  bd rfc #> 1    300   25   25 NA       NA 1.5  25 #> 2    700   25   25 NA       NA 1.5  45 #> 3   1000   25   25 NA       NA 1.5  75 #> 4   2000   25   25 NA       NA 1.5  95  # Same but after soil parameter initialization examplesoil <- soil(spar) examplesoil #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #> 5   4000   25   25 Silt loam NA       NA 1.5  98 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.303861        0.041     0.423715 1   NA #> 2 1.303861        0.041     0.423715 1   NA #> 3 1.303861        0.041     0.423715 1   NA #> 4 1.303861        0.041     0.423715 1   NA #> 5 1.303861        0.041     0.423715 1   NA  soil_redefineLayers(examplesoil) #>   widths sand clay      usda om nitrogen  bd rfc  macro     Ksat VG_alpha #> 1    300   25   25 Silt loam NA       NA 1.5  25 0.0485 5401.471 89.16112 #> 2    700   25   25 Silt loam NA       NA 1.5  45 0.0485 5401.471 89.16112 #> 3   1000   25   25 Silt loam NA       NA 1.5  75 0.0485 5401.471 89.16112 #> 4   2000   25   25 Silt loam NA       NA 1.5  95 0.0485 5401.471 89.16112 #>       VG_n VG_theta_res VG_theta_sat W Temp #> 1 1.303861        0.041     0.423715 1   NA #> 2 1.303861        0.041     0.423715 1   NA #> 3 1.303861        0.041     0.423715 1   NA #> 4 1.303861        0.041     0.423715 1   NA"},{"path":"https://emf-creaf.github.io/medfate/reference/soil_texture.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil texture and hydraulics — soil_texture","title":"Soil texture and hydraulics — soil_texture","text":"Low-level functions relating soil texture soil hydraulics soil water content.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_texture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil texture and hydraulics — soil_texture","text":"","code":"soil_saturatedConductivitySX(clay, sand, bd, om = NA_real_, mmol = TRUE)  soil_unsaturatedConductivitySX(   theta,   clay,   sand,   bd,   om = NA_real_,   mmol = TRUE )  soil_thetaSATSX(clay, sand, om = NA_real_)  soil_theta2psiSX(clay, sand, theta, om = NA_real_)  soil_psi2thetaSX(clay, sand, psi, om = NA_real_)  soil_psi2kVG(ksat, n, alpha, theta_res, theta_sat, psi)  soil_psi2cVG(n, alpha, theta_res, theta_sat, psi)  soil_psi2thetaVG(n, alpha, theta_res, theta_sat, psi)  soil_theta2psiVG(n, alpha, theta_res, theta_sat, theta)  soil_USDAType(clay, sand)  soil_thetaFC(soil, model = \"SX\")  soil_thetaWP(soil, model = \"SX\")  soil_thetaSAT(soil, model = \"SX\")  soil_waterFC(soil, model = \"SX\")  soil_waterSAT(soil, model = \"SX\")  soil_waterWP(soil, model = \"SX\")  soil_waterPsi(soil, psi, model = \"SX\")  soil_waterExtractable(soil, model = \"SX\", minPsi = -5)  soil_theta(soil, model = \"SX\")  soil_water(soil, model = \"SX\")  soil_rockWeight2Volume(pWeight, bulkDensity, rockDensity = 2.3)  soil_psi(soil, model = \"SX\")  soil_conductivity(soil, model = \"SX\")  soil_capacitance(soil, model = \"SX\")  soil_saturatedWaterDepth(soil, model = \"SX\")  soil_vanGenuchtenParamsCarsel(soilType)  soil_campbellParamsClappHornberger(soilType)  soil_vanGenuchtenParamsToth(clay, sand, om, bd, topsoil)  soil_retentionCurvePlot(   soil,   model = \"SX\",   layer = 1,   psi = seq(0, -6, by = -0.01),   relative = TRUE,   to = \"SAT\" )"},{"path":"https://emf-creaf.github.io/medfate/reference/soil_texture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Soil texture and hydraulics — soil_texture","text":"clay Percentage clay (percent weight). sand Percentage sand (percent weight). bd Bulk density (g/cm3). om Percentage organic matter (optional, percent weight). mmol Boolean flag indicate saturated conductivity units returned mmol/m/s/MPa. mmol = FALSE units cm/day. theta Relative water content (percent volume). psi Water potential (MPa). ksat saturated hydraulic conductance n, alpha, theta_res, theta_sat Parameters Van Genuchten-Mualem model (m = 1 - 1/n). soil Initialized soil object (returned function soil). model Either 'SX' 'VG' Saxton's Van Genuchten's water retention models; '' plot retention models. minPsi Minimum water potential (MPa) calculate amount extractable water. pWeight Percentage corresponding rocks, weight. bulkDensity Bulk density soil fraction (g/cm3). rockDensity Rock density (g/cm3). soilType string indicating soil type. topsoil boolean flag indicate topsoil layer. layer Soil layer plotted. relative Boolean flag indicate retention curve relative field capacity saturation. Either 'SAT' (saturation) 'FC' (field capacity).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_texture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Soil texture and hydraulics — soil_texture","text":"Depends function (see details).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_texture.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil texture and hydraulics — soil_texture","text":"soil_psi2thetaSX() soil_theta2psiSX() calculate water potentials (MPa) water contents (theta) using texture data formulae Saxton et al. (1986) Saxton & Rawls (2006) depending whether organic matter available. soil_psi2thetaVG() soil_theta2psiVG() calculations , using Van Genuchten - Mualem equations (Wösten & van Genuchten 1988). soil_saturatedConductivitySX() returns saturated conductivity soil (cm/day mmol/m/s/MPa), estimated formulae Saxton et al. (1986) Saxton & Rawls (2006) depending whether organic matter available. soil_unsaturatedConductivitySX() returns unsaturated conductivity soil (cm/day mmol/m/s/MPa), estimated formulae Saxton et al. (1986) Saxton & Rawls (2006) depending whether organic matter available. soil_USDAType() returns USDA type (string) given texture. soil_vanGenuchtenParamsCarsel() gives parameters van Genuchten-Mualem equations (alpha, n, theta_res theta_sat, alpha MPa-1) given texture type (Leij et al. 1996) soil_vanGenuchtenParamsToth() gives parameters van Genuchten-Mualem equations (alpha, n, theta_res theta_sat, alpha MPa-1) given texture, organic matter bulk density (Toth et al. 2015). soil_psi() returns water potential (MPa) soil layer, according water retention model. soil_theta() returns moisture content (percent soil volume) soil layer, according water retention model. soil_water() returns water volume (mm) soil layer, according water retention model. soil_conductivity() returns conductivity soil layer (mmol/m/s/MPa), according Saxton model. soil_waterExtractable() returns water volume (mm) extractable soil according water retention curves given soil water potential. soil_waterFC() soil_thetaFC() calculate water volume (mm) moisture content (percent soil volume) soil layer field capacity, respectively. soil_waterWP() soil_thetaWP() calculate water volume (mm) moisture content (percent soil volume) soil layer wilting point (-1.5 MPa), respectively. soil_waterSAT(), soil_thetaSATSX() soil_thetaSAT() calculate saturated water volume (mm) moisture content (percent soil volume) soil layer. soil_saturatedWaterDepth() returns depth saturation mm surface. soil_rockWeight2Volume() transforms rock percentage weight volume basis. soil_retentionCurvePlot() allows ploting water retention curve given soil layer.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_texture.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Soil texture and hydraulics — soil_texture","text":"Leij, F.J., Alves, W.J., Genuchten, M.T. Van, Williams, J.R., 1996. UNSODA Unsaturated Soil Hydraulic Database User’s Manual Version 1.0. Saxton, K.E., Rawls, W.J., Romberger, J.S., Papendick, R.., 1986. Estimating generalized soil-water characteristics texture. Soil Sci. Soc. . J. 50, 1031–1036. Saxton, K.E., Rawls, W.J., 2006. Soil water characteristic estimates texture organic matter hydrologic solutions. Soil Sci. Soc. . J. 70, 1569. doi:10.2136/sssaj2005.0117 Wösten, J.H.M., & van Genuchten, M.T. 1988. Using texture soil properties predict unsaturated soil hydraulic functions. Soil Science Society America Journal 52: 1762–1770. Tóth, B., Weynants, M., Nemes, ., Makó, ., Bilas, G., Tóth, G. 2015. New generation hydraulic pedotransfer functions Europe. European Journal Soil Science 66: 226–238.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/soil_texture.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Soil texture and hydraulics — soil_texture","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_texture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil texture and hydraulics — soil_texture","text":"","code":"#Determine USDA soil texture type type = soil_USDAType(clay=40, sand=10) type #> [1] \"Silty clay\"  #Van Genuchten's params (bulk density = 1.3 g/cm) vg = soil_vanGenuchtenParamsToth(40,10,1,1.3,TRUE) vg #>     alpha         n theta_res theta_sat  #> 92.643194  1.249553  0.041000  0.484241   # Define soil with default params soil_df <- defaultSoilParams(4) soil_df #>   widths clay sand om nitrogen  bd rfc #> 1    300   25   25 NA       NA 1.5  25 #> 2    700   25   25 NA       NA 1.5  45 #> 3   1000   25   25 NA       NA 1.5  75 #> 4   2000   25   25 NA       NA 1.5  95  # Initialize soil parameters and state variables s = soil(soil_df)  # Plot Saxton's and Van Genuchten's water retention curves soil_retentionCurvePlot(s, model=\"both\")"},{"path":"https://emf-creaf.github.io/medfate/reference/soil_thermodynamics.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil thermodynamic functions — soil_thermodynamics","title":"Soil thermodynamic functions — soil_thermodynamics","text":"Functions soil_thermalConductivity soil_thermalCapacity calculate thermal conductivity thermal capacity soil layer, given texture water content. Functions soil_temperatureGradient soil_temperatureChange used calculate soil temperature gradients (ºC/m) temporal temperature change (ºC/s) given soil layer texture water content (possibly including heat flux ).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_thermodynamics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil thermodynamic functions — soil_thermodynamics","text":"","code":"soil_thermalCapacity(soil, model = \"SX\")  soil_thermalConductivity(soil, model = \"SX\")  soil_temperatureGradient(widths, Temp)  soil_temperatureChange(   widths,   Temp,   sand,   clay,   W,   Theta_SAT,   Theta_FC,   Gdown,   tstep )"},{"path":"https://emf-creaf.github.io/medfate/reference/soil_thermodynamics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Soil thermodynamic functions — soil_thermodynamics","text":"soil Soil object (returned function soil). model Either 'SX' 'VG' Saxton's Van Genuchten's pedotransfer models. widths Width soil layers (mm). Temp Temperature (ºC) soil layer. sand Percentage sand (percent weight) layer. clay Percentage clay (percent weight) layer. W Soil moisture (percent field capacity) layer. Theta_SAT Relative water content (percent volume) saturation layer. Theta_FC Relative water content (percent volume) field capacity layer. Gdown Downward heat flux canopy soil (W·m-2). tstep Time step (interval) seconds.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_thermodynamics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Soil thermodynamic functions — soil_thermodynamics","text":"Function soil_thermalConductivity returns vector values thermal conductivity (W/m/ºK) soil layer. Function soil_thermalCapacity returns vector values heat storage capacity (J/m3/ºK) soil layer. Function soil_temperatureGradient returns vector values temperature gradient consecutive soil layers. Function soil_temperatureChange returns vector values instantaneous temperature change (ºC/s) soil layer.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_thermodynamics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Soil thermodynamic functions — soil_thermodynamics","text":"Cox, P.M., Betts, R.., Bunton, C.B., Essery, R.L.H., Rowntree, P.R., Smith, J. 1999. impact new land surface physics GCM simulation climate climate sensitivity. Climate Dynamics 15: 183–203. Dharssi, ., Vidale, P.L., Verhoef, ., MacPherson, B., Jones, C., Best, M. 2009. New soil physical properties implemented Unified Model PS18. 9–12.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/soil_thermodynamics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Soil thermodynamic functions — soil_thermodynamics","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/soil_thermodynamics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil thermodynamic functions — soil_thermodynamics","text":"","code":"#Define soil and complete parameters examplesoil = soil(defaultSoilParams(4))  soil_thermalConductivity(examplesoil) #> [1] 2.2 2.2 2.2 2.2 soil_thermalCapacity(examplesoil) #> [1] 2486214 2486214 2486214 2486214  #Values change when altering water content (drier layers have lower conductivity and capacity) examplesoil$W = c(0.1, 0.4, 0.7, 1.0) soil_thermalConductivity(examplesoil) #> [1] 0.4266171 1.4943000 1.9252995 2.2000000 soil_thermalCapacity(examplesoil) #> [1] 1342121 1723486 2104850 2486214"},{"path":"https://emf-creaf.github.io/medfate/reference/species_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Species description functions — species_values","title":"Species description functions — species_values","text":"Functions calculate attributes forest object species extract species parameters species parameter table (SpParamsMED).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/species_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species description functions — species_values","text":"","code":"species_basalArea(x, SpParams)  species_cover(x, SpParams)  species_density(x, SpParams)  species_foliarBiomass(x, SpParams, gdd = NA_real_)  species_fuelLoading(x, SpParams, gdd = NA_real_, includeDead = TRUE)  species_LAI(x, SpParams, gdd = NA_real_, bounded = TRUE)  species_characterParameter(species, SpParams, parName)  species_parameter(   species,   SpParams,   parName,   fillMissing = TRUE,   fillWithGenus = TRUE )"},{"path":"https://emf-creaf.github.io/medfate/reference/species_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species description functions — species_values","text":"x object class forest. SpParams data frame species parameters (see SpParamsMED). gdd Growth degree days (account leaf phenology effects). includeDead flag indicate standing dead fuels (dead branches) included. bounded boolean flag indicate extreme values prevented (maximum tree LAI = 7 maximum shrub LAI = 3) species character vector species names. parName string parameter name. fillMissing boolean flag try imputation missing values. fillWithGenus boolean flag try imputation missing values using genus values.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/species_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species description functions — species_values","text":"vector values species SpParams: species_basalArea: Species basal area (m2/ha). species_cover: Shrub cover (percent). species_density: Plant density (ind/ha). Tree density directly taken forest object, shrub density estimated cover height calculating area single individual. species_foliarBiomass: Standing biomass leaves (kg/m2). species_fuel: Fine fuel load (kg/m2). species_LAI: Leaf area index (m2/m2). species_phytovolume: Shrub phytovolume (m3/m2). species_parameter: numeric vector parameter values input species. species_characterParameter: character vector parameter values input species.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/species_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Species description functions — species_values","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/species_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species description functions — species_values","text":"","code":"# Default species parameterization data(SpParamsMED)  # Load example plot data(exampleforest)  # Species basal area in the forest plot species_basalArea(exampleforest, SpParamsMED) #>  Pinus halepensis      Quercus ilex Quercus coccifera  #>         18.604547          6.428755          0.000000     # Value of parameter \"Psi_Extract\" for two species species_parameter(c(\"Pinus halepensis\", \"Quercus ilex\"), SpParamsMED, \"Psi_Extract\") #> [1] -0.9218219 -1.9726871"},{"path":"https://emf-creaf.github.io/medfate/reference/spwb.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil-plant water balance — spwb","title":"Soil-plant water balance — spwb","text":"Function spwb() water balance model determines changes soil moisture, soil water potentials, plant transpiration drought stress daily steps given forest stand period specified input climatic data. Function pwb() performs plant water balance (.e. soil moisture dynamics input) daily steps given forest stand period specified input climatic data. simulation functions plant transpiration photosynthesis processes conducted different level detail depending transpiration mode.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil-plant water balance — spwb","text":"","code":"spwb(   x,   meteo,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   CO2ByYear = numeric(0),   waterTableDepth = NA_real_ )  pwb(   x,   meteo,   W,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   canopyEvaporation = numeric(0),   snowMelt = numeric(0),   soilEvaporation = numeric(0),   herbTranspiration = numeric(0),   CO2ByYear = numeric(0) )"},{"path":"https://emf-creaf.github.io/medfate/reference/spwb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Soil-plant water balance — spwb","text":"x object class spwbInput. meteo data frame daily meteorological data series. Row names data frame correspond date strings format \"yyyy-mm-dd\" (see Date). Alternatively, column called \"dates\" \"Dates\" can contain Date POSIXct classes. following columns required missing values: MinTemperature: Minimum temperature (degrees Celsius). MaxTemperature: Maximum temperature (degrees Celsius). Precipitation: Precipitation (mm). following columns required can contain missing values (NOTE: missing values raise warnings): MinRelativeHumidity: Minimum relative humidity (percent). MaxRelativeHumidity: Maximum relative humidity (percent). Radiation: Solar radiation (MJ/m2/day). following columns optional: WindSpeed: -canopy wind speed (m/s). column may exist, can left NA values. cases simulations assume constant value specified defaultControl. CO2: Atmospheric (-canopy) CO2 concentration (ppm). column may exist, can left NA values. cases simulations assume constant value specified defaultControl. Patm: Atmospheric pressure (kPa). column may exist, can left NA values. cases, value estimated elevation. latitude Latitude (degrees). elevation, slope, aspect Elevation sea level (m), slope (degrees) aspect (degrees North). CO2ByYear named numeric vector years names atmospheric CO2 concentration (ppm) values. Used specify annual changes CO2 concentration along simulation (alternative specifying daily values meteo). waterTableDepth Water table depth (mm). missing, capillarity rise allowed lower total soil depth. W matrix number rows meteo many columns soil layers, containing soil moisture layer proportion field capacity. canopyEvaporation vector daily canopy evaporation (interception) values (mm). length match number rows meteo. snowMelt vector daily snow melt values (mm). length match number rows meteo. soilEvaporation vector daily bare soil evaporation values (mm). length match number rows meteo. herbTranspiration vector daily herbaceous transpiration values (mm). length match number rows meteo.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Soil-plant water balance — spwb","text":"Function spwb returns list class 'spwb' whereas function pwb returns list class 'pwb'. many elements common lists, listed together: \"latitude\": Latitude (degrees) given input. \"topography\": Vector elevation, slope aspect given input. \"weather\": copy input weather data frame. \"spwbInput\": copy object x class spwbInput given input. \"spwbOutput\": copy final state object x class spwbInput. \"WaterBalance\": data frame different variables (columns) given simulated day (rows): \"PET\": Potential evapotranspiration (mm). \"Precipitation\": Input precipitation (mm). \"Rain\": Precipitation rainfall (mm). \"Snow\": Precipitation snowfall (mm). \"NetRain\": Net rain, accounting interception (mm). \"Infiltration\": amount water infiltrating soil (mm). \"InfiltrationExcess\": Excess infiltration topmost layer leading increase runoff (mm). \"SaturationExcess\": Excess saturation topmost layer leading increase runoff (mm). \"CapillarityRise\": Water entering soil via capillarity rise (mm) water table, waterTableDepth supplied. \"Runoff\": amount water exported via surface runoff (mm). \"DeepDrainage\": amount water exported via deep drainage (mm). \"Evapotranspiration\": Evapotranspiration (mm). \"SoilEvaporation\": Bare soil evaporation (mm). \"HerbTranspiration\": Transpiration due herbaceous layer (mm). \"PlantExtraction\": Amount water extracted soil woody plants (mm). \"Transpiration\": Woody plant transpiration (mm). \"HydraulicRedistribution\": Water redistributed among soil layers, transported plant hydraulic network. \"EnergyBalance\": data frame daily values energy balance components soil canopy (transpirationMode = \"Sperry\" transpirationMode = \"Sureau\"). \"Temperature\": data frame daily values minimum/mean/maximum temperatures atmosphere (input), canopy soil (transpirationMode = \"Sperry\" transpirationMode = \"Sureau\"). \"Soil\": list following subelements: \"SWC\": Soil water content (percent soil volume) soil layer (overall). \"RWC\": Relative soil moisture content (relative field capacity) soil layer (overall). \"REW\": Relative extractable water (min. psi = -5 MPa) soil layer (overall). \"ML\": Soil water volume soil layer (L/m2) (overall). \"Psi\": Soil water potential soil layer (MPa) (overall). \"PlantExt\": Plant extraction soil layer (mm) (overall). \"HydraulicInput\": Water entered layer coming layers transported via plant hydraulic network (mm) (overall). \"Snow\": data frame following variable (columns) given simulated day (rows): \"SWE\": Snow water equivalent (mm) snow pack. \"Stand\": data frame different variables (columns) given simulated day (rows): \"LAI\": LAI stand (including herbaceous layer live + dead leaves woody plants) (m2/m2). \"LAIherb\": LAI herbaceous layer (m2/m2). \"LAIlive\": LAI woody plants assuming leaves unfolded (m2/m2). \"LAIexpanded\": LAI woody plants leaves actually unfolded (m2/m2). \"LAIdead\": LAI woody plants corresponding dead leaves (m2/m2). \"Cm\": Water retention capacity canopy (mm) (accounting leaf phenology). \"LgroundPAR\": percentage PAR reaches ground (accounting leaf phenology). \"LgroundSWR\": percentage SWR reaches ground (accounting leaf phenology). \"Plants\": list daily results plant cohorts (see ). \"subdaily\": list objects class spwb_day, one per day simulated (required control parameters, see defaultControl). transpirationMode = \"Granier\", element \"Plants\" list following subelements: \"LAI\": data frame daily leaf area index plant cohort. \"LAIlive\": data frame daily leaf area index plant cohort, assuming leaves unfolded (m2/m2). \"FPAR\": data frame fraction PAR canopy level plant cohort. \"AbsorbedSWRFraction\": data frame fraction SWR absorbed plant cohort. \"Transpiration\": data frame amount daily transpiration (mm) plant cohort. \"GrossPhotosynthesis\": data frame amount daily gross photosynthesis (g C·m-2) plant cohort. \"PlantPsi\": data frame average daily water potential plant (MPa). \"LeafPLC\": data frame average daily proportion leaf conductance loss plant ([0-1]). \"StemPLC\": data frame average daily proportion stem conductance loss plant ([0-1]). \"PlantWaterBalance\": data frame daily balance transpiration soil water extraction plant cohort. \"LeafRWC\": data frame average daily leaf relative water content plant (percent). \"StemRWC\": data frame average daily stem relative water content plant (percent). \"LFMC\": data frame daily live fuel moisture content (percent dry weight). \"PlantStress\": data frame amount daily stress [0-1] suffered plant cohort (relative whole-plant conductance). transpirationMode=\"Sperry\" transpirationMode=\"Sureau\", element \"Plants\" list following subelements: \"LAI\": data frame daily leaf area index plant cohort. \"AbsorbedSWR\": data frame daily SWR absorbed plant cohort. \"NetLWR\": data frame daily net LWR plant cohort. \"Transpiration\": data frame amount daily transpiration (mm) plant cohorts. \"GrossPhotosynthesis\": data frame amount daily gross photosynthesis (g C·m-2) plant cohort. \"NetPhotosynthesis\": data frame amount daily net photosynthesis (g C·m-2) plant cohort. \"dEdP\": data frame mean daily values soil-plant conductance (derivative supply function) plant cohort. \"PlantWaterBalance\": data frame daily balance transpiration soil water extraction plant cohort. \"SunlitLeaves\" \"ShadeLeaves\": list daily results sunlit shade leaves: \"PsiMin\": data frame minimum (midday) daily sunlit shade leaf water potential (MPa). \"PsiMax\": data frame maximum (predawn) daily sunlit shade leaf water potential (MPa). \"LeafPsiMin\": data frame minimum (midday) daily (average) leaf water potential plant (MPa). \"LeafPsiMax\": data frame maximum (predawn) daily (average) leaf water potential plant (MPa). \"LeafRWC\": data frame average daily leaf relative water content plant (percent). \"StemRWC\": data frame average daily stem relative water content plant (percent). \"LFMC\": data frame daily live fuel moisture content (percent dry weight). \"StemPsi\": data frame minimum daily stem water potential plant (MPa). \"LeafPLC\": data frame average daily proportion leaf conductance loss plant ([0-1]). \"StemPLC\": data frame average daily proportion stem conductance loss plant ([0-1]). \"RootPsi\": data frame minimum daily root water potential plant (MPa). \"RhizoPsi\": list data frames (one per plant cohort) minimum daily root water potential plant (MPa). \"PlantStress\": data frame amount daily stress [0-1] suffered plant cohort (relative whole-plant conductance).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil-plant water balance — spwb","text":"simulation functions allow using three different sub-models transpiration photosynthesis: sub-model corresponding 'Granier' transpiration mode illustrated function transp_transpirationGranier described De Caceres et al. (2015),   implements approach originally described Granier et al. (1999). sub-model corresponding 'Sperry' transpiration mode illustrated function transp_transpirationSperry described De Caceres et al. (2021),   implements modelling approach originally described Sperry et al. (2017). sub-model corresponding 'Sureau' transpiration mode illustrated function transp_transpirationSureau described model SurEau-Ecos v2.0 Ruffault et al. (2022). Simulations using 'Sperry' 'Sureau' transpiration mode computationally much expensive 'Granier'.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Soil-plant water balance — spwb","text":"De Cáceres M, Martínez-Vilalta J, Coll L, Llorens P, Casals P, Poyatos R, Pausas JG, Brotons L. (2015) Coupling water balance model forest inventory data predict drought stress: role forest structural changes vs. climate changes. Agricultural Forest Meteorology 213: 77-90 (doi:10.1016/j.agrformet.2015.06.012). De Cáceres M, Mencuccini M, Martin-StPaul N, Limousin JM, Coll L, Poyatos R, Cabon , Granda V, Forner , Valladares F, Martínez-Vilalta J (2021) Unravelling effect species mixing water use drought stress holm oak forests: modelling approach. Agricultural Forest Meteorology 296 (doi:10.1016/j.agrformet.2020.108233). Granier , Bréda N, Biron P, Villette S (1999) lumped water balance model evaluate duration intensity drought constraints forest stands. Ecol Modell 116:269–283. https://doi.org/10.1016/S0304-3800(98)00205-1. Ruffault J, Pimont F, Cochard H, Dupuy JL, Martin-StPaul N (2022) SurEau-Ecos v2.0: trait-based plant hydraulics model simulations plant water status drought-induced mortality ecosystem level. Geoscientific Model Development 15, 5593-5626 (doi:10.5194/gmd-15-5593-2022). Sperry, J. S., M. D. Venturas, W. R. L. Anderegg, M. Mencuccini, D. S. Mackay, Y. Wang, D. M. Love. 2017. Predicting stomatal responses environment optimization photosynthetic gain hydraulic cost. Plant Cell Environment 40, 816-830 (doi: 10.1111/pce.12852).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/spwb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Soil-plant water balance — spwb","text":"Miquel De Cáceres Ainsa, CREAF Nicolas Martin-StPaul, URFM-INRAE","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil-plant water balance — spwb","text":"","code":"# \\donttest{ #Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Initialize input x1 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  #Call simulation function S1 <- spwb(x1, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant water content (mm): 4.73001 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  [Year 2001]:............ #>  #> Final plant water content (mm): 4.7285 #> Final soil water content (mm): 274.723 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): -0.00151775 #> Plant water balance result (mm): -0.00151775 #> Change in soil water content (mm): -16.1521 #> Soil water balance result (mm): -16.1521 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): -7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 370 #>   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 26  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 249 #>   Plant extraction from soil (mm) 249  Plant water balance (mm) -0 Hydraulic redistribution (mm) 5 #>   Runoff (mm) 21 Deep drainage (mm) 128  #Switch to 'Sperry' transpiration mode control <- defaultControl(\"Sperry\")  #Initialize input x2 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  #Call simulation function S2 <- spwb(x2, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant water content (mm): 6.78662 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  [Year 2001]:............ #>  #> Final plant water content (mm): 6.78164 #> Final soil water content (mm): 273.973 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): -0.00497874 #> Plant water balance result (mm): -5.66285e-16 #> Change in soil water content (mm): -16.902 #> Soil water balance result (mm): -16.902 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): -7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 370 #>   Infiltration (mm) 402 Infiltration excess (mm) 19 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 22  Herbaceous transpiration (mm) 13 Woody plant transpiration (mm) 242 #>   Plant extraction from soil (mm) 242  Plant water balance (mm) -0 Hydraulic redistribution (mm) 4 #>   Runoff (mm) 19 Deep drainage (mm) 141  #Switch to 'Sureau' transpiration mode control <- defaultControl(\"Sureau\")  #Initialize input x3 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  #Call simulation function S3 <- spwb(x3, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant water content (mm): 6.78662 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  [Year 2001]:............ #>  #> Final plant water content (mm): 6.76095 #> Final soil water content (mm): 278.112 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): -0.0256733 #> Plant water balance result (mm): -0.109502 #> Change in soil water content (mm): -12.7633 #> Soil water balance result (mm): -12.7633 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): -7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 370 #>   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 30  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 189 #>   Plant extraction from soil (mm) 188  Plant water balance (mm) -0 Hydraulic redistribution (mm) 0 #>   Runoff (mm) 21 Deep drainage (mm) 181 # }"},{"path":"https://emf-creaf.github.io/medfate/reference/spwb_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Single-day simulation — growth_day","title":"Single-day simulation — growth_day","text":"Function spwb_day performs water balance single day growth_day performs water carbon balance single day.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single-day simulation — growth_day","text":"","code":"growth_day(   x,   date,   meteovec,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   runon = 0,   lateralFlows = NULL,   waterTableDepth = NA_real_,   modifyInput = TRUE )  spwb_day(   x,   date,   meteovec,   latitude,   elevation,   slope = NA_real_,   aspect = NA_real_,   runon = 0,   lateralFlows = NULL,   waterTableDepth = NA_real_,   modifyInput = TRUE )"},{"path":"https://emf-creaf.github.io/medfate/reference/spwb_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single-day simulation — growth_day","text":"x object class spwbInput growthInput. date Date string \"yyyy-mm-dd\". meteovec named numerical vector weather data. See variable names parameter meteo spwb. latitude Latitude (degrees). elevation, slope, aspect Elevation sea level (m), slope (degrees) aspect (degrees North). runon Surface water amount running target area upslope (mm). lateralFlows Lateral source/sink terms soil layer (interflow/adjacent locations) mm/day. waterTableDepth Water table depth (mm). missing, capillarity rise allowed lower total soil depth. modifyInput Boolean flag indicate input x object allowed modified simulation.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single-day simulation — growth_day","text":"Function spwb_day() returns list class spwb_day following elements: \"cohorts\": data frame cohort information, copied spwbInput. \"topography\": Vector elevation, slope aspect given input. \"weather\": vector input weather. \"WaterBalance\": vector water balance components (rain, snow, net rain, infiltration, ...) simulated day, equivalent one row 'WaterBalance' object given spwb. \"Soil\": data frame results soil layer: \"Psi\": Soil water potential (MPa) end day. \"HerbTranspiration\": Water extracted herbaceous plants soil layer (mm). \"HydraulicInput\": Water entering soil layer layers, transported via plant roots (mm). \"HydraulicOutput\": Water leaving soil layer (going layers transpiration stream) (mm). \"PlantExtraction\": Water extracted woody plants soil layer (mm). \"Stand\": named vector stand values simulated day, equivalent one row 'Stand' object returned spwb. \"Plants\": data frame results plant cohort (see transp_transpirationGranier transp_transpirationSperry). following items returned transpirationMode = \"Sperry\"  transpirationMode = \"Sureau\": \"EnergyBalance\": Energy balance stand (see transp_transpirationSperry). \"RhizoPsi\": Minimum water potential (MPa) inside roots, crossing rhizosphere, per cohort soil layer. \"SunlitLeaves\" \"ShadeLeaves\": leaf type, data frame values LAI, Vmax298 Jmax298 leaves type plant cohort. \"ExtractionInst\": Water extracted plant cohort time step. \"PlantsInst\": list instantaneous (per time step) results plant cohort (see transp_transpirationSperry). \"LightExtinction\": list information regarding radiation balance canopy, returned function light_instantaneousLightExtinctionAbsortion. \"CanopyTurbulence\": Canopy turbulence (see wind_canopyTurbulence).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb_day.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single-day simulation — growth_day","text":"simulation functions allow using three different sub-models transpiration photosynthesis: sub-model corresponding 'Granier' transpiration mode illustrated function transp_transpirationGranier described De Caceres et al. (2015),   implements approach originally described Granier et al. (1999). sub-model corresponding 'Sperry' transpiration mode illustrated function transp_transpirationSperry described De Caceres et al. (2021),   implements modelling approach originally described Sperry et al. (2017). sub-model corresponding 'Sureau' transpiration mode illustrated function transp_transpirationSureau described model SurEau-Ecos v2.0 Ruffault et al. (2022). Simulations using 'Sperry' 'Sureau' transpiration mode computationally much expensive 'Granier'.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb_day.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Single-day simulation — growth_day","text":"De Cáceres M, Martínez-Vilalta J, Coll L, Llorens P, Casals P, Poyatos R, Pausas JG, Brotons L. (2015) Coupling water balance model forest inventory data predict drought stress: role forest structural changes vs. climate changes. Agricultural Forest Meteorology 213: 77-90 (doi:10.1016/j.agrformet.2015.06.012). De Cáceres M, Mencuccini M, Martin-StPaul N, Limousin JM, Coll L, Poyatos R, Cabon , Granda V, Forner , Valladares F, Martínez-Vilalta J (2021) Unravelling effect species mixing water use drought stress holm oak forests: modelling approach. Agricultural Forest Meteorology 296 (doi:10.1016/j.agrformet.2020.108233). Granier , Bréda N, Biron P, Villette S (1999) lumped water balance model evaluate duration intensity drought constraints forest stands. Ecol Modell 116:269–283. https://doi.org/10.1016/S0304-3800(98)00205-1. Ruffault J, Pimont F, Cochard H, Dupuy JL, Martin-StPaul N (2022) SurEau-Ecos v2.0: trait-based plant hydraulics model simulations plant water status drought-induced mortality ecosystem level. Geoscientific Model Development 15, 5593-5626 (doi:10.5194/gmd-15-5593-2022). Sperry, J. S., M. D. Venturas, W. R. L. Anderegg, M. Mencuccini, D. S. Mackay, Y. Wang, D. M. Love. 2017. Predicting stomatal responses environment optimization photosynthetic gain hydraulic cost. Plant Cell Environment 40, 816-830 (doi: 10.1111/pce.12852).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/spwb_day.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Single-day simulation — growth_day","text":"Miquel De Cáceres Ainsa, CREAF Nicolas Martin-StPaul, URFM-INRAE","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/spwb_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single-day simulation — growth_day","text":"","code":"#Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil parameters examplesoil <- defaultSoilParams(4)  # Day to be simulated d <- 100 meteovec <- unlist(examplemeteo[d,-1]) date <- as.character(examplemeteo$dates[d])  #Simulate water balance one day only (Granier mode) control <- defaultControl(\"Granier\") x1 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control) sd1 <- spwb_day(x1, date, meteovec,                   latitude = 41.82592, elevation = 100, slope=0, aspect=0)   #Simulate water balance for one day only (Sperry mode) control <- defaultControl(\"Sperry\") x2 <- spwbInput(exampleforest, examplesoil, SpParamsMED, control) sd2 <-spwb_day(x2, date, meteovec,               latitude = 41.82592, elevation = 100, slope=0, aspect=0)  #Simulate water balance for one day only (Sureau mode) control <- defaultControl(\"Sureau\") x3 <- spwbInput(exampleforest, examplesoil, SpParamsMED, control) sd3 <-spwb_day(x3, date, meteovec,               latitude = 41.82592, elevation = 100, slope=0, aspect=0)   #Simulate water and carbon balance for one day only (Granier mode) control <- defaultControl(\"Granier\") x4  <- growthInput(exampleforest,examplesoil, SpParamsMED, control) sd4 <- growth_day(x4, date, meteovec,                 latitude = 41.82592, elevation = 100, slope=0, aspect=0)  #Simulate water and carbon balance for one day only (Sperry mode) control <- defaultControl(\"Sperry\") x5  <- growthInput(exampleforest,examplesoil, SpParamsMED, control) sd5 <- growth_day(x5, date, meteovec,                 latitude = 41.82592, elevation = 100, slope=0, aspect=0)  #Simulate water and carbon balance for one day only (Sureau mode) control <- defaultControl(\"Sureau\") x6  <- growthInput(exampleforest,examplesoil, SpParamsMED, control) sd6 <- growth_day(x6, date, meteovec,                 latitude = 41.82592, elevation = 100, slope=0, aspect=0)"},{"path":"https://emf-creaf.github.io/medfate/reference/stand_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Stand values — stand_basalArea","title":"Stand values — stand_basalArea","text":"Functions calculate stand attributes forest object.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/stand_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stand values — stand_basalArea","text":"","code":"stand_basalArea(x, minDBH = 7.5)  stand_foliarBiomass(x, SpParams, gdd = NA_real_)  stand_fuelLoading(x, SpParams, gdd = NA_real_, includeDead = TRUE)  stand_shrubVolume(x, SpParams)  stand_LAI(x, SpParams, gdd = NA_real_, bounded = TRUE)  stand_dominantTreeDiameter(x, minDBH = 7.5)  stand_treeDensity(x, minDBH = 7.5)  stand_meanTreeHeight(x, minDBH = 7.5)  stand_dominantTreeHeight(x, minDBH = 7.5)  stand_hartBeckingIndex(x, minDBH = 7.5)  stand_quadraticMeanTreeDiameter(x, minDBH = 7.5)  stand_dominantTreeSpecies(x, SpParams)"},{"path":"https://emf-creaf.github.io/medfate/reference/stand_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stand values — stand_basalArea","text":"x object class forest. minDBH Minimum diameter breast height (cm) include estimation. SpParams data frame species parameters (see SpParamsMED). gdd Growth degree days (account leaf phenology effects). includeDead flag indicate standing dead fuels (dead branches) included. bounded boolean flag indicate extreme values prevented (maximum tree LAI = 7 maximum shrub LAI = 3)","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/stand_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stand values — stand_basalArea","text":"stand_basalArea: Stand basal area (m2/ha). stand_treeDensity: Stand tree density (ind/ha). stand_dominantTreeDiameter: Dominant tree diameter, .e average diameter 100 widest trees (cm). stand_quadraticMeanTreeDiameter: Quadratic mean tree diameter, .e. diameter value corresponding current basal area density. stand_meanTreeHeight: Mean tree height (cm). stand_dominantTreeHeight: Dominant tree height, .e average height 100 tallest trees (cm). stand_dominantTreeSpecies: Dominant tree species name, determined terms basal area (considering tree sizes). stand_hartBeckingIndex: Hart-Becking index. stand_foliarBiomass: Standing biomass leaves (kg/m2). stand_fuel: Stand fine fuel load (kg/m2). stand_LAI: Stand leaf area index (m2/m2). stand_shrubVolume: Stand shrub phytovolume (m3/m2).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/stand_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stand values — stand_basalArea","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/stand_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stand values — stand_basalArea","text":"","code":"#Default species parameterization data(SpParamsMED)    #Load example plot data(exampleforest)      #A short way to obtain total basal area stand_basalArea(exampleforest) #> [1] 25.0333"},{"path":"https://emf-creaf.github.io/medfate/reference/summary.forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of forest structure — summary.forest","title":"Summary of forest structure — summary.forest","text":"Displays summary forest structure","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/summary.forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of forest structure — summary.forest","text":"","code":"# S3 method for class 'forest' summary(object, SpParams, ...)  # S3 method for class 'summary.forest' print(x, digits = getOption(\"digits\"), ...)"},{"path":"https://emf-creaf.github.io/medfate/reference/summary.forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of forest structure — summary.forest","text":"object object class forest SpParams data frame species parameters (see SpParamsMED). ... Additional parameters functions summary print. x object returned summary.forest. digits Minimal number significant digits.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/summary.forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of forest structure — summary.forest","text":"Function summary.forest returns list several structural attributes, basal area LAI forest.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/summary.forest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary of forest structure — summary.forest","text":"Function summary.forest can used summarize forest object console.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/summary.forest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of forest structure — summary.forest","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/summary.forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of forest structure — summary.forest","text":"","code":"# Summary of example forest summary(exampleforest, SpParamsMED) #> Tree BA (m2/ha): 25.0333016  adult trees: 25.0333016  saplings: 0  #> Density (ind/ha) adult trees: 552  saplings: 0  shrubs (estimated): 749.4923076  #> Cover (%) adult trees: 100  saplings: 0  shrubs: 3.75  herbs: 10  #> LAI (m2/m2) total: 1.7585845  adult trees: 1.5543216  saplings: 0  shrubs: 0.030626  herbs: 0.1736369  #> Fuel loading (kg/m2) total: 0.5588728  adult trees: 0.5255004  saplings: 0  shrubs: 0.0140795  herbs: 0.019293  #> PAR ground (%): NA  SWR ground (%): NA"},{"path":"https://emf-creaf.github.io/medfate/reference/summary.spwb.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize simulation results — summary.spwb","title":"Summarize simulation results — summary.spwb","text":"Function summary summarizes model's output different temporal steps (.e. weekly, annual, ...).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/summary.spwb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize simulation results — summary.spwb","text":"","code":"# S3 method for class 'spwb' summary(   object,   freq = \"years\",   output = \"WaterBalance\",   FUN = sum,   bySpecies = FALSE,   months = NULL,   ... )  # S3 method for class 'pwb' summary(   object,   freq = \"years\",   output = \"WaterBalance\",   FUN = sum,   bySpecies = FALSE,   months = NULL,   ... )  # S3 method for class 'growth' summary(   object,   freq = \"years\",   output = \"WaterBalance\",   FUN = sum,   bySpecies = FALSE,   months = NULL,   ... )  # S3 method for class 'fordyn' summary(   object,   freq = \"years\",   output = \"WaterBalance\",   FUN = sum,   bySpecies = FALSE,   months = NULL,   ... )"},{"path":"https://emf-creaf.github.io/medfate/reference/summary.spwb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize simulation results — summary.spwb","text":"object object class spwb, pwb, growth fordyn. freq Frequency summary statistics (see cut.Date). output data table summarized. Accepted values path data tables object, 'WaterBalance', 'Soil', 'Stand' 'Plants$LAI'. also possible use strings like 'Transpiration' function interpret 'Plants$Transpiration'. FUN function summarize results (e.g., sum, mean, ...) bySpecies Allows aggregating output species calculating summaries (effect values output). Aggregation can involve sum (plant lai transpiration) LAI-weighted mean (plant stress plant water potential). months vector month numbers (1 12) subset season summaries apply. ... Additional parameters function summary.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/summary.spwb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize simulation results — summary.spwb","text":"matrix dates row names desired summaries columns","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/summary.spwb.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Summarize simulation results — summary.spwb","text":"applied fordyn objects, summary function can used gather results different yearly steps single table keeping daily resolution (.e. using freq = \"days\".","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/summary.spwb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize simulation results — summary.spwb","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/summary.spwb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize simulation results — summary.spwb","text":"","code":"# \\donttest{ #Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Initialize input x <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  #Call simulation function S1<-spwb(x, examplemeteo, latitude = 41.82592, elevation = 100) #> Initial plant water content (mm): 4.73001 #> Initial soil water content (mm): 290.875 #> Initial snowpack content (mm): 0 #> Performing daily simulations #>  #>  [Year 2001]:............ #>  #> Final plant water content (mm): 4.7285 #> Final soil water content (mm): 274.723 #> Final snowpack content (mm): 0 #> Change in plant water content (mm): -0.00151775 #> Plant water balance result (mm): -0.00151775 #> Change in soil water content (mm): -16.1521 #> Soil water balance result (mm): -16.1521 #> Change in snowpack water content (mm): 0 #> Snowpack water balance result (mm): -7.10543e-15 #> Water balance components: #>   Precipitation (mm) 513 Rain (mm) 462 Snow (mm) 51 #>   Interception (mm) 92 Net rainfall (mm) 370 #>   Infiltration (mm) 400 Infiltration excess (mm) 21 Saturation excess (mm) 0 Capillarity rise (mm) 0 #>   Soil evaporation (mm) 26  Herbaceous transpiration (mm) 14 Woody plant transpiration (mm) 249 #>   Plant extraction from soil (mm) 249  Plant water balance (mm) -0 Hydraulic redistribution (mm) 5 #>   Runoff (mm) 21 Deep drainage (mm) 128  #Queries the tables in 'Soil' names(S1$Soil) #> [1] \"SWC\"            \"RWC\"            \"REW\"            \"ML\"             #> [5] \"Psi\"            \"PlantExt\"       \"HydraulicInput\"  #Monthly summary (averages) of soil relative water content summary(S1, freq=\"months\",FUN=mean, output=\"RWC\") #>                    1         2         3         4   Overall #> 2001-01-01 0.9937304 0.9994008 0.9997788 1.0244248 1.0007769 #> 2001-02-01 0.9423965 0.9861124 0.9943597 0.9914261 0.9785677 #> 2001-03-01 0.9583998 0.9914674 1.0000150 1.0446498 0.9914829 #> 2001-04-01 0.8806847 0.9512837 0.9773734 0.9684922 0.9433238 #> 2001-05-01 0.9005826 0.9670081 0.9744642 0.9570583 0.9523449 #> 2001-06-01 0.7172931 0.8395073 0.9166568 0.9016920 0.8374319 #> 2001-07-01 0.9173939 0.9160650 0.8687492 0.8540340 0.8975930 #> 2001-08-01 0.9142114 0.9657525 0.9204613 0.8950861 0.9345169 #> 2001-09-01 0.9269493 0.9749139 0.9861720 0.9678313 0.9658662 #> 2001-10-01 0.9533352 0.9845780 0.9833501 0.9905773 0.9775606 #> 2001-11-01 0.9515680 0.9873851 1.0003348 1.0852800 0.9925602 #> 2001-12-01 0.8988802 0.9739989 0.9915305 0.9875471 0.9623698  #Queries the tables in 'Plants' names(S1$Plants) #>  [1] \"LAI\"                 \"LAIlive\"             \"FPAR\"                #>  [4] \"AbsorbedSWRFraction\" \"Transpiration\"       \"GrossPhotosynthesis\" #>  [7] \"PlantPsi\"            \"LeafPLC\"             \"StemPLC\"             #> [10] \"PlantWaterBalance\"   \"LeafRWC\"             \"StemRWC\"             #> [13] \"LFMC\"                \"PlantStress\"          #Monthly summary (averages) of plant stress summary(S1, freq=\"months\",FUN=mean, output=\"PlantStress\",          bySpecies = TRUE) #>            Pinus halepensis Quercus coccifera Quercus ilex #> 2001-01-01      0.004773280       0.003160206  0.006381122 #> 2001-02-01      0.006705762       0.004059289  0.007649057 #> 2001-03-01      0.006241447       0.003834123  0.007320306 #> 2001-04-01      0.010550415       0.005819370  0.010187824 #> 2001-05-01      0.009599211       0.005341480  0.009424160 #> 2001-06-01      0.037076275       0.016427375  0.023913153 #> 2001-07-01      0.012835893       0.007043919  0.012459017 #> 2001-08-01      0.008878109       0.005121251  0.009235359 #> 2001-09-01      0.007878910       0.004608889  0.008458217 #> 2001-10-01      0.006250142       0.003881840  0.007456718 #> 2001-11-01      0.006570576       0.003988078  0.007550018 #> 2001-12-01      0.008947174       0.005057706  0.009012524 # }"},{"path":"https://emf-creaf.github.io/medfate/reference/sureau_ecos.html","id":null,"dir":"Reference","previous_headings":"","what":"Sureau-ECOS inner functions for testing only — sureau_ecos","title":"Sureau-ECOS inner functions for testing only — sureau_ecos","text":"Function initSureauNetworks initializes hydraulic networks plant cohorts x Function semi_implicit_integration updates water potentials cavitation across hydraulic network","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/sureau_ecos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sureau-ECOS inner functions for testing only — sureau_ecos","text":"","code":"initSureauNetworks(x)  semi_implicit_integration(   network,   dt,   opt,   stemCavitationRecovery = \"annual\",   leafCavitationRecovery = \"total\" )"},{"path":"https://emf-creaf.github.io/medfate/reference/sureau_ecos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sureau-ECOS inner functions for testing only — sureau_ecos","text":"x object class spwbInput growthInput created using transpirationMode = \"Sureau\". network hydraulic network element list returned initSureauNetworks dt Smallest time step (seconds) opt Option flag vector stemCavitationRecovery, leafCavitationRecovery string indicating refilling embolized conduits done: \"none\" - refilling. \"annual\" - every first day year. \"rate\" - following rate new sapwood formation. \"total\" - instantaneous complete refilling.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/sureau_ecos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sureau-ECOS inner functions for testing only — sureau_ecos","text":"Function initSureauNetworks returns vector length equal number cohorts. element list Sureau-ECOS parameters. Function semi_implicit_integration return anything, modifies input parameter network.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/sureau_ecos.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sureau-ECOS inner functions for testing only — sureau_ecos","text":"Ruffault J, Pimont F, Cochard H, Dupuy JL, Martin-StPaul N (2022) SurEau-Ecos v2.0: trait-based plant hydraulics model simulations plant water status drought-induced mortality ecosystem level. Geoscientific Model Development 15, 5593-5626 (doi:10.5194/gmd-15-5593-2022).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/sureau_ecos.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sureau-ECOS inner functions for testing only — sureau_ecos","text":"Miquel De Cáceres Ainsa, CREAF Nicolas Martin-StPaul, URFM-INRAE","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_maximumTranspirationModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum transpiration vs. LAI — transp_maximumTranspirationModel","title":"Maximum transpiration vs. LAI — transp_maximumTranspirationModel","text":"Builds model maximum transpiration (Tmax) potential evapotranspiration (PET) increasing leaf area index (LAI) values plant cohort.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_maximumTranspirationModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum transpiration vs. LAI — transp_maximumTranspirationModel","text":"","code":"transp_maximumTranspirationModel(   x,   meteo,   latitude,   elevation,   slope,   aspect,   LAI_seq = c(0.1, 0.25, seq(0.5, 10, by = 0.5)),   draw = TRUE )"},{"path":"https://emf-creaf.github.io/medfate/reference/transp_maximumTranspirationModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum transpiration vs. LAI — transp_maximumTranspirationModel","text":"x object class spwbInput, built using 'Sperry' transpiration mode. meteo data frame daily meteorological data series. latitude Latitude (degrees). elevation, slope, aspect Elevation sea level (m), slope (degrees) aspect (degrees North). LAI_seq Sequence stand LAI values tested. draw Logical flag indicate plotting results.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_maximumTranspirationModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum transpiration vs. LAI — transp_maximumTranspirationModel","text":"Returns list many elements plant cohorts, element glm model.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_maximumTranspirationModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maximum transpiration vs. LAI — transp_maximumTranspirationModel","text":"function performs meta-modelling exercise using Sperry transpiration model, aim estimate coefficients equation used Granier transpiration model (Granier et al. 1999). model fitted : y ~ *LAI + b*LAI^2, y ratio maximum transpiration (Tmax) Penman's potential evapotranspiration (PET) LAI stand LAI. Unlike original equation Granier et al. (1999), fit zero intercept model LAI = 0 translates zero plant transpiration. function fits model cohort separately, assuming represents whole stand. stand LAI value input sequence, function uses simulations Sperry transpiration input weather estimate y = Tmax/PET function stand's LAI (deciduous stands include leaf phenology). simulations conducted stand LAI value, function fits Generalized Linear Model equation, assuming Gamma distribution residuals identity link. coefficients model can used parametrize Granier's transpiration, since coefficients b equation correspond parameters Tmax_LAI Tmax_LAIsq, respectively (see SpParamsMED).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_maximumTranspirationModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maximum transpiration vs. LAI — transp_maximumTranspirationModel","text":"Granier , Bréda N, Biron P, Villette S (1999) lumped water balance model evaluate duration intensity drought constraints forest stands. Ecol Modell 116:269–283. https://doi.org/10.1016/S0304-3800(98)00205-1.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/transp_maximumTranspirationModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Maximum transpiration vs. LAI — transp_maximumTranspirationModel","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_maximumTranspirationModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum transpiration vs. LAI — transp_maximumTranspirationModel","text":"","code":"# \\donttest{ #Load example daily meteorological data data(examplemeteo)  # Load example plot plant data data(exampleforest)  # Load default species parameters data(SpParamsMED)  # Define soil with default soil params examplesoil <- defaultSoilParams(4)  # Initialize control parameters for 'Sperry' transpiration mode control <- defaultControl(transpirationMode=\"Sperry\")  # Initialize input x2 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  # Estimate maximum transpiration ratio models for each cohort # Weather is subset to speed-up results m <- transp_maximumTranspirationModel(x2, examplemeteo[1:10,],                                       41.82592, elevation = 100,                                       slope = 0, aspect = 0) #>    |                                                                               |                                                                      |   0%   |                                                                               |===                                                                   |   5%   |                                                                               |======                                                                |   9%   |                                                                               |==========                                                            |  14%   |                                                                               |=============                                                         |  18%   |                                                                               |================                                                      |  23%   |                                                                               |===================                                                   |  27%   |                                                                               |======================                                                |  32%   |                                                                               |=========================                                             |  36%   |                                                                               |=============================                                         |  41%   |                                                                               |================================                                      |  45%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================                                |  55%   |                                                                               |=========================================                             |  59%   |                                                                               |=============================================                         |  64%   |                                                                               |================================================                      |  68%   |                                                                               |===================================================                   |  73%   |                                                                               |======================================================                |  77%   |                                                                               |=========================================================             |  82%   |                                                                               |============================================================          |  86%   |                                                                               |================================================================      |  91%   |                                                                               |===================================================================   |  95%   |                                                                               |======================================================================| 100%   # Inspect the model for first cohort m[[1]] #>          LAI     I(LAI^2)  #>  0.154322708 -0.006449633  # }"},{"path":"https://emf-creaf.github.io/medfate/reference/transp_modes.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpiration modes — transp_transpirationSperry","title":"Transpiration modes — transp_transpirationSperry","text":"High-level sub-models representing transpiration, plant hydraulics, photosynthesis water relations within plants.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_modes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpiration modes — transp_transpirationSperry","text":"","code":"transp_transpirationSperry(   x,   meteo,   day,   latitude,   elevation,   slope,   aspect,   canopyEvaporation = 0,   snowMelt = 0,   soilEvaporation = 0,   herbTranspiration = 0,   stepFunctions = NA_integer_,   modifyInput = TRUE )  transp_transpirationSureau(   x,   meteo,   day,   latitude,   elevation,   slope,   aspect,   canopyEvaporation = 0,   snowMelt = 0,   soilEvaporation = 0,   herbTranspiration = 0,   modifyInput = TRUE )  transp_transpirationGranier(   x,   meteo,   day,   latitude,   elevation,   slope,   aspect,   modifyInput = TRUE )"},{"path":"https://emf-creaf.github.io/medfate/reference/transp_modes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpiration modes — transp_transpirationSperry","text":"x object class spwbInput growthInput, built using 'Granier', 'Sperry' 'Sureau' transpiration modes. meteo data frame daily meteorological data series (see spwb). day integer identify day (row) within meteo data frame. latitude Latitude (degrees). elevation, slope, aspect Elevation sea level (m), slope (degrees) aspect (degrees North). canopyEvaporation Canopy evaporation (interception) day (mm). snowMelt Snow melt values  day (mm). soilEvaporation Bare soil evaporation day (mm). herbTranspiration Transpiration herbaceous plants day (mm). stepFunctions integer indicate simulation step photosynthesis profit maximization functions desired. modifyInput Boolean flag indicate input x object allowed modified simulation.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_modes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpiration modes — transp_transpirationSperry","text":"list following elements: \"cohorts\": data frame cohort information, copied spwbInput. \"Stand\": vector stand-level variables. \"Plants\": data frame results plant cohort. using transp_transpirationGranier, element \"Plants\" includes: \"LAI\": Leaf area index plant cohort. \"LAIlive\": Leaf area index plant cohort, assuming leaves unfolded. \"AbsorbedSWRFraction\": Fraction SWR absorbed cohort. \"Transpiration\": Transpirated water (mm) corresponding cohort. \"GrossPhotosynthesis\": Gross photosynthesis (gC/m2) corresponding cohort. \"psi\": Water potential (MPa) plant cohort (average soil layers). \"DDS\": Daily drought stress [0-1] (relative whole-plant conductance). \"LAI\": Leaf area index plant cohort. \"LAIlive\": Leaf area index plant cohort, assuming leaves unfolded. \"Extraction\": Water extracted soil (mm) cohort. \"Transpiration\": Transpirated water (mm) corresponding cohort. \"GrossPhotosynthesis\": Gross photosynthesis (gC/m2) corresponding cohort. \"NetPhotosynthesis\": Net photosynthesis (gC/m2) corresponding cohort. \"RootPsi\": Minimum water potential (MPa) root collar. \"StemPsi\": Minimum water potential (MPa) stem. \"StemPLC\": Proportion conductance loss stem. \"LeafPsiMin\": Minimum (predawn) water potential (MPa) leaf (representing average leaf). \"LeafPsiMax\": Maximum (midday) water potential (MPa) leaf (representing average leaf). \"LeafPsiMin_SL\": Minimum (predawn) water potential (MPa) sunlit leaves. \"LeafPsiMax_SL\": Maximum (midday) water potential (MPa) sunlit leaves. \"LeafPsiMin_SH\": Minimum (predawn) water potential (MPa) shade leaves. \"LeafPsiMax_SH\": Maximum (midday) water potential (MPa) shade leaves. \"dEdP\": Overall soil-plant conductance (derivative supply function). \"DDS\": Daily drought stress [0-1] (relative whole-plant conductance). \"StemRWC\": Relative water content stem tissue (including symplasm apoplasm). \"LeafRWC\": Relative water content leaf tissue (including symplasm apoplasm). \"LFMC\": Live fuel moisture content (percent dry weight). \"WaterBalance\": Plant water balance (extraction - transpiration). \"Extraction\": data frame mm water extracted soil layer (columns) cohort (rows). remaining items given transp_transpirationSperry transp_transpirationSureau: \"EnergyBalance\": list following elements: \"Temperature\": data frame temperature atmosphere ('Tatm'), canopy ('Tcan') soil ('Tsoil.1', 'Tsoil.2', ...) time step. \"CanopyEnergyBalance\": data frame components canopy energy balance (W/m2) time step. \"SoilEnergyBalance\": data frame components soil energy balance (W/m2) time step. \"RhizoPsi\": Minimum water potential (MPa) inside roots, crossing rhizosphere, per cohort soil layer. \"Sunlitleaves\" \"ShadeLeaves\": Data frames sunlit leaves shade leaves following columns per cohort: \"LAI\": Cumulative leaf area index sunlit/shade leaves. \"Vmax298\": Average maximum carboxilation rate sunlit/shade leaves. \"Jmax298\": Average maximum electron transport rate sunlit/shade leaves. \"ExtractionInst\": Water extracted plant cohort time step. \"PlantsInst\": list instantaneous (per time step) results plant cohort: \"E\": data frame cumulative transpiration (mm) plant cohort time step. \"Ag\": data frame cumulative gross photosynthesis (gC/m2) plant cohort time step. \"\": data frame cumulative net photosynthesis (gC/m2) plant cohort time step. \"Sunlitleaves\" \"ShadeLeaves\": Lists instantaneous (time step) results sunlit leaves shade leaves following items: \"Abs_SWR\": data frame instantaneous absorbed short-wave radiation (SWR). \"Net_LWR\": data frame instantaneous net long-wave radiation (LWR). \"\": data frame instantaneous net photosynthesis (micromol/m2/s). \"Ci\": data frame instantaneous intercellular CO2 concentration (ppm). \"GW\": data frame instantaneous stomatal conductance (mol/m2/s). \"VPD\": data frame instantaneous vapour pressure deficit (kPa). \"Temp\": data frame leaf temperature (degrees Celsius). \"Psi\": data frame leaf water potential (MPa). \"dEdP\": data frame slope plant supply function (estimation whole-plant conductance). \"RootPsi\": data frame root crown water potential (MPa) plant cohort time step. \"StemPsi\": data frame stem water potential (MPa) plant cohort time step. \"LeafPsi\": data frame leaf (average) water potential (MPa) plant cohort time step. \"StemPLC\": data frame proportion loss conductance [0-1] plant cohort time step. \"StemRWC\": data frame (average) relative water content stem tissue [0-1] plant cohort time step. \"LeafRWC\": data frame relative water content leaf tissue [0-1] plant cohort time step. \"StemSympRWC\": data frame (average) relative water content symplastic stem tissue [0-1] plant cohort time step. \"LeafSympRWC\": data frame relative water content symplastic leaf tissue [0-1] plant cohort time step. \"PWB\": data frame plant water balance (extraction - transpiration). \"LightExtinction\": list information regarding radiation balance canopy, returned function light_instantaneousLightExtinctionAbsortion. \"CanopyTurbulence\": Canopy turbulence (see wind_canopyTurbulence). \"SupplyFunctions\": stepFunctions missing, list supply functions, photosynthesis functions profit maximization functions.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_modes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transpiration modes — transp_transpirationSperry","text":"Three sub-models available: Sub-model function transp_transpirationGranier described De Cáceres et al. (2015),   implements approach originally described Granier et al. (1999). Sub-model function transp_transpirationSperry described De Cáceres et al. (2021),   implements modelling approach originally described Sperry et al. (2017). Sub-model function transp_transpirationSureau described SurEau-Ecos v2.0 model Ruffault et al. (2022).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_modes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transpiration modes — transp_transpirationSperry","text":"De Cáceres M, Martínez-Vilalta J, Coll L, Llorens P, Casals P, Poyatos R, Pausas JG, Brotons L. (2015) Coupling water balance model forest inventory data predict drought stress: role forest structural changes vs. climate changes. Agricultural Forest Meteorology 213: 77-90 (doi:10.1016/j.agrformet.2015.06.012). De Cáceres M, Mencuccini M, Martin-StPaul N, Limousin JM, Coll L, Poyatos R, Cabon , Granda V, Forner , Valladares F, Martínez-Vilalta J (2021) Unravelling effect species mixing water use drought stress holm oak forests: modelling approach. Agricultural Forest Meteorology 296 (doi:10.1016/j.agrformet.2020.108233). Granier , Bréda N, Biron P, Villette S (1999) lumped water balance model evaluate duration intensity drought constraints forest stands. Ecol Modell 116:269–283. https://doi.org/10.1016/S0304-3800(98)00205-1. Ruffault J, Pimont F, Cochard H, Dupuy JL, Martin-StPaul N (2022) SurEau-Ecos v2.0: trait-based plant hydraulics model simulations plant water status drought-induced mortality ecosystem level. Geoscientific Model Development 15, 5593-5626 (doi:10.5194/gmd-15-5593-2022). Sperry, J. S., M. D. Venturas, W. R. L. Anderegg, M. Mencuccini, D. S. Mackay, Y. Wang, D. M. Love. 2017. Predicting stomatal responses environment optimization photosynthetic gain hydraulic cost. Plant Cell Environment 40, 816-830 (doi: 10.1111/pce.12852).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/transp_modes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transpiration modes — transp_transpirationSperry","text":"Miquel De Cáceres Ainsa, CREAF Nicolas Martin-StPaul, URFM-INRAE","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_modes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transpiration modes — transp_transpirationSperry","text":"","code":"#Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(\"Granier\")  #Initialize input x1 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  # Transpiration according to Granier's model, plant water potential  # and plant stress for a given day t1 <- transp_transpirationGranier(x1, examplemeteo, 1,                                   latitude = 41.82592, elevation = 100, slope = 0, aspect = 0,                                   modifyInput = FALSE)  #Switch to 'Sperry' transpiration mode control <- defaultControl(\"Sperry\")  #Initialize input x2 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  # Transpiration according to Sperry's model t2 <- transp_transpirationSperry(x2, examplemeteo, 1,                                  latitude = 41.82592, elevation = 100, slope = 0, aspect = 0,                                 modifyInput = FALSE)                                  #Switch to 'Sureau' transpiration mode control <- defaultControl(\"Sureau\")  #Initialize input x3 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  # Transpiration according to Sureau model t3 <- transp_transpirationSureau(x3, examplemeteo, 1,                                    latitude = 41.82592, elevation = 100, slope = 0, aspect = 0,                                   modifyInput = FALSE)"},{"path":"https://emf-creaf.github.io/medfate/reference/transp_stomatalregulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Stomatal regulation — transp_stomatalregulation","title":"Stomatal regulation — transp_stomatalregulation","text":"Set high-level functions used calculation stomatal conductance transpiration. Function transp_profitMaximization calculates gain cost functions, well profit maximization supply photosynthesis input functions. Function transp_stomatalRegulationPlot produces plot cohort supply functions water potential plot cohort photosynthesis functions water potential, maximum profit values indicated.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_stomatalregulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stomatal regulation — transp_stomatalregulation","text":"","code":"transp_profitMaximization(   supplyFunction,   photosynthesisFunction,   Gswmin,   Gswmax )  transp_stomatalRegulationPlot(   x,   meteo,   day,   timestep,   latitude,   elevation,   slope = NA,   aspect = NA,   type = \"E\" )"},{"path":"https://emf-creaf.github.io/medfate/reference/transp_stomatalregulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stomatal regulation — transp_stomatalregulation","text":"supplyFunction Water supply function (see hydraulics_supplyFunctionNetwork). photosynthesisFunction Function returned photo_photosynthesisFunction(). Gswmin, Gswmax Minimum maximum stomatal conductance water vapour (mol·m-2·s-1). x object class spwbInput built using 'Sperry' transpiration mode. meteo data frame daily meteorological data series (see spwb). day integer identify day (row) within meteo. timestep integer 1 ndailysteps specified x (see defaultControl). latitude Latitude (degrees). elevation, slope, aspect Elevation sea level (m), slope (degrees) aspect (degrees North). type string plot type, either \"E\" (transpiration flow), \"Ag\" (gross photosynthesis), \"\" (net photosynthesis), \"Gsw\" (stomatal conductance water vapour), \"T\" (temperature) \"VPD\" (leaf vapour pressure deficit).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_stomatalregulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stomatal regulation — transp_stomatalregulation","text":"Function transp_profitMaximization returns list following elements: Cost: Cost function [0-1]. Gain: Gain function [0-1]. Profit: Profit function [0-1]. iMaxProfit: Index corresponding maximum profit (starting 0).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_stomatalregulation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stomatal regulation — transp_stomatalregulation","text":"Sperry, J. S., M. D. Venturas, W. R. L. Anderegg, M. Mencuccini, D. S. Mackay, Y. Wang, D. M. Love. 2017. Predicting stomatal responses environment optimization photosynthetic gain hydraulic cost. Plant Cell Environment 40, 816-830 (doi: 10.1111/pce.12852).","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/transp_stomatalregulation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stomatal regulation — transp_stomatalregulation","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/transp_stomatalregulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stomatal regulation — transp_stomatalregulation","text":"","code":"#Load example daily meteorological data data(examplemeteo)  #Load example plot plant data data(exampleforest)  #Default species parameterization data(SpParamsMED)  #Define soil with default soil params (4 layers) examplesoil <- defaultSoilParams(4)  #Initialize control parameters control <- defaultControl(transpirationMode=\"Sperry\")  #Initialize input x2 <- spwbInput(exampleforest,examplesoil, SpParamsMED, control)  # Stomatal VPD curve and chosen value for the 12th time step at day 100 transp_stomatalRegulationPlot(x2, examplemeteo, day=100, timestep = 12,                               latitude = 41.82592, elevation = 100, type=\"VPD\")"},{"path":"https://emf-creaf.github.io/medfate/reference/tree2forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Single-cohort forests — tree2forest","title":"Single-cohort forests — tree2forest","text":"Creates forest object single plant cohort","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/tree2forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single-cohort forests — tree2forest","text":"","code":"tree2forest(   Species,   Height,   LAI = NA,   N = NA,   DBH = NA,   Z50 = NA,   Z95 = NA,   Z100 = NA,   CrownRatio = NA,   FoliarBiomass = NA,   FuelLoading = NA )  shrub2forest(   Species,   Height,   LAI = NA,   Cover = NA,   Z50 = NA,   Z95 = NA,   Z100 = NA,   CrownRatio = NA,   FoliarBiomass = NA,   FuelLoading = NA )"},{"path":"https://emf-creaf.github.io/medfate/reference/tree2forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single-cohort forests — tree2forest","text":"Species String species (taxon) name non-negative integer species identity (.e., 0,1,2,...) matching SpParams. Height Plant height (cm). LAI Leaf area index (m2/m2) N Tree density (ind/ha) DBH Tree DBH (cm). Z50 Depth (mm) corresponding 50% fine roots. Z95 Depth (mm) corresponding 95% fine roots. Z100 Depth (mm) corresponding 100% fine roots. CrownRatio Crown ratio (fraction total height) FoliarBiomass Standing dry biomass leaves (kg/m2) FuelLoading Fine fuel loading (kg/m2) Cover Percent cover","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/tree2forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single-cohort forests — tree2forest","text":"object class forest","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/tree2forest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Single-cohort forests — tree2forest","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/tree2forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single-cohort forests — tree2forest","text":"","code":"oak_forest <-tree2forest(\"Quercus ilex\", Height= 200, LAI = 2) oak_forest #> $treeData #>        Species DBH Height  N Z50 Z95 LAI #> 1 Quercus ilex  NA    200 NA  NA  NA   2 #>  #> $shrubData #> [1] Species Height  Cover   Z50     Z95     #> <0 rows> (or 0-length row.names) #>  #> $herbCover #> [1] NA #>  #> $herbHeight #> [1] NA #>  #> $seedBank #> [1] Species Percent #> <0 rows> (or 0-length row.names) #>  #> attr(,\"class\") #> [1] \"forest\" \"list\""},{"path":"https://emf-creaf.github.io/medfate/reference/vprofile_leafAreaDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertical profiles — vprofile_leafAreaDensity","title":"Vertical profiles — vprofile_leafAreaDensity","text":"Functions generate vertical profiles generated input forest object.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/vprofile_leafAreaDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertical profiles — vprofile_leafAreaDensity","text":"","code":"vprofile_leafAreaDensity(   x,   SpParams = NULL,   z = NULL,   gdd = NA,   byCohorts = FALSE,   bySpecies = FALSE,   includeHerbs = FALSE,   draw = TRUE,   xlim = NULL )  vprofile_rootDistribution(   x,   SpParams,   d = NULL,   bySpecies = FALSE,   draw = TRUE,   xlim = NULL )  vprofile_fuelBulkDensity(   x,   SpParams,   z = NULL,   gdd = NA,   draw = TRUE,   xlim = NULL )  vprofile_PARExtinction(   x,   SpParams,   z = NULL,   gdd = NA,   includeHerbs = FALSE,   draw = TRUE,   xlim = c(0, 100) )  vprofile_SWRExtinction(   x,   SpParams,   z = NULL,   gdd = NA,   includeHerbs = FALSE,   draw = TRUE,   xlim = c(0, 100) )  vprofile_windExtinction(   x,   SpParams,   u = 1,   windMeasurementHeight = 200,   boundaryLayerSize = 2000,   target = \"windspeed\",   z = NULL,   gdd = NA,   includeHerbs = FALSE,   draw = TRUE,   xlim = NULL )"},{"path":"https://emf-creaf.github.io/medfate/reference/vprofile_leafAreaDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertical profiles — vprofile_leafAreaDensity","text":"x object class forest SpParams data frame species parameters (see SpParamsMED). z numeric vector height values. gdd Growth degree days. byCohorts Separate profiles cohort. bySpecies Aggregate cohort profiles species. includeHerbs Include herbaceous layer profile. draw Logical flag indicate plot desired. xlim Limits x-axis. d numeric vector soil layer widths. u value measured wind speed (m/s). windMeasurementHeight Height corresponding wind measurement (cm canopy). boundaryLayerSize Size boundary layer (cm) canopy. target Wind property draw, either \"windspeed\", \"kineticenergy\" (turbulent kinetic energy) \"stress\" (Reynold's stress).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/vprofile_leafAreaDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vertical profiles — vprofile_leafAreaDensity","text":"draw = FALSE, functions return numeric vector values measured height. Units depend profile function: vprofile_leafAreaDensity: Cumulative LAI (m2/m2) per height bin. vprofile_fuelBulkDensity: Fuel bulk density (kg/m3) per height bin. vprofile_PARExtinction: Percent photosynthetically active radiation (%) corresponding height. vprofile_SWRExtinction: Percent shortwave radiation (%) corresponding height. vprofile_windExtinction: Wind speed (m/s) corresponding height. draw = TRUE functions return ggplot object, instead.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/vprofile_leafAreaDensity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vertical profiles — vprofile_leafAreaDensity","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/vprofile_leafAreaDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vertical profiles — vprofile_leafAreaDensity","text":"","code":"#Default species parameterization data(SpParamsMED)  #Load example plot plant data data(exampleforest)  vprofile_leafAreaDensity(exampleforest, SpParamsMED)  vprofile_fuelBulkDensity(exampleforest, SpParamsMED)   vprofile_PARExtinction(exampleforest, SpParamsMED)  vprofile_SWRExtinction(exampleforest, SpParamsMED)   vprofile_windExtinction(exampleforest, SpParamsMED)"},{"path":"https://emf-creaf.github.io/medfate/reference/waterUseEfficiency.html","id":null,"dir":"Reference","previous_headings":"","what":"Water use efficiency — waterUseEfficiency","title":"Water use efficiency — waterUseEfficiency","text":"Calculates plant water use efficiency (WUE), different temporal scales, simulation results.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/waterUseEfficiency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Water use efficiency — waterUseEfficiency","text":"","code":"waterUseEfficiency(   x,   type = \"Plant Ag/E\",   leaves = \"average\",   freq = \"days\",   draw = TRUE,   ylim = NULL )"},{"path":"https://emf-creaf.github.io/medfate/reference/waterUseEfficiency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Water use efficiency — waterUseEfficiency","text":"x object class spwb, pwb, growth fordyn. type string indicate scale WUE calculation. Either: \"Leaf iWUE\": Leaf intrinsic WUE, .e. instantaneous ratio photosynthesis stomatal conductance (simulations transpirationMode = \"Sperry\" transpirationMode = \"Sureau\" subdailyResults = TRUE). \"Leaf Ci\": Leaf intercellular CO2 concentration (simulations transpirationMode = \"Sperry\" transpirationMode = \"Sureau\" subdailyResults = TRUE). \"Plant /E\": Plant (cohort) net photosynthesis plant transpiration (simulations transpirationMode = \"Sperry\" transpirationMode = \"Sureau\") \"Stand /E\": Stand net photosynthesis stand transpiration (simulations transpirationMode = \"Sperry\" transpirationMode = \"Sureau\") \"Plant Ag/E\": Plant (cohort) gross photosynthesis plant transpiration \"Stand Ag/E\": Stand gross photosynthesis stand transpiration leaves Either \"sunlit\", \"shade\" \"average\". Refers WUE different leaf types average (weights according LAI sunlit shade leaves). relevant type = \"iWUE\". freq Frequency summary statistics (see cut.Date). draw boolean flag indicate plot returned. ylim Range values y.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/waterUseEfficiency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Water use efficiency — waterUseEfficiency","text":"draw=TRUE plot returned. Otherwise, function returns matrix WUE values, rows dates (desired temporal scale), columns plant cohorts. case type = \"Plant Ag/E\", type = \"Stand Ag/E\", type = \"Plant /E\" type = \"Stand /E\" values gC/L. case type = \"Leaf iWUE\" values micromol carbon per mmol water.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/waterUseEfficiency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Water use efficiency — waterUseEfficiency","text":"Temporal aggregation WUE values done differently depending value type. type = \"Plant Ag/E\", type = \"Stand Ag/E\", type = \"Plant /E\" type = \"Stand /E\" sums daily photosynthesis transpiration first calculated desired temporal scale ratio calculated afterwards. type = \"Leaf iWUE\" intrinsic WUE values first calculated daily scale (averages instantaneous /gs ratios weighted ) aggregated desired scale calculating weighted averages, weights given daily photosynthesis.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/waterUseEfficiency.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Water use efficiency — waterUseEfficiency","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/wind.html","id":null,"dir":"Reference","previous_headings":"","what":"Models for canopy turbulence — wind","title":"Models for canopy turbulence — wind","text":"Models canopy turbulence Katul et al (2004).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/wind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Models for canopy turbulence — wind","text":"","code":"wind_canopyTurbulenceModel(zm, Cx, hm, d0, z0, model = \"k-epsilon\")  wind_canopyTurbulence(   zmid,   LAD,   canopyHeight,   u,   windMeasurementHeight = 200,   model = \"k-epsilon\" )"},{"path":"https://emf-creaf.github.io/medfate/reference/wind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Models for canopy turbulence — wind","text":"zm numeric vector height values (m). Cx Effective drag = Cd x leaf area density. hm Canopy height (m). d0 Zero displacement height (m). z0 Momentum roughness height (m). model Closure model. zmid numeric vector mid-point heights (cm) canopy layers. LAD numeric vector leaf area density values (m3/m2). canopyHeight Canopy height (cm). u Measured wind speed (m/s). windMeasurementHeight Height wind speed measurement respect canopy height (cm).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/wind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Models for canopy turbulence — wind","text":"Function wind_canopyTurbulenceModel returns data frame vertical profiles variables: z1: Height values. U1: U/u*, U mean velocity u* friction velocity. dU1: dUdz/u*, dUdz mean velocity gradient u* friction velocity. epsilon1: epsilon/(u^3/h) epsilon turbulent kinetic dissipation rate, u* friction velocity h canopy height. k1: k/(u*^2), k turbulent kinetic energy u* friction velocity. uw1: <uw>/(u*^2), <uw> Reynolds stress u* friction velocity. Lmix1: Mixing length. Function wind_canopyTurbulence returns data frame vertical profiles transformed variables: zmid: Input mid-point heights (cm) canopy layers. u: Wind speed (m/s). du: Mean velocity gradient (1/s). epsilon: Turbulent kinetic dissipation rate. k: Turbulent kinetic energy. uw: Reynolds stress.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/wind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Models for canopy turbulence — wind","text":"Implementation Rcpp K-epsilon canopy turbulence models Katul et al (2004) originally Matlab code (https://nicholas.duke.edu/people/faculty/katul/k_epsilon_model.htm).","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/wind.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Models for canopy turbulence — wind","text":"Katul GG, Mahrt L, Poggi D, Sanz C (2004) One- two-equation models canopy turbulence. Boundary-Layer Meteorol 113:81–109. https://doi.org/10.1023/B:BOUN.0000037333.48760.e5","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/wind.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Models for canopy turbulence — wind","text":"Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/wind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Models for canopy turbulence — wind","text":"","code":"#Default species parameterization data(SpParamsMED)  #Load example plot plant data data(exampleforest)  #Canopy height (in m) h= max(exampleforest$treeData$Height/100)  d0 = 0.67*h z0 = 0.08*h  #Height values (cm) z = seq(50,1000, by=50) zm = z/100 # (in m)  # Leaf area density lad = vprofile_leafAreaDensity(exampleforest, SpParamsMED, draw = FALSE,                                z = c(0,z))    # Effective drag Cd = 0.2 Cx = Cd*lad    # canopy turbulence model wind_canopyTurbulenceModel(zm, Cx,h,d0,z0) #>      z1        U1        dU1    epsilon1        k1          uw1 Lmix1 #> 1   0.5 0.8550725 0.01611031 0.003070609 0.2077187 -0.003156593 1.056 #> 2   1.0 0.8623221 0.01611031 0.003843443 0.2159537 -0.003156593 1.056 #> 3   1.5 0.8738023 0.02441644 0.004755993 0.2297953 -0.004942526 1.056 #> 4   2.0 0.8850883 0.02401959 0.005692790 0.2493185 -0.005070773 1.056 #> 5   2.5 0.8961739 0.02361695 0.006639946 0.2755342 -0.005246501 1.056 #> 6   3.0 0.9070512 0.02320348 0.007547697 0.3086430 -0.005459465 1.056 #> 7   3.5 0.9349807 0.05684244 0.009551333 0.3575494 -0.014396237 1.056 #> 8   4.0 0.9965002 0.12321936 0.014064599 0.4349114 -0.034388602 1.056 #> 9   4.5 1.1024788 0.21128611 0.022773360 0.5553624 -0.066520792 1.056 #> 10  5.0 1.2634226 0.32048042 0.038565340 0.7400501 -0.116225228 1.056 #> 11  5.5 1.4877301 0.44675159 0.065766621 1.0150209 -0.189347190 1.056 #> 12  6.0 1.7796965 0.58198655 0.109530957 1.4054661 -0.289757506 1.056 #> 13  6.5 2.1380296 0.71498586 0.173799260 1.9255898 -0.416170718 1.056 #> 14  7.0 2.5557528 0.83425304 0.258167007 2.5681284 -0.560379831 1.056 #> 15  7.5 3.0008802 0.88979336 0.346410777 3.2493215 -0.672082116 1.056 #> 16  8.0 3.4676143 0.93344426 0.430499881 3.9433012 -0.776599671 1.056 #> 17  8.5 3.9520287 0.96904099 0.499662705 4.6222636 -1.038149018 1.256 #> 18  9.0 4.3415186 0.77968801 0.523301827 5.0622764 -1.013427511 1.456 #> 19  9.5 4.6691390 0.65607082 0.532374145 5.3806174 -1.000000000 1.656 #> 20 10.0 4.9525037 0.56759594 0.538793103 5.6312500 -1.000000000 1.856"},{"path":"https://emf-creaf.github.io/medfate/reference/woodformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Wood formation — woodformation","title":"Wood formation — woodformation","text":"Functions initialize expand ring tracheids simulate secondary growth.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/woodformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wood formation — woodformation","text":"","code":"woodformation_initRing()  woodformation_temperatureEffect(   Tc,   Y_T = 5,   DHa = 87500,   DSd = 1090,   DHd = 333000 )  woodformation_relativeExpansionRate(psi, Tc, pi, phi, Y_P, Y_T)  woodformation_growRing(   ring,   psi,   Tc,   Nc = 8.85,   phi0 = 0.13,   pi0 = -0.8,   CRD0 = 8.3,   Y_P = 0.05,   Y_T = 5,   h = 0.043 * 1.8,   s = 1.8 )  woodformation_relativeGrowthRate(dbh1, dbh2, yeardiff, lower = -2, upper = 8)"},{"path":"https://emf-creaf.github.io/medfate/reference/woodformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wood formation — woodformation","text":"Tc Temperature Celsius. Y_T Temperature yield threshold (Celsius) DHa, DSd, DHd Enthalpy activation, enthalpy difference entropy difference catalytically active inactive states enzymatic system (Parent et al. 2010). psi Water potential (MPa). pi Osmotic potential (MPa) phi Cell extensibility (MPa-1 day-1) Y_P Turgor pressure yield threshold (MPa) ring object class ring returned function woodformation_initRing. Nc Number active cells cambium. phi0 Initial value cell extensibility (MPa-1 day-1) pi0 Initial value cell osmotic potential (MPa) CRD0 Initial value cell radial diameter h Cell wall hardening coefficient (day-1) s Cell wall softening coefficient (unitless) dbh1, dbh2 Initial final diameter breast height. yeardiff Interval dbh measurements, years. lower, upper Lower upper bounds root finding.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/woodformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wood formation — woodformation","text":"Function woodformation_initRing() returns list class 'ring', list containing data frame cells two vectors: P SA. Dataframe cells contains columns \"formation_date\", \"phi\", \"pi\" \"CRD\" many rows dates processed. Vectors P SA contain, respectively, number cells produced sapwood area corresponding ring cells (assuming tangencial radius 20 micrometers). Function woodformation_growRing() modifies input 'ring' object according environmental conditions given input. Function woodformation_relativeExpansionRate() returns numeric scalar relative expansion rate. Function woodformation_temperatureEffect() returns scalar 0 1 reflecting temperature effect tissue formation rate. Function woodformation_relativeGrowthRate returns annual growth rate, relative cambium perimeter, estimated initial final diameter values.","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/woodformation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Wood formation — woodformation","text":"Code modified package xylomod Antoine Cabon, available GitHub","code":""},{"path":"https://emf-creaf.github.io/medfate/reference/woodformation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wood formation — woodformation","text":"Cabon , Fernández-de-Uña L, Gea-Izquierdo G, Meinzer FC, Woodruff DR, Martínez-Vilalta J, De Cáceres M. 2020a. Water potential control turgor-driven tracheid enlargement Scots pine xeric distribution edge. New Phytologist 225: 209–221. Cabon , Peters RL, Fonti P, Martínez-Vilalta  J, De Cáceres M. 2020b. Temperature water potential co-limit stem cambial activity along steep elevational gradient. New Phytologist: nph.16456. Parent, B., O. Turc, Y. Gibon, M. Stitt, F. Tardieu. 2010. Modelling temperature-compensated physiological rates, based co-ordination responses temperature developmental processes. Journal Experimental Botany 61:2057–2069.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/medfate/reference/woodformation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wood formation — woodformation","text":"Antoine Cabon, CTFC Miquel De Cáceres Ainsa, CREAF","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-480","dir":"Changelog","previous_headings":"","what":"medfate 4.8.0","title":"medfate 4.8.0","text":"Code optimization: LAI distribution Communication structures improve memory usage medfateland","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-470","dir":"Changelog","previous_headings":"","what":"medfate 4.7.0","title":"medfate 4.7.0","text":"CRAN release: 2024-10-18 LAI can estimated without competition effect cohorts larger size Growth rates corrected ratio LAI maximum LAI without competition effects New control flags plant-level outputs growth simulations Revision function resistances() produce extra results adapt Sureau New parameters Dmax SeedProductionDiameter trees Code optimization: communication using data structures Update SpParamsMED parameter values","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-460","dir":"Changelog","previous_headings":"","what":"medfate 4.6.0","title":"medfate 4.6.0","text":"ObsID column allowed treeData shrubData indicate cohort ID observation Tree shrub merging allow preserving cohorts non-missing ObsID New control parameter ask fordyn() preserve (.e. remove merge) cohorts non-missing ObsID","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-450","dir":"Changelog","previous_headings":"","what":"medfate 4.5.0","title":"medfate 4.5.0","text":"Bug correction: Zero fine root proportion Sureau Users can now define column Z100 treeData shrubData truncate root distribution AcceptedName strictly required parameter (used parameterization)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-440","dir":"Changelog","previous_headings":"","what":"medfate 4.4.0","title":"medfate 4.4.0","text":"CRAN release: 2024-07-23 Multi-bucket soil model reintroduced (default) safety Loading offset added option fuel_FCCS","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-432","dir":"Changelog","previous_headings":"","what":"medfate 4.3.2","title":"medfate 4.3.2","text":"IMPORTANT: Many functions internalized (biophysics_, fire_,…). documented exported, listed reference list. Default control parameters changed Subdaily soil temperature change limited stability thin first layer Column ‘Strict’ added SpParamsDefinition Detection POSIXct date columns New control option ‘lfmcComponent’ Fixed annual recovery spwb sureau transpiration mode Stem cuticular transpiration set FALSE default Imputation Gs_P50 changed either VCleaf_P50 (missing) else derived TLP","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-431","dir":"Changelog","previous_headings":"","what":"medfate 4.3.1","title":"medfate 4.3.1","text":"CRAN release: 2024-05-25 Functions forest2spwbInput/forest2growthInput deprecated. Preferred function names spwbInput/growthInput.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-430","dir":"Changelog","previous_headings":"","what":"medfate 4.3.0","title":"medfate 4.3.0","text":"IMPORTANT: soil objects now data frames SWE now stored ‘snowpack’ spwbInput print.soil renamed summary.soil forest_mapWoodyTables moved medfateutils medfate New function forest_reduceToDominant","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-420","dir":"Changelog","previous_headings":"","what":"medfate 4.2.0","title":"medfate 4.2.0","text":"Reorganization Soil output list Snow output independent data frame New function soil_redefineLayers Bug correction forest_mergeShrubs Option segmentedXylemVulnerability set FALSE Sureau","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-410","dir":"Changelog","previous_headings":"","what":"medfate 4.1.0","title":"medfate 4.1.0","text":"Single-domain dual-permeability soil water flows Infiltration excess, saturation excess capillarity rise reported Lateral water flows water table depth inputs Soil output revision Evaluation moisture multiple soil layers","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-400","dir":"Changelog","previous_headings":"","what":"medfate 4.0.0","title":"medfate 4.0.0","text":"Options leafCavitationEffects stemCavitationEffects Sperry New taxonomic treatment (Name/AcceptedName) Revision Sureau sub-model Replacement vulnerability curve parameters P12, P50 P88 New parameters Jarvis-type stomatal conductance Sureau sub-model XFT traits vulnerability curves Recording leaf PLC sub-models Richard-type soil water movement Soil hydrology revised New functions spwb agricultural lands New function ‘extract’ New infiltration model Green-Ampt (1911) Interception model Liu (2001) accepted alternative Gash (1995) Optional “RainfallIntensity” (mm/h) input weather New option “defaultRainfallIntensityPerMonth” New functions “tree2forest”/“shrub2forest” create forest objects single cohorts Van Genuchten parameters Ksat can specified directly initializing soil Saturation excess soil flows Evaluation GPP, H LE Soil thermodynamics revised","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-320","dir":"Changelog","previous_headings":"","what":"medfate 3.2.0","title":"medfate 3.2.0","text":"CRAN release: 2023-11-30 Correction bug arisen old Rcpp versions Functions seed production bank dynamics (new parameter SeedLongevity) New parameters dispersal (SeedMass, DispersalType, DispersalDistance, DispersalShape) Recording leaf PLC Sperry Sureau sub-models","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-314","dir":"Changelog","previous_headings":"","what":"medfate 3.1.4","title":"medfate 3.1.4","text":"CRAN release: 2023-08-29 Fixing memory access errors","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-313","dir":"Changelog","previous_headings":"","what":"medfate 3.1.3","title":"medfate 3.1.3","text":"CRAN release: 2023-08-23 New option ‘months’ simulation summaries. Leaf area, foliar biomass fuels shrubs herbs depend leaf area plants Survival model based basal area available alternative fixed mortality baseline rates New control thresholds ‘minimumShrubCohortCover’ ‘minimumTreeCohortDensity’ cohort removal Tree bark thickness parameters added SpParamsMED","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-311","dir":"Changelog","previous_headings":"","what":"medfate 3.1.1","title":"medfate 3.1.1","text":"Fire severity implemented Crown bud percent decreases PLC fire, increases SA growth regulates primary growth rate Forest objects can now additional variables defined (LAI, foliar biomass, fuel loading), override estimations allometric models New example forest object ‘exampleforest2’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-310","dir":"Changelog","previous_headings":"","what":"medfate 3.1.0","title":"medfate 3.1.0","text":"Herbaceous information summary.forest Herbaceous transpiration added water balance Weather input can now dates Date POSIXct objects column ‘dates’ instead row names Weather input can now missing values MinRelativeHumidity, MaxRelativeHumidity Radiation","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-300","dir":"Changelog","previous_headings":"","what":"medfate 3.0.0","title":"medfate 3.0.0","text":"Leaf area limited allometries Functions ‘growthInput()’ ‘spwbInput()’ longer visible user level calculation mode forest structure (US mode removed) Control flag options restrict output ‘spwb()’ ‘pwb()’ ‘growth()’ Control flag calculate fire hazard ‘spwb()’ ‘pwb()’ ‘growth()’ simulations Integration SurEau-Ecos v2.0 code new transpiration mode (‘Sureau’) Bug correction tissue moisture water balance granier’s model Tree biomass allometries revised. Tree foliar biomass corrected high density. Shrub foliar biomass/fuel limited tree basal area.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-293","dir":"Changelog","previous_headings":"","what":"medfate 2.9.3","title":"medfate 2.9.3","text":"CRAN release: 2023-03-11 Bounded leaf area index IFNcodes SpParams PlantPsi lower limit set -40 MPa Psi_Critic longer used Granier submodel (Stem vulnerability curve used instead) New parameter Exp_Extract model transpiration decrease Granier submodel Update growth/recruitment parameters Removed fordyn dependency input PET","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-291","dir":"Changelog","previous_headings":"","what":"medfate 2.9.1","title":"medfate 2.9.1","text":"CRAN release: 2023-01-08 Allows species strings input forests objects Clean code growth.cpp","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-283","dir":"Changelog","previous_headings":"","what":"medfate 2.8.3","title":"medfate 2.8.3","text":"Replacing sprintf calls Update forest_mergeShrubs forest_mergeTrees","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-282","dir":"Changelog","previous_headings":"","what":"medfate 2.8.2","title":"medfate 2.8.2","text":"Function ‘redefineSoilLayers’ moved package ‘medfateutils’ Elements ‘ID’ ‘patchsize’ removed ‘forest’ Bug correction defaultManagementFunction ‘-systematic’ ‘-systematic’ New management option ‘targetTreeSpecies’ Fire hazard estimation includes dead canopy fuels (Ruffault et al. 2023)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-281","dir":"Changelog","previous_headings":"","what":"medfate 2.8.1","title":"medfate 2.8.1","text":"New meta-modelling parameters New growth/senescence parameters","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-280","dir":"Changelog","previous_headings":"","what":"medfate 2.8.0","title":"medfate 2.8.0","text":"CRAN release: 2022-09-14 New control parameter ‘subdailyCarbonBalance’, applying growth simulations transpiration = “Sperry” Hydraulic redistribution implemented transpiration = “Granier” Growth “Sperry” using canopy temperature","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-277","dir":"Changelog","previous_headings":"","what":"medfate 2.7.7","title":"medfate 2.7.7","text":"Imputation relationship RGRcambiummax SRsapwood Dynamic modification LeafPI0 StemPI0 removed Non-stomatal limitations photosynthesis removed","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-276","dir":"Changelog","previous_headings":"","what":"medfate 2.7.6","title":"medfate 2.7.6","text":"MeanTemperature longer input medfate. calculated minimum maximum temperature. MeanRelativeHumidity longer input medfate. PET longer input medfate. calculated internally. New simulation parameter ‘CO2ByYear’ specify year year variations atmospheric CO2 Sensitivity photosynthesis VPD CO2 concentration Granier’s model New species parameters ‘WUE_co2’, ‘WUE_vpd’ regulate effect CO2 concentration VPD Granier’s model Species parameter ‘WUE_decay’ renamed ‘WUE_par’ Control parameter ‘Catm’ renamed ‘defaultCO2’ New output data frame ‘CarbonBalance’ growth","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-275","dir":"Changelog","previous_headings":"","what":"medfate 2.7.5","title":"medfate 2.7.5","text":"Maximum stem conductance avoid overestimation stem conductance small shrubs Bug correction summary.forest Allows filling missing Z50/Z95 values SpParams creating model inputs","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-274","dir":"Changelog","previous_headings":"","what":"medfate 2.7.4","title":"medfate 2.7.4","text":"Reducing unused parameters Sperry model Reducing computational time Sperry model Function fireHazard now accepts objects spwb_day growth_day","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-273","dir":"Changelog","previous_headings":"","what":"medfate 2.7.3","title":"medfate 2.7.3","text":"CRAN release: 2022-05-09 Cleaning CRAN New article prepare model inputs","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-272","dir":"Changelog","previous_headings":"","what":"medfate 2.7.2","title":"medfate 2.7.2","text":"SpParamsMED include results parameter estimation exercises RGRsapwoodmax RGRcambiummax regulate sapwood formation shrubs/trees, respectively Simplified sapwood growth (ring cells)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-271","dir":"Changelog","previous_headings":"","what":"medfate 2.7.1","title":"medfate 2.7.1","text":"Revision recruitment model, addition recruitment probability (ProbRecr) within bioclimatic limits Temperature effects sapwood conversion heartwood Correction estimation Psi_Extract turgor loss point Estimation RSSG shade tolerance Minimum DBH parameter stand metrics","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-270","dir":"Changelog","previous_headings":"","what":"medfate 2.7.0","title":"medfate 2.7.0","text":"Basic water balance model relative water content ‘pRootDisc’ eliminated species parameters Plant water balance cuticular transpiration added basic water balance model Water pools revised basic water balance models Shared water pools now controlled via parameter ‘rhizosphereOverlap’ New species-specific parameter ‘MortalityBaselineRate’ Live fuel moisture content now included simulation results New species-specific parameter ‘RSSG’ (minimum relative starch sapwood growth)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-262","dir":"Changelog","previous_headings":"","what":"medfate 2.6.2","title":"medfate 2.6.2","text":"Control parameter ‘modifyInput’ longer available. Functions ‘spwb’, ‘pwb’ ‘growth’ modify input objects return element ‘spwbOutput’ ‘growthOutput’ copy final state.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-261","dir":"Changelog","previous_headings":"","what":"medfate 2.6.1","title":"medfate 2.6.1","text":"Tree cover (open grown assumption) Parameters ‘ShrubCover’ ‘CanopyCover’ longer required function fuel_FCCS Input weather stored output functions ‘spwb’, ‘pwb’ ‘growth’ New function ‘fireHazard’. Relative bias relative MAE evaluation metrics Drought-related leaf senescence occurring ‘StemPLC’ increases Embolized sapwood proportion discounted sapwood maintenance respiration Evaluation diameter increment (DI), DBH Height series Output growth rates relative sapwood area","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-260","dir":"Changelog","previous_headings":"","what":"medfate 2.6.0","title":"medfate 2.6.0","text":"Nitrogen content leaves, sapwood fine roots added. ‘Nleaf’ replaces ‘Narea’ latter can calculated ‘Nleaf’ using ‘SLA’. Maintenance respiration rates based N concentration tissues","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-250","dir":"Changelog","previous_headings":"","what":"medfate 2.5.0","title":"medfate 2.5.0","text":"spwb model Granier transpiration now extracts water soil layer according unsaturated conductivity. shinyplot generic function. Update parameters fHDmin fHDmax. New vignette ‘IFNEvaluation’ New parameter ‘WUE_decay’ reduction relative WUE Granier’s model Tissue construction costs now species-specific parameters. Fine root growth senescence made equal Granier Sperry models, inducing new parameter ‘Ar2Al’ Granier’s model.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-240","dir":"Changelog","previous_headings":"","what":"medfate 2.4.0","title":"medfate 2.4.0","text":"Functions ‘spwb_stress’, ‘spwb_resistances’ ‘spwb_waterUseEfficiency’ renamed ‘droughtStress’, ‘resistances’ ‘waterUseEfficiency’, respectively, since can now applied output several simulation function. Plant biomass balance growth. Structural changes now daily growth simulations. Bug correction shrub structural update. Shrub dynamics default set TRUE. DBH/Height plots growth output. IMPORTANT: New species parameter table.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-238","dir":"Changelog","previous_headings":"","what":"medfate 2.3.8","title":"medfate 2.3.8","text":"Summary functions revised, including new function ‘summary.fordyn’ Collating intra-annual ‘fordyn’ results plotting. Forest management enabled function ‘fordyn’ default management actions defined ‘defaultManagementFunction’ ‘defaultManagementArguments’ DOY, Photoperiod JulianDay can taken weather input functions ‘spwb’, ‘pwb’ ‘growth’.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-237","dir":"Changelog","previous_headings":"","what":"medfate 2.3.7","title":"medfate 2.3.7","text":"CRAN release: 2021-12-16 CO2 made daily input weather variable, addition default control parameter ‘Catm’ New function ‘shinyplot’ create interactive graphics New function ‘plot.fordyn’ display annual (step) summaries forest dynamics","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-235","dir":"Changelog","previous_headings":"","what":"medfate 2.3.5","title":"medfate 2.3.5","text":"New example vignette ‘FontBlanche’ Modification evaluation functions separate evaluation total evapotranspiration (‘ETR’) evaluation soil evaporation + plant transpiration (‘SE+TR’) Bug correction: sub-daily stomatal conductance plots","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-234","dir":"Changelog","previous_headings":"","what":"medfate 2.3.4","title":"medfate 2.3.4","text":"Maximum relative sapwood growth rates effective New option ‘summary.freq’ plot.spwb plot.growth New species parameters (sapwood fine root senescence rates) Defaults ‘conduit2sapwood’ taxonomical family IMPORTANT: New species parameter tables (including estimates conduit2sapwood)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-232","dir":"Changelog","previous_headings":"","what":"medfate 2.3.2","title":"medfate 2.3.2","text":"Parameter ‘ParticleDensity’ eliminated, now calculated ‘LeafDensity’, ‘WoodDensity’ ‘r635’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-231","dir":"Changelog","previous_headings":"","what":"medfate 2.3.1","title":"medfate 2.3.1","text":"IMPORTANT: New species parameter tables New control parameter ‘fillMissingSpParams’ Defaults ‘LeafDensity’, ‘WoodDensity’, ‘LeafPI0’, ‘LeafEPS’ ‘LeafAF’ taxonomical family. New species categorical params (inbuilt imputation) ‘LeafShape’ ‘LeafSize’ Parameter ‘Flammability’ index eliminated (non-meansurable property flammability). Parameter ‘LeafLitterFuelType’ eliminated derived ‘LeafShape’ ‘LeafSize’. Defaults added ‘r635’, ‘heatContent’, ‘LigninPercent’ ‘SAV’ according ‘LeafShape’ ‘LeafSize’ New function ‘getSpParamsDefinition()’ returns definition species parameters. Inbuilt defaults added shrub allometries, depending ‘LifeForm’ ‘Hmax’, tree allometries, depending ‘Group’. Default value added ‘pDead’.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-223","dir":"Changelog","previous_headings":"","what":"medfate 2.2.3","title":"medfate 2.2.3","text":"CRAN release: 2021-06-18 Functions soilgridsParams() forest_map*Tables() moved package ‘medfateutils’ available GitHub (emf-creaf/medfateutils).","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-222","dir":"Changelog","previous_headings":"","what":"medfate 2.2.2","title":"medfate 2.2.2","text":"Dependency ‘spdep’ removed Bug correction ‘windKatul.cpp’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-221","dir":"Changelog","previous_headings":"","what":"medfate 2.2.1","title":"medfate 2.2.1","text":"CRAN release: 2021-06-11 Calibrated minimum bioclimatic parameters recruitment (SpParamsMED) Explicit species input parameters phenology","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-220","dir":"Changelog","previous_headings":"","what":"medfate 2.2.0","title":"medfate 2.2.0","text":"New simulation function ‘fordyn()’, including recruitment process New function ‘mergeShrubs’ New functions ‘species_parameter’ ‘species_characterParameter’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-214","dir":"Changelog","previous_headings":"","what":"medfate 2.1.4","title":"medfate 2.1.4","text":"Dessication/defoliation homogenized across transpiration modes growth function Revision mortality (stochastic/deterministic, whole-cohort/density)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-213","dir":"Changelog","previous_headings":"","what":"medfate 2.1.3","title":"medfate 2.1.3","text":"Update Psi_Extract according Psi_TLP (Hydratry)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-212","dir":"Changelog","previous_headings":"","what":"medfate 2.1.2","title":"medfate 2.1.2","text":"New control flags defoliation/starvation/dessication growth simulations New control flag sink limitation growth simulations Revision phenology submodel","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-211","dir":"Changelog","previous_headings":"","what":"medfate 2.1.1","title":"medfate 2.1.1","text":"Respiration rate leaves made optionally species-specific. Update shrub allometries De Caceres et al. (2019). LAI_live LAI_expanded growth. Update SpParamsUS (missing values new parameters).","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-210","dir":"Changelog","previous_headings":"","what":"medfate 2.1.0","title":"medfate 2.1.0","text":"Parameters Granier’s equation made species-specific available Parameter modification dependencies revised Modification input objects now optional Update function transp_maximumTranspirationModel Photosynthesis Granier’s model corresponds gross photosynthesis proportional transpiration","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-201","dir":"Changelog","previous_headings":"","what":"medfate 2.0.1","title":"medfate 2.0.1","text":"Cloning initial object optimization Leaf growth costs always drawn sugar sapwood Bug correction: LWRnet calculation Bug correction: Sperry model crash LAIstand = 0","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-200","dir":"Changelog","previous_headings":"","what":"medfate 2.0.0","title":"medfate 2.0.0","text":"IMPORTANT: Soil input merged model input. Now calls simulation functions (e.g., spwb, growth) need include soil input parameter. Bug correction: NaN values theta > theta_sat van Genuchten psi computation Function modifyInputParams now accepts modification soil layer properties Sensitivity/Calibration vignette updated","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-116","dir":"Changelog","previous_headings":"","what":"medfate 1.1.6","title":"medfate 1.1.6","text":"New canopy turbulence models Katul et al (2004). Long-wave net radiation balance layered canopies following Flerchinger et al. (2009). Multi-layer canopy energy balance Bonan et al. (2014) New option ‘depthMode’ calculate fuel depth ‘fuel_FCCS’. Modification ‘vprofile_windExtinction’ draw turbulence models.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-115","dir":"Changelog","previous_headings":"","what":"medfate 1.1.5","title":"medfate 1.1.5","text":"Stomatal conductance now denoted Gsw GSW Boundary layer conductance considered Leaf water potential influencing leaf vapour pressure","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-114","dir":"Changelog","previous_headings":"","what":"medfate 1.1.4","title":"medfate 1.1.4","text":"Flexible temporal resolution model evaluation Basal area index evaluation","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-113","dir":"Changelog","previous_headings":"","what":"medfate 1.1.3","title":"medfate 1.1.3","text":"New model evaluation functions New optimization function factories New function ‘modifyInputParams’ Control parameters set nested list New vignette calibration sensitivity analysis","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-112","dir":"Changelog","previous_headings":"","what":"medfate 1.1.2","title":"medfate 1.1.2","text":"GW sunlit/shade minimum/maximum daily output FMC calculations basic water balance output New output growth simulation (biomass values) New function ‘moisture_cohortFMCDay’ Modification Z50/Z95","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-111","dir":"Changelog","previous_headings":"","what":"medfate 1.1.1","title":"medfate 1.1.1","text":"Root exudation added carbon balance Revision sapwood growth Growth cost fine roots basic model Translocation carbon senescence Bug correction fuel calculations US mode","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-110","dir":"Changelog","previous_headings":"","what":"medfate 1.1.0","title":"medfate 1.1.0","text":"CRAN release: 2020-11-05 Control option ‘rockyLayerDrainage’ instead ‘drainage’ disable macropore vertical outflow layers > 95% rocks Soil parameter Kdrain saturated vertical hydraulic conductivity towards groundwaters (deep drainage) Improved validation plots confidence intervals","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-103","dir":"Changelog","previous_headings":"","what":"medfate 1.0.3","title":"medfate 1.0.3","text":"Nash-Sutcliffe efficiency (NSE) implemented spwb_validation","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-102","dir":"Changelog","previous_headings":"","what":"medfate 1.0.2","title":"medfate 1.0.2","text":"Bug correction use organic matter Saxton (2006) equations (thanks Milan Fischer). Recodification soilgridParams due new SoilGrids REST API (removed dependency GSIF). New function ‘redefineSoilLayers’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-101","dir":"Changelog","previous_headings":"","what":"medfate 1.0.1","title":"medfate 1.0.1","text":"New root functions Bulk density stored soil object initialization Advanced plant water pools Belowground inputs restructured","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-100","dir":"Changelog","previous_headings":"","what":"medfate 1.0.0","title":"medfate 1.0.0","text":"CRAN release: 2020-05-17 Reorganization growth function Clarification gross net photosynthesis ‘spwb_resetInputs’ ‘resetInputs’ Dependence kmax temperature (due sap dynamic viscosity) incorporated Functions plot.spwb plot.pwb modified draw subdaily dynamics subset dates","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-091","dir":"Changelog","previous_headings":"","what":"medfate 0.9.1","title":"medfate 0.9.1","text":"Small bug fixes update ‘spwb_resetInputs’ Update plant water pools New output (annual stand summaries aboveground structure) function ‘growth’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-090","dir":"Changelog","previous_headings":"","what":"medfate 0.9.0","title":"medfate 0.9.0","text":"CRAN release: 2020-03-23 New parametrization data set ‘SpParamsUS’ Function ‘hydrology_verticalInputs’ replaced ‘hydrology_soilWaterInputs’ ‘hydrology_soilInfiltrationPercolation’. New simulation control option: ‘plantWaterPools’. Hard (Imports) dependency GSIF changed soft (Suggests) one.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-089","dir":"Changelog","previous_headings":"","what":"medfate 0.8.9","title":"medfate 0.8.9","text":"Update supply function plot.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-088","dir":"Changelog","previous_headings":"","what":"medfate 0.8.8","title":"medfate 0.8.8","text":"New function ‘soil_rockWeight2Volume’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-087","dir":"Changelog","previous_headings":"","what":"medfate 0.8.7","title":"medfate 0.8.7","text":"Corrections energy balance zero LAI (deciduous species) SFI functions moved medfateland soilgridParams modified accept SpatialPoints object input","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-086","dir":"Changelog","previous_headings":"","what":"medfate 0.8.6","title":"medfate 0.8.6","text":"New function ‘spwb_sensitivity’ sensitivity analyses New control parameter ‘unlimitedSoilWater’ Bug correction canopy height LAI = 0 Modifications spwb_ldrOptimization work transpirationMode = “Sperry” New function spwb_ldrExploration","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-085","dir":"Changelog","previous_headings":"","what":"medfate 0.8.5","title":"medfate 0.8.5","text":"New control parameter ‘fracLeafResistance’ Different control options parameter ‘cavitationRefill’ New control parameter ‘cavitationRecoveryMaximumRate’ Control parameter ‘hydraulicCostFunction’ replaced ‘costModifier’ ‘gainModifier’ New control parameter ‘cuticularTranspiration’ Numerical controls avoid NaN functions ‘soil_theta2psiSX’ ‘soil_psi2thetaSX’ Bug correction estimation root conductance proportions","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-084","dir":"Changelog","previous_headings":"","what":"medfate 0.8.4","title":"medfate 0.8.4","text":"Water balance console output modified spwb New approach plant water compartments ‘capacitance = TRUE’ Output plant water balance New option control Stem segments fixed two functional parameter pRootDisc removed Sperry’s advanced model Bug correction fuel_cohortFineFMC Remove ksympver add klatleaf/klatstem control parameters","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-083","dir":"Changelog","previous_headings":"","what":"medfate 0.8.3","title":"medfate 0.8.3","text":"Reference book (medfatebook) launched Fraction absorbed SWR output Granier’s transpiration ‘Stand’ data frame output spwb(), separated ‘WaterBalance’ New function ‘forest_mapTreeTable’, ‘forest_mapShrubTable’ ‘forest_mapWoodyTables’ ’stand_*’ functions stand-level properties SWR soil absorption snow pack present Sperry’s model verticalLayerSize made control parameter Granier’s model Changes light parameters: New parameter ‘alphaSWR’. ‘albedo’ renamed ‘gammaSWR’. ‘k’ renamed ‘kPAR’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-082","dir":"Changelog","previous_headings":"","what":"medfate 0.8.2","title":"medfate 0.8.2","text":"CRAN release: 2019-05-29 Modification meteoland better calculate direct/diffuse light slopes Added Narea parameter facilitate estimation Vmax298 New function ‘spwb_validation’. Plot functions using ggplot. Improvement infiltration repartition varying macroporosity. Input values latitude topography stored result simulations. Wind cohort stored result transp_transpirationSperry spwb_day.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-081","dir":"Changelog","previous_headings":"","what":"medfate 0.8.1","title":"medfate 0.8.1","text":"Export Ci spwb_day. New function ‘maximumTranspirationRatioPlot’ Output min/max water potential sunlit shade leaves. New function ‘soil_waterRetentionPlot’ New function ‘waterUseEfficiency’ Default Van Genuchten PTF set ‘Toth’ New functions ‘modifySpParams’ ‘modifyCohortParams’. New function ‘hydrology_interceptionPlot’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-080","dir":"Changelog","previous_headings":"","what":"medfate 0.8.0","title":"medfate 0.8.0","text":"Move spatial classes methods package ‘medfateland’ Implement underscores instead dots separate function groups function names New function transp_Granier. Bug corrected spwb.plot snow plotting. New function ‘pwb’. New function ‘snowMelt’. Transpiration model changed Granier Sperry. PLC set zero DOY = 1 New functions leaf phenology","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-074","dir":"Changelog","previous_headings":"","what":"medfate 0.7.4","title":"medfate 0.7.4","text":"CRAN release: 2019-03-22 Fixing bugs installation platforms Update docs","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-073","dir":"Changelog","previous_headings":"","what":"medfate 0.7.3","title":"medfate 0.7.3","text":"CRAN release: 2019-03-19 Shrub root system using LDR (Z50 Z95) Percolation infiltrated water consistent layer subdivision New function soil.infiltrationRepartition() Adding interception evapotranspiration Checked CRAN","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-072","dir":"Changelog","previous_headings":"","what":"medfate 0.7.2","title":"medfate 0.7.2","text":"Accounting hydraulic redistribution Update plotting functions New function vprofile.RootDistribution. New functions water wilting point (-1.5 MPa) Print extractable water soil Bug correction photosynthesis (now done per leaf area basis) Leaf area distribution (crown fine biomass distribution) following truncated normal [-1.5,1.5]","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-071","dir":"Changelog","previous_headings":"","what":"medfate 0.7.1","title":"medfate 0.7.1","text":"Interception corrected complex model Etol set 0.0000001 spwb export dEdP (equivalent soil-plant conductance) Subdaily results can stored spwb New function spwb.resistances calculate draw segment resistances spwb simulation results. Cohort parameter search SpIndex Gwmin set zero capacitance = FALSE New function spwb.stress calculate drought stress indices PlantStress complex mode now calculated relative soil-plant conductance, compatibility simple mode. Function name changes interception soil hydrology","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-070","dir":"Changelog","previous_headings":"","what":"medfate 0.7.0","title":"medfate 0.7.0","text":"Leaf stem water compartments added Update functions ‘spwb.day’ ‘plot.spwb.day’ Analytical integral van Genuchten function Analytical inverse incomplete gamma function","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-062","dir":"Changelog","previous_headings":"","what":"medfate 0.6.2","title":"medfate 0.6.2","text":"Adapt Rcpp changes Stem water compartments","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-061","dir":"Changelog","previous_headings":"","what":"medfate 0.6.1","title":"medfate 0.6.1","text":"Saturated theta Saxton model Water table depth added Boolean option ‘drainage’ added soil water balance Added subsurface flow processes spwbgrid","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-060","dir":"Changelog","previous_headings":"","what":"medfate 0.6.0","title":"medfate 0.6.0","text":"Function name ‘swb’ (related functions) changed ‘spwb’ Added snow pack soil state variables. Added new control option ‘snowpack’ snowpack dynamics simulation (transpirationMode=‘Simple’) Changed names spatial classes ‘Forest’ ‘Landscape’ Changed name ‘exampleSPF’ ‘exampleSPL’. Function ‘spwbgrid’ functional . Improved documentation function ‘spwb.day’ ‘DOY’ longer needed column meteorological input.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-056","dir":"Changelog","previous_headings":"","what":"medfate 0.5.6","title":"medfate 0.5.6","text":"Growth degree days added output ‘swb()’ New function ‘swb.resetInputs()’ New function ‘hydraulics.vulnerabilityCurvePlot()’ Reorganization help hydraulics. Documentation tissue moisture functions. Update function ‘plot.growth()’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-055","dir":"Changelog","previous_headings":"","what":"medfate 0.5.5","title":"medfate 0.5.5","text":"New functions tissue moisture New function ‘fuel.cohortFineFMC’ New option ‘bySpecies’ aggregate results species functions ‘summary.swb’ ‘summary.growth’ New option ‘bySpecies’ aggregate results species functions ‘plot.swb’ ‘plot.swb.day’ Bulk density added soil parameters New set pedotransfer functions calculate VG parameters texture, bulk density organic content","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-054","dir":"Changelog","previous_headings":"","what":"medfate 0.5.4","title":"medfate 0.5.4","text":"New functions pressure-volume curves Rmarkdown vignettes Added Van Genuchten pedotransfer functions New control parameter added (soil functions) New function ‘forest2belowground’ Update ‘summary.swb’ function","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-053","dir":"Changelog","previous_headings":"","what":"medfate 0.5.3","title":"medfate 0.5.3","text":"Network representation continuum now includes leaf segment Stem fraction total resistance removed estimation root xylem conductance Default kleaf_max (8 temperate angiosperms 5 gymnosperms) New parameter rootxylem_kmax (hydraulic conductivity roots)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-052","dir":"Changelog","previous_headings":"","what":"medfate 0.5.2","title":"medfate 0.5.2","text":"Modification default ntrial Three element supply function added Parameters leaf maximum conductance leaf vulnerability curve added","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-051","dir":"Changelog","previous_headings":"","what":"medfate 0.5.1","title":"medfate 0.5.1","text":"Structure swb.day output Increased output (leaf temperature, stomatal conductance leaf VPD) swb.day Taper modifications New function plot.swb.day","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-050","dir":"Changelog","previous_headings":"","what":"medfate 0.5.0","title":"medfate 0.5.0","text":"Atmospheric CO2 input control parameter Added Hmed species parameter (correct reference conductivity values) Modified documentation","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-049","dir":"Changelog","previous_headings":"","what":"medfate 0.4.9","title":"medfate 0.4.9","text":"Alternative way calculating maximum root conductance Default value averageFracRhizosphereResistance changed 0.15 Root vulnerability curve parameters taken stem vulnerability curve missing (d_root = d_stem/2)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-048","dir":"Changelog","previous_headings":"","what":"medfate 0.4.8","title":"medfate 0.4.8","text":"Leaf radiation balance LWR soil New output swb Bug fix plot.swb (match according transpiration model)","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-047","dir":"Changelog","previous_headings":"","what":"medfate 0.4.7","title":"medfate 0.4.7","text":"Profit maximization sunlit shade leaves separately Bug correction swb Check stomatal conductances profit maximization","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-046","dir":"Changelog","previous_headings":"","what":"medfate 0.4.6","title":"medfate 0.4.6","text":"Radiation absorbed trunks Separation energy balance components","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-045","dir":"Changelog","previous_headings":"","what":"medfate 0.4.5","title":"medfate 0.4.5","text":"New control parameter: Canopy thermal capacity per LAI Update calls meteoland (diffuse radiation) Wind value missing data added control","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-044","dir":"Changelog","previous_headings":"","what":"medfate 0.4.4","title":"medfate 0.4.4","text":"Minimum windspeed (1.0 m/s) Progressive leaf fall Bug correction (swb.plot) Energy balance output/plot Modified conductance scaling","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-043","dir":"Changelog","previous_headings":"","what":"medfate 0.4.3","title":"medfate 0.4.3","text":"Added new parameter ‘LeafWidth’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-042","dir":"Changelog","previous_headings":"","what":"medfate 0.4.2","title":"medfate 0.4.2","text":"Design changes radiation balance (soil/canopy/atmosphere) Added temperature balance summary.swb plot.swb Added new parameter ‘albedo’","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-041","dir":"Changelog","previous_headings":"","what":"medfate 0.4.1","title":"medfate 0.4.1","text":"Documentation soil thermodynamics Energy balance output swb.day","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-040","dir":"Changelog","previous_headings":"","what":"medfate 0.4.0","title":"medfate 0.4.0","text":"Added soil temperature state variables (‘complex’ mode) Added canopy temperature state variable (‘complex’ mode) ‘gdd’ swbInput used initial growth degree days Soil thermodynamics.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-037","dir":"Changelog","previous_headings":"","what":"medfate 0.3.7","title":"medfate 0.3.7","text":"Added vertical layer size option control. New function ‘soilgridsParams’ (calls functions package ‘GSIF’) Added longwave radiation leaf energy balance.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-036","dir":"Changelog","previous_headings":"","what":"medfate 0.3.6","title":"medfate 0.3.6","text":"Added new pedotransfer functions organic matter. New function added ‘soil.waterFC’. Xylem taper added option control. Hydraulic cost function added option control. New function ‘light.instantaneousLightExtinctionAbsortion’. New functions ‘transp.dayCanopyTranspiration’ ‘transp.dayCanopyTranspirationPlot’.","code":""},{"path":"https://emf-creaf.github.io/medfate/news/index.html","id":"medfate-035","dir":"Changelog","previous_headings":"","what":"medfate 0.3.5","title":"medfate 0.3.5","text":"Control numerical methods supply function added ‘defaulControlParams’. Added new function ‘swb.ldrCalibration’ calibrate root distribution swb simulations (Victor Granda) Added documentation light extinction functions ‘light.layerIrradianceFraction’, ‘light.layerSunlitFraction’ ‘light.cohortSunlitShadeAbsorbedRadiation’.","code":""}]
